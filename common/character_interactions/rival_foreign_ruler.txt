rival_ruler = {

	on_other_nation = no
	on_own_nation = no
	message = no
	
	sound = "event:/SFX/UI/Character/Generic/sfx_ui_character_punishment"
	
	potential_trigger = {
		hidden:scope:target = {
			is_alive = yes
			OR = {
				employer = scope:actor
				is_ruler = yes
			}
			NOT = { employer = { tag = REB } }
			NOT = { employer = { tag = BAR } }
			NOT = { scope:target = scope:actor.current_ruler }
			is_mercenary = no
			NOT = {
				is_rival = scope:actor.current_ruler
			}
		}
	}
	
	allowed_trigger = {
		scope:target = {
			OR = {
				is_ruler = yes
				employer = scope:actor
			}
			NOT = {
				is_friend = scope:actor.current_ruler
			}
			NOT = {
				is_rival = scope:actor.current_ruler
			}
		}
		trigger_if = {
			limit = {
				NOT = {
					scope:target.employer = scope:actor
				}
			}
			scope:actor = {
				in_diplomatic_range = scope:target.employer
			}
			scope:target.employer = {
				opinion = {
					target = scope:actor
					value < 0
				}
			}
		}
		scope:actor.current_ruler = {
			can_get_rivals = yes
		}
	}
	
	effect = {
		scope:target = {
			add_rival = scope:actor.current_ruler
		}
		if = {
			limit = {
				scope:target = {
					employer = scope:actor
				}
			}
			scope:actor.current_ruler = {
				add_popularity = -5
			}
		}
	}
	
}	

derival_ruler = {

	on_other_nation = no
	on_own_nation = no
	message = no
	
	sound = "event:/SFX/UI/Character/Generic/sfx_ui_character_reward"
	
	potential_trigger = {
		hidden:scope:target = {
			is_alive = yes
			is_rival = scope:actor.current_ruler
		}
	}
	
	allowed_trigger = {
		scope:target = {
			is_rival = scope:actor.current_ruler
		}
		scope:target.employer = {
			opinion = {
				target = scope:actor
				value >= 0
			}
		}
		trigger_if = {
			limit = {
				exists = scope:target.employer
				scope:target.employer = scope:actor
			}
			scope:actor = {
				political_influence >= 30
			}
		}
	}
	
	effect = {
		if = {
			limit = {
				exists = scope:target.employer
				scope:target.employer = scope:actor
			}
			scope:actor = {
				add_political_influence = -30
			}
		}
		scope:target = {
			remove_rival = scope:actor.current_ruler
		}
	}
	
}