# Popularity
migratory_settle_tooltip_svalue = {
	value = num_of_migrants
	if = {
		limit = {
			NOT = { unit_location.owner = unit_owner }
		}
		
		value = unit_location.total_population
		min = 1
	}
}
#Theres gotta be a better way to do this, this sucks
#Rhodes naval battle counter
rhodes_armada_battles_won_svalue = {
	value = 0
	if = {
		limit = { has_variable = error_log_appeasing_var }
		if = {
			limit = { c:RHO.var:armada_battle_counter = 1 }
			add = 1
		}
		else_if = {
			limit = { c:RHO.var:armada_battle_counter = 2 }
			add = 2		
		}
		else_if = {
			limit = { c:RHO.var:armada_battle_counter = 3 }
			add = 3		
		}
		else_if = {
			limit = { c:RHO.var:armada_battle_counter = 4 }
			add = 4		
		}
		else_if = {
			limit = { c:RHO.var:armada_battle_counter = 5 }
			add = 5		
		}
		else_if = {
			limit = { c:RHO.var:armada_battle_counter = 6 }
			add = 6		
		}
		else_if = {
			limit = { c:RHO.var:armada_battle_counter = 7 }
			add = 7		
		}
		else_if = {
			limit = { c:RHO.var:armada_battle_counter = 8 }
			add = 8		
		}
		else_if = {
			limit = { c:RHO.var:armada_battle_counter = 9 }
			add = 9	
		}
		else_if = {
			limit = { c:RHO.var:armada_battle_counter >= 10 }
			add = 10		
		}
	}
	max = 10
}
rhodes_legion_battles_won_svalue = {
	value = 0
	if = {
		limit = { has_variable = error_log_appeasing_var_2 }
		if = {
			limit = { c:RHO.var:legion_battle_counter = 1 }
			add = 1
		}
		else_if = {
			limit = { c:RHO.var:legion_battle_counter = 2 }
			add = 2		
		}
		else_if = {
			limit = { c:RHO.var:legion_battle_counter = 3 }
			add = 3		
		}
		else_if = {
			limit = { c:RHO.var:legion_battle_counter = 4 }
			add = 4		
		}
		else_if = {
			limit = { c:RHO.var:legion_battle_counter = 5 }
			add = 5		
		}
		else_if = {
			limit = { c:RHO.var:legion_battle_counter = 6 }
			add = 6		
		}
		else_if = {
			limit = { c:RHO.var:legion_battle_counter = 7 }
			add = 7		
		}
		else_if = {
			limit = { c:RHO.var:legion_battle_counter = 8 }
			add = 8		
		}
		else_if = {
			limit = { c:RHO.var:legion_battle_counter = 9 }
			add = 9	
		}
		else_if = {
			limit = { c:RHO.var:legion_battle_counter = 10 }
			add = 10		
		}
		else_if = {
			limit = { c:RHO.var:legion_battle_counter = 11 }
			add = 11		
		}
		else_if = {
			limit = { c:RHO.var:legion_battle_counter = 12 }
			add = 12		
		}
		else_if = {
			limit = { c:RHO.var:legion_battle_counter = 13 }
			add = 13		
		}
		else_if = {
			limit = { c:RHO.var:legion_battle_counter = 14 }
			add = 14		
		}
		else_if = {
			limit = { c:RHO.var:legion_battle_counter >= 15 }
			add = 15		
		}
	}
	max = 15
}
thebes_legion_battles_won_svalue = {
	value = 0
	if = {
		limit = { has_variable = error_log_appeasing_var_3 }
		if = {
			limit = { c:THE.var:legion_battle_counter = 1 }
			add = 1
		}
		else_if = {
			limit = { c:THE.var:legion_battle_counter = 2 }
			add = 2		
		}
		else_if = {
			limit = { c:THE.var:legion_battle_counter = 3 }
			add = 3		
		}
		else_if = {
			limit = { c:THE.var:legion_battle_counter = 4 }
			add = 4		
		}
		else_if = {
			limit = { c:THE.var:legion_battle_counter = 5 }
			add = 5		
		}
		else_if = {
			limit = { c:THE.var:legion_battle_counter = 6 }
			add = 6		
		}
		else_if = {
			limit = { c:THE.var:legion_battle_counter = 7 }
			add = 7		
		}
		else_if = {
			limit = { c:THE.var:legion_battle_counter = 8 }
			add = 8		
		}
		else_if = {
			limit = { c:THE.var:legion_battle_counter = 9 }
			add = 9	
		}
		else_if = {
			limit = { c:THE.var:legion_battle_counter = 10 }
			add = 10		
		}
		else_if = {
			limit = { c:THE.var:legion_battle_counter = 11 }
			add = 11		
		}
		else_if = {
			limit = { c:THE.var:legion_battle_counter = 12 }
			add = 12		
		}
		else_if = {
			limit = { c:THE.var:legion_battle_counter = 13 }
			add = 13		
		}
		else_if = {
			limit = { c:THE.var:legion_battle_counter = 14 }
			add = 14		
		}
		else_if = {
			limit = { c:THE.var:legion_battle_counter = 15 }
			add = 15		
		}
		else_if = {
			limit = { c:THE.var:legion_battle_counter = 16 }
			add = 16
		}
		else_if = {
			limit = { c:THE.var:legion_battle_counter = 17 }
			add = 17
		}
		else_if = {
			limit = { c:THE.var:legion_battle_counter = 18 }
			add = 18
		}
		else_if = {
			limit = { c:THE.var:legion_battle_counter = 19 }
			add = 19
		}
		else_if = {
			limit = { c:THE.var:legion_battle_counter = 20 }
			add = 20
		}
		else_if = {
			limit = { c:THE.var:legion_battle_counter = 21 }
			add = 21
		}
		else_if = {
			limit = { c:THE.var:legion_battle_counter = 22 }
			add = 22
		}
		else_if = {
			limit = { c:THE.var:legion_battle_counter = 23 }
			add = 23
		}
		else_if = {
			limit = { c:THE.var:legion_battle_counter = 24 }
			add = 24
		}
		else_if = {
			limit = { c:THE.var:legion_battle_counter >= 25 }
			add = 25
		}
	}
	max = 25
}
bithynia_legion_battles_won_svalue = {
	value = 0
	if = {
		limit = { has_variable = error_log_appeasing_var_3 }
		if = {
			limit = { c:BIT.var:legion_battle_counter = 1 }
			add = 1
		}
		else_if = {
			limit = { c:BIT.var:legion_battle_counter = 2 }
			add = 2		
		}
		else_if = {
			limit = { c:BIT.var:legion_battle_counter = 3 }
			add = 3		
		}
		else_if = {
			limit = { c:BIT.var:legion_battle_counter = 4 }
			add = 4		
		}
		else_if = {
			limit = { c:BIT.var:legion_battle_counter = 5 }
			add = 5		
		}
		else_if = {
			limit = { c:BIT.var:legion_battle_counter = 6 }
			add = 6		
		}
		else_if = {
			limit = { c:BIT.var:legion_battle_counter = 7 }
			add = 7		
		}
		else_if = {
			limit = { c:BIT.var:legion_battle_counter = 8 }
			add = 8		
		}
		else_if = {
			limit = { c:BIT.var:legion_battle_counter = 9 }
			add = 9	
		}
		else_if = {
			limit = { c:BIT.var:legion_battle_counter = 10 }
			add = 10		
		}
		else_if = {
			limit = { c:BIT.var:legion_battle_counter = 11 }
			add = 11		
		}
		else_if = {
			limit = { c:BIT.var:legion_battle_counter = 12 }
			add = 12		
		}
		else_if = {
			limit = { c:BIT.var:legion_battle_counter = 13 }
			add = 13		
		}
		else_if = {
			limit = { c:BIT.var:legion_battle_counter = 14 }
			add = 14		
		}
		else_if = {
			limit = { c:BIT.var:legion_battle_counter = 15 }
			add = 15		
		}
		else_if = {
			limit = { c:BIT.var:legion_battle_counter = 16 }
			add = 16
		}
		else_if = {
			limit = { c:BIT.var:legion_battle_counter = 17 }
			add = 17
		}
		else_if = {
			limit = { c:BIT.var:legion_battle_counter = 18 }
			add = 18
		}
		else_if = {
			limit = { c:BIT.var:legion_battle_counter = 19 }
			add = 19
		}
		else_if = {
			limit = { c:BIT.var:legion_battle_counter = 20 }
			add = 20
		}
		else_if = {
			limit = { c:BIT.var:legion_battle_counter = 21 }
			add = 21
		}
		else_if = {
			limit = { c:BIT.var:legion_battle_counter = 22 }
			add = 22
		}
		else_if = {
			limit = { c:BIT.var:legion_battle_counter = 23 }
			add = 23
		}
		else_if = {
			limit = { c:BIT.var:legion_battle_counter = 24 }
			add = 24
		}
		else_if = {
			limit = { c:BIT.var:legion_battle_counter >= 25 }
			add = 25
		}
	}
	max = 25
}

parthia_battles_won_svalue = {
	value = 0
	if = {
		limit = { has_variable = error_log_appeasing_var }
		if = {
			limit = { c:PAR.var:legion_battle_counter = 1 }
			add = 1
		}
		else_if = {
			limit = { c:PAR.var:legion_battle_counter = 2 }
			add = 2		
		}
		else_if = {
			limit = { c:PAR.var:legion_battle_counter = 3 }
			add = 3		
		}
		else_if = {
			limit = { c:PAR.var:legion_battle_counter = 4 }
			add = 4		
		}
		else_if = {
			limit = { c:PAR.var:legion_battle_counter = 5 }
			add = 5		
		}
	}
	max = 5
}

tribal_duel_fighter_health_svalue = {
	value = 0
	if = {
		limit = {
			has_variable = duel_rounds_count
		}
		add = scope:fighter_of_duel.martial
		multiply = 2
		subtract = scope:target.martial
	}
	max = 45
}
tribal_duel_target_health_svalue = {
	value = 0
	if = {
		limit = {
			has_variable = duel_rounds_count
		}
		add = scope:target.martial
		multiply = 2
		subtract = scope:fighter_of_duel.martial
	}
	max = 45
}
tribal_duel_winner_svalue = {
	value = scope:fighter_of_duel.martial #Start with the fighters martial
	if = {
		limit = { has_variable = duel_rounds_count }
		#Factor in the choice of weapon and each weapon's effectiveness against each other
		##If weapon is the same only determine winner by each fighters martial
		if = {
			limit = { has_variable = random_effects_1 } 	#Opponent chooses axe
			if = {
				limit = { has_variable = spear_combat }
				add = {
					integer_range = {
						max = 3
						min = -2
					}
				}
			}
			else_if = {
				limit = { has_variable = sword_combat }
				add = {
					integer_range = {
						max = 3
						min = -3
					}
				}
			}
			else_if = {
				limit = { has_variable = horse_combat }
				add = {
					integer_range = {
						max = 2
						min = -3
					}
				}
			}
			else_if = {
				limit = { has_variable = hands_combat }
				add = {
					integer_range = {
						max = 1
						min = -5
					}
				}
			}
		}
		else_if = {
			limit = { has_variable = random_effects_2 } 	#Opponent chooses spear
			if = {
				limit = { has_variable = axe_combat }
				add = {
					integer_range = {
						max = 3
						min = -2
					}
				}
			}
			else_if = {
				limit = { has_variable = sword_combat }
				add = {
					integer_range = {
						max = 1
						min = -2
					}
				}
			}
			else_if = {
				limit = { has_variable = horse_combat }
				add = {
					integer_range = {
						max = 3
						min = -2
					}
				}
			}
			else_if = {
				limit = { has_variable = hands_combat }
				add = {
					integer_range = {
						max = 1
						min = -5
					}
				}
			}
		}
		else_if = {
			limit = { has_variable = random_effects_3 }	#Opponent chooses sword
			if = { 
				limit = { has_variable = axe_combat }
				add = {
					integer_range = {
						max = 3
						min = -3
					}
				}
			}
			else_if = {
				limit = { has_variable = spear_combat }
				add = {
					integer_range = {
						max = 2
						min = -1
					}
				}
			}
			else_if = {
				limit = { has_variable = horse_combat }
				add = {
					integer_range = {
						max = 1
						min = -3
					}
				}
			}
			else_if = {
				limit = { has_variable = hands_combat }
				add = {
					integer_range = {
						max = 1
						min = -5
					}
				}
			}
		}
		else_if = {
			limit = { has_variable = random_effects_4 }	#Opponent chooses horseback
			if = { 
				limit = { has_variable = axe_combat }
				add = {
					integer_range = {
						max = 3
						min = -2
					}
				}
			}
			else_if = {
				limit = { has_variable = spear_combat }
				add = {
					integer_range = {
						max = 1
						min = -3
					}
				}
			}
			else_if = {
				limit = { has_variable = sword_combat }
				add = {
					integer_range = {
						max = 3
						min = 1
					}
				}
			}
			else_if = {
				limit = { has_variable = hands_combat }
				add = {
					integer_range = {
						max = 1
						min = -5
					}
				}
			}
		}
		else_if = {
			limit = { has_variable = random_effects_5 }	#Opponent chooses hands...what an idiot
			if = { 
				limit = { has_variable = axe_combat }
				add = {
					integer_range = {
						max = 3
						min = -2
					}
				}
			}
			else_if = {
				limit = { has_variable = spear_combat }
				add = {
					integer_range = {
						max = 1
						min = -3
					}
				}
			}
			else_if = {
				limit = { has_variable = sword_combat }
				add = {
					integer_range = {
						max = 3
						min = 1
					}
				}
			}
			else_if = {
				limit = { has_variable = hands_combat }
				add = {
					integer_range = {
						max = 1
						min = -5
					}
				}
			}
		}
	}
	max = 20
	min = 1
}

#Used in country switch
old_treasury_svalue = {
	value = scope:new_country.treasury
}

old_manpower_svalue = {
	value = scope:new_country.manpower
}

old_political_influence_svalue = {
	value = scope:new_country.political_influence
}

remove_treasury_svalue = {
	value = scope:new_country.treasury
	multiply = -1
}

remove_manpower_svalue = {
	value = scope:new_country.manpower
	multiply = -1
}

remove_political_influence_svalue = {
	value = scope:new_country.political_influence
}