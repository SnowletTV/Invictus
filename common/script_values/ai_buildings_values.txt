# ----------------------------------------------------------------------------------------------------------------------
# ANBEELD'S BUILDING RELATIVE CHANCE
# Similar to IRC, check /common/inventions/invention_relative_chance.info and /common/script_values/inventions.txt
# TL;DR Nice and handy 1/x
# ----------------------------------------------------------------------------------------------------------------------

# ------------------- #
# PER-BUILDING VALUES #
# ------------------- #

brc_fortress_ramparts = {
    value = 0
}

brc_port = {
    # Don't build and destroy if exists
    if = {
        limit = {
            # State borders change very rapidly in the first years
            current_date >= 460.1.1
            # Don't destroy anything while at war
            owner = {
                war = no
            }
            # Don't ever destroy the last port we have country wide
            OR = {
                owner.num_of_ports > 1
                num_of_port_building > 1
            }
            OR = {
                # Handle non-city territories where state has too much ports
                AND = {
                    has_city_status = no
                    # If mine or farm, destroy if more than enough ports or can build it somewhere without mine or farm
                    trigger_if = {
                        limit = {
                            is_territory_with_preference_for_mine_or_farm = yes
                        }
                        OR = {
                            territory_state_has_more_than_enough_ports = yes
                            territory_state_can_build_new_port_elsewhere_without_mine_or_farm = yes
                        }
                    }
                    # If not, destroy if more than enough ports and there's no mine or farm that wants it port destroyed
                    trigger_else = {
                        territory_state_has_more_than_enough_ports = yes
                        territory_state_has_port_elsewhere_with_mine_or_farm = no
                    }
                }
                # Tier >=2 ports in countries that don't want any mega ports
                AND = {
                    port_level_including_construction >= 2
                    owner = {
                        num_of_mega_ports_wanted = 0
                        num_of_giga_ports_wanted = 0
                    }
                }
                # Tier 2 ports that won't turn mega anytime soon but are taking up building slots
                AND = {
                    port_level_including_construction = 2
                    owner = {
                        has_wanted_num_of_high_tier_ports = {
                            tier = mega
                        }
                        has_wanted_num_of_high_tier_ports = {
                            tier = giga
                        }
                    }
                }
                # Tier 4 ports that won't turn giga anytime soon but are taking up building slots
                AND = {
                    port_level_including_construction = 4
                    owner = {
                        has_wanted_num_of_high_tier_ports = {
                            tier = giga
                        }
                    }
                }
                # Rebuild mega and giga ports from capital to another capital region territory
                AND = {
                    is_capital = yes
                    save_temporary_scope_as = current_territory
                    trigger_if = {
                        limit = {
                            port_level_including_construction >= 2
                            port_level_including_construction <= 3
                        }
                        owner.capital_scope.state.region = {
                            any_region_province = {
                                owner = scope:current_territory.owner
                                is_capital = no
                                is_eligible_for_building_high_tier_port = {
                                    tier = mega
                                }
                            }
                        }
                    }
                    trigger_else_if = {
                        limit = {
                            port_level_including_construction >= 4
                        }
                        owner.capital_scope.state.region = {
                            any_region_province = {
                                owner = scope:current_territory.owner
                                is_capital = no
                                is_eligible_for_building_high_tier_port = {
                                    tier = giga
                                }
                            }
                        }
                    }
                    trigger_else = {
                        always = no
                    }
                }
            }
        }
        value = -1
    }
    # Build... unless?
    else = {
        if = {
            limit = {
                brc_needs_port = yes
            }
            value = brc_territory_importance
            multiply = brc_100
        }
        else_if = {
            limit = {
                brc_wants_port = yes
            }
            value = brc_territory_importance
            multiply = brc_80
        }
        else = {
            value = 0
        }
    }
}

brc_barracks = {
    # Don't build and destroy if exists
    if = {
        limit = {
            # Don't destroy anything while at war
            owner = {
                war = no
            }
            OR = {
                ai_required_to_destroy_in_settlement = yes
                is_territory_with_preference_for_mine_or_farm = yes
            }
        }
        value = -1
    }
    # Don't build
    else_if = {
        limit = {
            OR = {
                ai_prohibited_to_build_in_settlement = yes
                has_trade_good_of_medium_priority = yes
                has_trade_good_of_high_priority = yes
                has_trade_good_of_extreme_priority = yes
            }
        }
        value = 0
    }
    # Build
    else = {
        value = brc_territory_importance
        multiply = brc_20
    }
}

brc_foundry = {
    # Don't build and destroy if exists
    if = {
        limit = {
            # Don't destroy anything while at war
            owner = {
                war = no
            }
            ai_required_to_destroy_in_city = yes
        }
        value = -1
    }
    # Don't build
    else_if = {
        limit = {
            ai_prohibited_to_build_in_city = yes
        }
        value = 0
    }
    else = {
        value = brc_territory_importance
        if = {
            limit = {
                has_trade_good_of_extreme_priority = yes
            }
            multiply = brc_95
        }
        else_if = {
            limit = {
                has_trade_good_of_high_priority = yes
            }
            multiply = brc_80
        }
        else_if = {
            limit = {
                has_trade_good_of_medium_priority = yes
            }
            multiply = brc_65
        }
        else = {
            multiply = brc_45
        }
    }
}

brc_aqueduct = {
    # Don't build and destroy if exists
    if = {
        limit = {
            # Don't destroy anything while at war
            owner = {
                war = no
            }
            ai_required_to_destroy_in_city = yes
        }
        value = -1
    }
    # Don't build
    else_if = {
        limit = {
            OR = {
                ai_prohibited_to_build_in_city = yes
                # Must be close to population cap
                total_population < population_cap_minus_10
                # Build more useful stuff first
                has_any_city_ratio_building_maxed_out = no
                # No issues with food in state
                state = {
				    state_has_close_to_low_food = yes
                }
			}
        }
        value = 0
    }
    else = {
        value = brc_territory_importance
        # In perfect conditions we can't and shouldn't refuse to get some juicy aqueducts
        if = {
            limit = {
                total_population >= population_cap_minus_2
            }
            multiply = brc_75
        }
        else = {
            # Capitals should prioritize aqueducts even with 10 pops before limit to increase their chances of becoming
            # a metropolis, 10 before limit specifically means they are guaranteed to have a free building slot for it
            if = {
                limit = {
                    is_capital = yes
                }
                multiply = brc_65
            }
            # Regular cities are more dependent on slot luck to avoid world getting filled with metropolises eventually
            else = {
                if = {
                    limit = {
                        total_population >= population_cap_minus_5
                    }
                    multiply = brc_45
                }
                else = {
                    multiply = 0
                }
            }
        }
    }
}

brc_temple = {
    # Don't build and destroy if exists
    if = {
        limit = {
            # Don't destroy anything while at war
            owner = {
                war = no
            }
            ai_required_to_destroy_in_city = yes
        }
        value = -1
    }
    # Don't build
    else_if = {
        limit = {
            ai_prohibited_to_build_in_city = yes
        }
        value = 0
    }
    else = {
        value = brc_territory_importance
        if = {
            limit = {
                is_dominant_territory_religion_same_as_country = no
            }
            multiply = brc_50 # Shared with Forum
        }
        else = {
            multiply = brc_35
        }
    }
}

brc_granary = {
    # Don't build and destroy if exists
    if = {
        limit = {
            # Don't destroy anything while at war
            owner = {
                war = no
            }
            ai_required_to_destroy_in_city = yes
        }
        value = -1
    }
    # Don't build
    else_if = {
        limit = {
            OR = {
                ai_prohibited_to_build_in_city = yes
                num_of_population_building >= level_of_granary_wanted
            }
        }
        value = 0
    }
    else = {
        value = brc_territory_importance
        multiply = brc_85
    }
}

brc_theatre = {
    # Don't build and destroy if exists
    if = {
        limit = {
            # Don't destroy anything while at war
            owner = {
                war = no
            }
            ai_required_to_destroy_in_city = yes
        }
        value = -1
    }
    # Don't build
    else_if = {
        limit = {
            ai_prohibited_to_build_in_city = yes
        }
        value = 0
    }
    else = {
        value = brc_territory_importance
        if = {
            limit = {
                is_dominant_territory_culture_integrated = no
            }
            # Shared with Court of Law, but they are exclusive
            multiply = brc_60
        }
        else = {
            multiply = brc_35
        }
    }
}

brc_library = {
    # Don't build and destroy if exists
    if = {
        limit = {
            # Don't destroy anything while at war
            owner = {
                war = no
            }
            ai_required_to_destroy_in_city = yes
        }
        value = -1
    }
    # Don't build
    else_if = {
        limit = {
            OR = {
                ai_prohibited_to_build_in_city = yes
                brc_wants_any_ratio_building = yes
                # No need for more libraries if we are reading enough already
                brc_wants_more_research_modifier_buildings = no
                # Don't build too much of the same, unless there's too much of everything
                AND = {
                    territory_has_high_num_of_library_building = yes
                    territory_has_high_num_of_all_modifier_buildings = no
                }
            }
        }
        value = 0
    }
    else = {
        value = brc_territory_importance
        if = {
            limit = {
                OR = {
                    territory_has_more_than_one_academy = yes
                    territory_has_more_than_one_court_of_law = yes
                }
            }
            multiply = brc_40
        }
        else = {
            multiply = brc_30
        }
    }
}

brc_academy = {
    if = {
        limit = {
            # Don't destroy anything while at war
            owner = {
                war = no
            }
            OR = {
                ai_required_to_destroy_in_city = yes
                # Remove level 1 if there's some other level 2+ ratio building
                AND = {
                    # Capital should always have Academy
                    is_capital = no
                    territory_has_more_than_one_academy = no
                    OR = {
                        territory_has_more_than_one_court_of_law = yes
                        territory_has_more_than_one_forum = yes
                        territory_has_more_than_one_mill = yes
                    }
                }
            }
        }
        value = -1
    }
    else_if = {
        limit = {
            OR = {
                ai_prohibited_to_build_in_city = yes
                brc_wants_academy = no
            }
        }
        value = 0
    }
    else = {
        value = brc_territory_importance
        multiply = brc_70
        multiply = {
            value = 1.00
            add = {
                value = num_of_academy_building
                multiply = brc_ratio_building_weight_per_level
            }
        }
    }
}

# Set to base value of its siblings if there are many nobles, otherwise never build
brc_commerce = {
    # Don't build and destroy if exists
    if = {
        limit = {
            # Don't destroy anything while at war
            owner = {
                war = no
            }
            ai_required_to_destroy_in_city = yes
        }
        value = -1
    }
    # Don't build
    else_if = {
        limit = {
            OR = {
                ai_prohibited_to_build_in_city = yes
                brc_wants_any_ratio_building = yes
                territory_has_more_than_one_academy = no
                # Don't build too much of the same, unless there's too much of everything
                AND = {
                    territory_has_high_num_of_commerce_building = yes
                    territory_has_high_num_of_all_modifier_buildings = no
                }
            }
        }
        value = 0
    }
    else = {
        value = brc_territory_importance
        multiply = brc_30
    }
}

brc_court = {
    if = {
        limit = {
            # Don't destroy anything while at war
            owner = {
                war = no
            }
            OR = {
                ai_required_to_destroy_in_city = yes
                # Remove level 1 if there's some other level 2+ ratio building
                AND = {
                    territory_has_more_than_one_court_of_law = no
                    OR = {
                        territory_has_more_than_one_academy = yes
                        territory_has_more_than_one_forum = yes
                        territory_has_more_than_one_mill = yes
                    }
                }
            }
        }
        value = -1
    }
    else_if = {
        limit = {
            OR = {
                ai_prohibited_to_build_in_city = yes
                brc_wants_court_of_law = no
            }
        }
        value = 0
    }
    else = {
        value = brc_territory_importance
        multiply = brc_60
        multiply = {
            value = 1.00
            add = {
                value = num_of_court_building
                multiply = brc_ratio_building_weight_per_level
            }
        }
    }
}

brc_military = {
    # Don't build and destroy if exists
    if = {
        limit = {
            # Don't destroy anything while at war
            owner = {
                war = no
            }
            ai_required_to_destroy_in_city = yes
        }
        value = -1
    }
    # Don't build
    else_if = {
        limit = {
            OR = {
                ai_prohibited_to_build_in_city = yes
                brc_wants_any_ratio_building = yes
                # Don't build too much of the same, unless there's too much of everything
                AND = {
                    territory_has_high_num_of_military_building = yes
                    territory_has_high_num_of_all_modifier_buildings = no
                }
            }
        }
        value = 0
    }
    else = {
        value = brc_territory_importance
        if = {
            limit = {
                OR = {
                    territory_has_more_than_one_court_of_law = yes
                    territory_has_more_than_one_forum = yes
                }
            }
            multiply = brc_40
        }
        else = {
            multiply = brc_30
        }
    }
}

brc_forum = {
    if = {
        limit = {
            # Don't destroy anything while at war
            owner = {
                war = no
            }
            OR = {
                ai_required_to_destroy_in_city = yes
                # Remove level 1 if there's some other level 2+ ratio building
                AND = {
                    territory_has_more_than_one_forum = no
                    OR = {
                        territory_has_more_than_one_academy = yes
                        territory_has_more_than_one_court_of_law = yes
                        territory_has_more_than_one_mill = yes
                    }
                }
            }
        }
        value = -1
    }
    else_if = {
        limit = {
            OR = {
                ai_prohibited_to_build_in_city = yes
                brc_wants_forum = no
            }
        }
        value = 0
    }
    else = {
        value = brc_territory_importance
        multiply = brc_50
        multiply = {
            value = 1.00
            add = {
                value = num_of_forum_building
                multiply = brc_ratio_building_weight_per_level
            }
        }
    }
}

brc_town_hall = {
    # Don't build and destroy if exists
    if = {
        limit = {
            # Don't destroy anything while at war
            owner = {
                war = no
            }
            ai_required_to_destroy_in_city = yes
        }
        value = -1
    }
    # Don't build
    else_if = {
        limit = {
            OR = {
                ai_prohibited_to_build_in_city = yes
                brc_wants_any_ratio_building = yes
                # Don't build too much of the same, unless there's too much of everything
                AND = {
                    territory_has_high_num_of_town_hall_building = yes
                    territory_has_high_num_of_all_modifier_buildings = no
                }
            }
        }
        value = 0
    }
    else = {
        value = brc_territory_importance
        if = {
            limit = {
                OR = {
                    territory_has_more_than_one_forum = yes
                    territory_has_more_than_one_mill = yes
                }
            }
            multiply = brc_40
        }
        else = {
            multiply = brc_30
        }
    }
}

brc_workshop = {
    if = {
        limit = {
            # Don't destroy anything while at war
            owner = {
                war = no
            }
            OR = {
                ai_required_to_destroy_in_city = yes
                # Remove level 1 if there's some other level 2+ ratio building
                AND = {
                    territory_has_more_than_one_mill = no
                    OR = {
                        territory_has_more_than_one_academy = yes
                        territory_has_more_than_one_court_of_law = yes
                        territory_has_more_than_one_forum = yes
                    }
                }
            }
        }
        value = -1
    }
    else_if = {
        limit = {
            OR = {
                ai_prohibited_to_build_in_city = yes
                brc_wants_mill = no
            }
        }
        value = 0
    }
    else = {
        value = brc_territory_importance
        multiply = brc_55
        multiply = {
            value = 1.00
            add = {
                value = num_of_workshop_building
                multiply = brc_ratio_building_weight_per_level
            }
        }
    }
}

brc_latifundia = {
    # Don't build and destroy if exists
    if = {
        limit = {
            # Don't destroy anything while at war
            owner = {
                war = no
            }
            # Can build mine or farm
            OR = {
                ai_required_to_destroy_in_settlement = yes
                is_territory_with_preference_for_mine_or_farm = yes
            }
        }
        value = -1
    }
    # Don't build
    else_if = {
        limit = {
            OR = {
                ai_prohibited_to_build_in_settlement = yes
                AND = {
                    num_of_slaves < num_of_tribesmen
                    NOR = {
                        has_trade_good_of_medium_priority = yes
                        has_trade_good_of_high_priority = yes
                        has_trade_good_of_extreme_priority = yes
                    }
                }
            }
        }
        value = 0
    }
    # Build
    else = {
        value = brc_territory_importance
        multiply = brc_25
    }
}

brc_slave_mine = {
    # Don't build and destroy if exists
    if = {
        limit = {
            # Don't destroy anything while at war
            owner = {
                war = no
            }
            ai_required_to_destroy_in_settlement = yes
        }
        value = -1
    }
    # Don't build
    else_if = {
        limit = {
            ai_prohibited_to_build_in_settlement = yes
        }
        value = 0
    }
    else = {
        value = brc_territory_importance
        if = {
            limit = {
                has_trade_good_of_extreme_priority = yes
            }
            multiply = brc_99
        }
        else_if = {
            limit = {
                has_trade_good_of_high_priority = yes
            }
            multiply = brc_90
        }
        else_if = {
            limit = {
                has_trade_good_of_medium_priority = yes
            }
            multiply = brc_85
        }
        else = {
            multiply = brc_65
        }
    }
}

brc_basic_settlement_infratructure = {
    # Don't build and destroy if exists
    if = {
        limit = {
            # Don't destroy anything while at war
            owner = {
                war = no
            }
            ai_required_to_destroy_in_settlement = yes
        }
        value = -1
    }
    # Don't build
    else_if = {
        limit = {
            ai_prohibited_to_build_in_settlement = yes
        }
        value = 0
    }
    else = {
        value = brc_territory_importance
        if = {
            limit = {
                root.state = {
                    state_has_low_food = yes
                }
            }
            multiply = brc_100
        }
        else_if = {
            limit = {
                OR = {
                    has_trade_good_of_extreme_priority = yes
                    share_of_cities_in_same_state >= 0.3333
                }
            }
            multiply = brc_99
        }
        else_if = {
            limit = {
                has_trade_good_of_high_priority = yes
            }
            multiply = brc_90
        }
        else_if = {
            limit = {
                has_trade_good_of_medium_priority = yes
            }
            multiply = brc_85
        }
        else_if = {
            limit = {
                share_of_cities_in_same_state >= 0.25
            }
            multiply = brc_65
        }
        else_if = {
            limit = {
                share_of_cities_in_same_state >= 0.20
            }
            multiply = brc_55
        }
        else_if = {
            limit = {
                share_of_cities_in_same_state >= 0.1666
            }
            multiply = brc_45
        }
        else = {
            multiply = brc_35
        }
    }
}

brc_hill_fort = {
    # Don't build and destroy if exists
    if = {
        limit = {
            # Don't destroy anything while at war
            owner = {
                war = no
            }
            OR = {
                ai_required_to_destroy_in_settlement = yes
                # Can build mine or farm
			    is_territory_with_preference_for_mine_or_farm = yes
                # Not tribal
                owner = {
                    is_tribal = no
                }
            }
        }
        value = -1
    }
    # Don't build
    else_if = {
        limit = {
            OR = {
                ai_prohibited_to_build_in_settlement = yes
                num_of_slaves >= num_of_tribesmen
                has_trade_good_of_medium_priority = yes
                has_trade_good_of_high_priority = yes
                has_trade_good_of_extreme_priority = yes
            }
        }
        value = 0
    }
    # Build
    else = {
        value = brc_territory_importance
        multiply = brc_20
    }
}

brc_local_forum = {
    value = 0
}

# ----------------- #
# SUPPORTING VALUES #
# ----------------- #

brc_ratio_building_weight_per_level = 0.25

brc_territory_importance = {
    value = 1
    add = {
        value = total_population
        # Treat capital same as regular cities with 25 more pops
        if = {
            limit = {
                is_capital = yes
            }
            add = 25
        }
        multiply = 0.01
    }
}

num_of_territories_in_state = {
    value = 0
    every_state_province = {
        add = 1
    }
}

num_of_territories_in_same_state = {
    value = 0
    add = state.num_of_territories_in_state
}

state_fort_level_svalue = {
    value = 0
    every_state_province = {
        add = fort_level
    }
}

population_cap_minus_2 = {
	value = population_cap
	subtract = 1
}
population_cap_minus_5 = {
	value = population_cap
	subtract = 5
}
population_cap_minus_10 = {
	value = population_cap
	subtract = 5
}

port_level_including_construction = {
    if = {
        limit = {
            can_have_port = no
        }
        value = 0
    }
    else = {
        value = num_of_port_building
        if = {
            limit = {
                has_specific_construction = port_building
            }
            add = 1
        }
    }
}

fort_level_including_construction = {
    value = num_of_fortress_building
    if = {
        limit = {
            has_specific_construction = fortress_building
        }
        add = 1
    }
}

num_of_ports_wanted_in_territory_state = {
    value = 0
    if = {
        limit = {
            save_temporary_scope_as = territory
            OR = {
                num_of_territories_in_same_state >= 5
                # Country has no ports and there's no state where we can build one by the usual rules
                owner = {
                    country_has_at_least_one_port_including_construction = no
                    NOT = {
                        any_country_state = {
                            num_of_territories_in_state >= 5
                            any_state_province = {
                                can_build_port = yes
                            }
                        }
                    }
                }
                # No nearby state of same owner with port, should connect to mainland by water
                NOT = {
                    area = {
                        any_neighbor_area = {
                            any_area_province = {
                                owner = scope:territory.owner
                                has_or_is_building_port = yes
                            }
                        }
                    }
                }
            }
        }
        add = 1
        # +1 in big states where at least 50% of territories can have port
        if = {
            limit = {
                num_of_territories_in_same_state >= 10
                state = {
                    any_state_province = {
                        percent >= 0.50
                        can_have_port = yes
                    }
                }
            }
            add = 1
        }
    }
}

level_of_giga_port_wanted = 5

num_of_giga_ports_wanted = {
    value = 0
    if = {
        limit = {
            rank >= regional_power
            OR = {
                # Military traditions that unlock Octere
                has_military_bonus = nubian_path_13
                has_military_bonus = lydian_path_12
                has_military_bonus = greek_antigonid_path_2_octere
                has_military_bonus = illyrian_path_3
                has_military_bonus = levantine_arabian_path_5
                has_military_bonus = mauryan_coastal_path_end_bonus
                has_military_bonus = persian_achaemenid_path_3
                # Military traditions that unlock Mega-Polyreme
                has_military_bonus = greek_states_path_5
                has_military_bonus = levantine_egyptian_path_2
            }

            # Removed due to performance concerns, reintroduce if there's a cheap way to do so
            # OR = {
            #     num_of_unit_type = {
            #         type = octere
            #         value > 0
            #     }
            #     num_of_unit_type = {
            #         type = mega_galley
            #         value > 0
            #     }
            # }
        }
        add = 1
        if = {
            limit = {
                rank >= great_power
            }
            add = 1
        }
    }
}

level_of_mega_port_wanted = 3

num_of_mega_ports_wanted = {
    value = 0

    # 1 per every 35 coastal territories
    every_owned_province = {
        limit = {
            OR = {
                is_coastal = yes
                can_have_port = yes
            }
        }
        add = 1
    }
    divide = 35
    floor = yes

    # Base value depending on rank so they always want at least some
    if = {
        limit = {
            rank >= regional_power

            # Removed due to performance concerns, reintroduce if there's a cheap way to do so
            # OR = {
            #     num_of_unit_type = {
            #         type = tetrere
            #         value > 0
            #     }
            #     num_of_unit_type = {
            #         type = hexere
            #         value > 0
            #     }
            # }
        }
        add = 1
        if = {
            limit = {
                rank >= major_power
            }
            add = 1
            if = {
                limit = {
                    rank >= great_power
                }
                add = 1
            }
        }
    }

    # Num of high tier ports is shared with giga
    subtract = num_of_giga_ports_wanted
    min = 0
}

port_levels_to_giga_tier = {
    value = owner.level_of_giga_port_wanted
    subtract = port_level_including_construction
}

port_levels_to_mega_tier = {
    value = owner.level_of_mega_port_wanted
    subtract = port_level_including_construction
}

port_tier_enum_mega = 1
port_tier_enum_giga = 2

# 1 per every 20-30 pops - better to sync with 10s, so after reaching threshold AI could build it using the new slot
level_of_granary_wanted = {
    value = total_population
    if = {
        limit = {
            share_of_cities_in_same_state >= 0.40
        }
        divide = 20
    }
    else_if = {
        limit = {
            share_of_cities_in_same_state >= 0.20
        }
        divide = 25
    }
    else = {
        divide = 30
    }
    floor = yes
}

share_of_cities_in_same_state = {
    value = 0
    state = {
        every_state_province = {
            limit = {
                has_city_status = yes
            }
            add = 1
        }
    }
    divide = {
        value = 0
        state = {
            every_state_province = {
                add = 1
            }
        }
        min = 1
    }
}

share_of_cities_in_state = {
    value = 0
    every_state_province = {
        limit = {
            has_city_status = yes
        }
        add = 1
    }
    divide = {
        value = 0
        every_state_province = {
            add = 1
        }
        min = 1
    }
}

# ----------------------------------------------------------------------------------------------------------------------
# GENERATED BRC SCRIPT VALUES, SEE /tools/buildings/building_relative_chance.js
# ----------------------------------------------------------------------------------------------------------------------

brc_5 = 0.3684
brc_from_5_to_10 = 2.1111
brc_from_5_to_15 = 3.3529
brc_from_5_to_20 = 4.75
brc_from_5_to_25 = 6.3333
brc_from_5_to_30 = 8.1429
brc_from_5_to_35 = 10.2308
brc_from_5_to_40 = 12.6667
brc_from_5_to_45 = 15.5455
brc_from_5_to_50 = 19
brc_from_5_to_55 = 23.2222
brc_from_5_to_60 = 28.5
brc_from_5_to_65 = 35.2857
brc_from_5_to_70 = 44.3333
brc_from_5_to_75 = 57
brc_from_5_to_80 = 76
brc_from_5_to_85 = 107.6667
brc_from_5_to_90 = 171
brc_from_5_to_95 = 361
brc_from_5_to_99 = 1881
brc_from_5_to_100 = 271428568.7143
brc_10 = 0.7778
brc_from_10_to_15 = 1.5882
brc_from_10_to_20 = 2.25
brc_from_10_to_25 = 3
brc_from_10_to_30 = 3.8571
brc_from_10_to_35 = 4.8462
brc_from_10_to_40 = 6
brc_from_10_to_45 = 7.3636
brc_from_10_to_50 = 9
brc_from_10_to_55 = 11
brc_from_10_to_60 = 13.5
brc_from_10_to_65 = 16.7143
brc_from_10_to_70 = 21
brc_from_10_to_75 = 27
brc_from_10_to_80 = 36
brc_from_10_to_85 = 51
brc_from_10_to_90 = 81
brc_from_10_to_95 = 171
brc_from_10_to_99 = 891
brc_from_10_to_100 = 128571427.2857
brc_15 = 1.2353
brc_from_15_to_20 = 1.4167
brc_from_15_to_25 = 1.8889
brc_from_15_to_30 = 2.4286
brc_from_15_to_35 = 3.0513
brc_from_15_to_40 = 3.7778
brc_from_15_to_45 = 4.6364
brc_from_15_to_50 = 5.6667
brc_from_15_to_55 = 6.9259
brc_from_15_to_60 = 8.5
brc_from_15_to_65 = 10.5238
brc_from_15_to_70 = 13.2222
brc_from_15_to_75 = 17
brc_from_15_to_80 = 22.6667
brc_from_15_to_85 = 32.1111
brc_from_15_to_90 = 51
brc_from_15_to_95 = 107.6667
brc_from_15_to_99 = 561
brc_from_15_to_100 = 80952380.1429
brc_20 = 1.75
brc_from_20_to_25 = 1.3333
brc_from_20_to_30 = 1.7143
brc_from_20_to_35 = 2.1538
brc_from_20_to_40 = 2.6667
brc_from_20_to_45 = 3.2727
brc_from_20_to_50 = 4
brc_from_20_to_55 = 4.8889
brc_from_20_to_60 = 6
brc_from_20_to_65 = 7.4286
brc_from_20_to_70 = 9.3333
brc_from_20_to_75 = 12
brc_from_20_to_80 = 16
brc_from_20_to_85 = 22.6667
brc_from_20_to_90 = 36
brc_from_20_to_95 = 76
brc_from_20_to_99 = 396
brc_from_20_to_100 = 57142856.5714
brc_25 = 2.3333
brc_from_25_to_30 = 1.2857
brc_from_25_to_35 = 1.6154
brc_from_25_to_40 = 2
brc_from_25_to_45 = 2.4545
brc_from_25_to_50 = 3
brc_from_25_to_55 = 3.6667
brc_from_25_to_60 = 4.5
brc_from_25_to_65 = 5.5714
brc_from_25_to_70 = 7
brc_from_25_to_75 = 9
brc_from_25_to_80 = 12
brc_from_25_to_85 = 17
brc_from_25_to_90 = 27
brc_from_25_to_95 = 57
brc_from_25_to_99 = 297
brc_from_25_to_100 = 42857142.4286
brc_30 = 3
brc_from_30_to_35 = 1.2564
brc_from_30_to_40 = 1.5556
brc_from_30_to_45 = 1.9091
brc_from_30_to_50 = 2.3333
brc_from_30_to_55 = 2.8519
brc_from_30_to_60 = 3.5
brc_from_30_to_65 = 4.3333
brc_from_30_to_70 = 5.4444
brc_from_30_to_75 = 7
brc_from_30_to_80 = 9.3333
brc_from_30_to_85 = 13.2222
brc_from_30_to_90 = 21
brc_from_30_to_95 = 44.3333
brc_from_30_to_99 = 231
brc_from_30_to_100 = 33333333
brc_35 = 3.7692
brc_from_35_to_40 = 1.2381
brc_from_35_to_45 = 1.5195
brc_from_35_to_50 = 1.8571
brc_from_35_to_55 = 2.2698
brc_from_35_to_60 = 2.7857
brc_from_35_to_65 = 3.449
brc_from_35_to_70 = 4.3333
brc_from_35_to_75 = 5.5714
brc_from_35_to_80 = 7.4286
brc_from_35_to_85 = 10.5238
brc_from_35_to_90 = 16.7143
brc_from_35_to_95 = 35.2857
brc_from_35_to_99 = 183.8571
brc_from_35_to_100 = 26530611.9796
brc_40 = 4.6667
brc_from_40_to_45 = 1.2273
brc_from_40_to_50 = 1.5
brc_from_40_to_55 = 1.8333
brc_from_40_to_60 = 2.25
brc_from_40_to_65 = 2.7857
brc_from_40_to_70 = 3.5
brc_from_40_to_75 = 4.5
brc_from_40_to_80 = 6
brc_from_40_to_85 = 8.5
brc_from_40_to_90 = 13.5
brc_from_40_to_95 = 28.5
brc_from_40_to_99 = 148.5
brc_from_40_to_100 = 21428571.2143
brc_45 = 5.7273
brc_from_45_to_50 = 1.2222
brc_from_45_to_55 = 1.4938
brc_from_45_to_60 = 1.8333
brc_from_45_to_65 = 2.2698
brc_from_45_to_70 = 2.8519
brc_from_45_to_75 = 3.6667
brc_from_45_to_80 = 4.8889
brc_from_45_to_85 = 6.9259
brc_from_45_to_90 = 11
brc_from_45_to_95 = 23.2222
brc_from_45_to_99 = 121
brc_from_45_to_100 = 17460317.2857
brc_50 = 7
brc_from_50_to_55 = 1.2222
brc_from_50_to_60 = 1.5
brc_from_50_to_65 = 1.8571
brc_from_50_to_70 = 2.3333
brc_from_50_to_75 = 3
brc_from_50_to_80 = 4
brc_from_50_to_85 = 5.6667
brc_from_50_to_90 = 9
brc_from_50_to_95 = 19
brc_from_50_to_99 = 99
brc_from_50_to_100 = 14285714.1429
brc_55 = 8.5556
brc_from_55_to_60 = 1.2273
brc_from_55_to_65 = 1.5195
brc_from_55_to_70 = 1.9091
brc_from_55_to_75 = 2.4545
brc_from_55_to_80 = 3.2727
brc_from_55_to_85 = 4.6364
brc_from_55_to_90 = 7.3636
brc_from_55_to_95 = 15.5455
brc_from_55_to_99 = 81
brc_from_55_to_100 = 11688311.5714
brc_60 = 10.5
brc_from_60_to_65 = 1.2381
brc_from_60_to_70 = 1.5556
brc_from_60_to_75 = 2
brc_from_60_to_80 = 2.6667
brc_from_60_to_85 = 3.7778
brc_from_60_to_90 = 6
brc_from_60_to_95 = 12.6667
brc_from_60_to_99 = 66
brc_from_60_to_100 = 9523809.4286
brc_65 = 13
brc_from_65_to_70 = 1.2564
brc_from_65_to_75 = 1.6154
brc_from_65_to_80 = 2.1538
brc_from_65_to_85 = 3.0513
brc_from_65_to_90 = 4.8462
brc_from_65_to_95 = 10.2308
brc_from_65_to_99 = 53.3077
brc_from_65_to_100 = 7692307.6154
brc_70 = 16.3333
brc_from_70_to_75 = 1.2857
brc_from_70_to_80 = 1.7143
brc_from_70_to_85 = 2.4286
brc_from_70_to_90 = 3.8571
brc_from_70_to_95 = 8.1429
brc_from_70_to_99 = 42.4286
brc_from_70_to_100 = 6122448.9184
brc_75 = 21
brc_from_75_to_80 = 1.3333
brc_from_75_to_85 = 1.8889
brc_from_75_to_90 = 3
brc_from_75_to_95 = 6.3333
brc_from_75_to_99 = 33
brc_from_75_to_100 = 4761904.7143
brc_80 = 28
brc_from_80_to_85 = 1.4167
brc_from_80_to_90 = 2.25
brc_from_80_to_95 = 4.75
brc_from_80_to_99 = 24.75
brc_from_80_to_100 = 3571428.5357
brc_85 = 39.6667
brc_from_85_to_90 = 1.5882
brc_from_85_to_95 = 3.3529
brc_from_85_to_99 = 17.4706
brc_from_85_to_100 = 2521008.3782
brc_90 = 63
brc_from_90_to_95 = 2.1111
brc_from_90_to_99 = 11
brc_from_90_to_100 = 1587301.5714
brc_95 = 133
brc_from_95_to_99 = 5.2105
brc_from_95_to_100 = 751879.6917
brc_99 = 693
brc_from_99_to_100 = 144300.1429
brc_100 = 99999999