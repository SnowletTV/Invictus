country_fortress_building_cost = {
    # Fort base cost, must by in sync with the real one
    value = 160
    multiply = {
        value = 1
        add = modifier:build_cost
        add = modifier:fortress_building_cost
    }
}

state_fort_limit_svalue = {
    value = define:NCountry|BASE_FORT_LIMIT_PER_STATE
    capital_scope = {
        add = modifier:local_fort_limit
    }
    owner = {
        add = modifier:fort_limit
    }
}

state_fort_limit_plus_1 = {
    value = state_fort_limit_svalue
    add = 1
}

state_fort_limit_used = {
    value = 0
    every_state_province = {
        limit = {
            fort_level > 0
        }
        add = define:NCountry|FIRST_FORT_COST_IN_POINTS
        subtract = 1
        min = 0
        add = fort_level
    }
}

# Scope is territory where 1 more level will be built
state_fort_limit_with_1_more_level = {
    value = state.state_fort_limit_used
    if = {
        limit = {
            fort_level > 0
        }
        add = 1
    }
    else_if = {
        add = define:NCountry|FIRST_FORT_COST_IN_POINTS
    }
}

territory_priority_for_state_capital = {
    # Resolve draws by territory ID
    value = territory_priority_by_id

    # 1000000 x1 for city, x2 for state capital city, x3 for metropolis, x4 for state capital metropolis
    if = {
        limit = {
            has_city_status = yes
        }
        add = 1000000
        if = {
            limit = {
                is_state_capital = yes
            }
            add = 1000000
        }
        if = {
            limit = {
                has_province_rank = city_metropolis
            }
            add = 2000000
        }
    }

    # 100000 x1-x8 for fort levels, but x9 instead if state capital as has any fort level
    if = {
        limit = {
            num_of_fortress_building_projected > 0
        }
        if = {
            limit = {
                is_state_capital = yes
            }
            add = 900000
        }
        else = {
            add = {
                value = 100000
                multiply = {
                    value = num_of_fortress_building_projected
                    max = 8
                }
            }
        }
    }

    # 10000 x0-8 based on population capacity modifier from terrain
    if = {
        limit = {
            OR = {
                terrain = mountain
                terrain = desert
            }
        }
        add = 20000
    }
    else_if = {
        limit = {
            OR = {
                terrain = jungle
                terrain = desert_hills
                terrain = marsh
                terrain = forest
            }
        }
        add = 40000
    }
    else_if = {
        limit = {
            OR = {
                terrain = plains
                terrain = hills
            }
        }
        add = 60000
    }
    else_if = {
        limit = {
            OR = {
                terrain = oasis
                terrain = flood_plain
                terrain = farmland
            }
        }
        add = 80000
    }

    # 10000 1.5x if already state capital, counting its terrain as 1.5 tiers higher
    if = {
        limit = {
            is_state_capital = yes
        }
        # Don't overflow 10000 range if highest tier
        if = {
            limit = {
                OR = {
                    terrain = oasis
                    terrain = flood_plain
                    terrain = farmland
                }
            }
            add = 10000
        }
        else = {
            add = 30000
        }
    }

    # 1000 x1 if holy site, x2 if country religion, x3 if state capital holy site, or x4 instead if country religion
    if = {
        limit = {
            is_holy_site = yes
        }
        add = 1000
        if = {
            limit = {
                is_holy_site_of_religion = owner.religion
            }
            add = 1000
        }
        if = {
            limit = {
                is_state_capital = yes
            }
            add = 2000
        }
    }

    # 1-990 for territory population, but with state capital always winning
    if = {
        limit = {
            is_state_capital = yes
        }
        add = 995
    }
    else = {
        add = {
            value = total_population
            max = 990
        }
    }
}

monthly_state_loyalty_to_move_capital = {
    # Loyalty 70 is considered ok to make a move if monthly change is 0
    value = 70
    # Everything differing from it allows for negative or requires positive monthly change
    subtract = state_level_loyalty
    divide = 200 # Same as multiply = 0.005

    # Current state loyalty    Min monthly change must be >=
    # 100                      -0.15
    # 90                       -0.10
    # 80                       -0.05
    # 70                       -0.00
    # 60                       +0.05
    # 50                       +0.10
}

# Alternative to vanilla province_capital_price_svalue without scoping to root
province_capital_price_territory_scope = {
	value = 30
	if = {
		limit = {
			has_province_rank = city_metropolis
		}
		subtract = 10
	}
	if = {
		limit = {
			has_city_status = yes
		}
		subtract = 10
	}
}

level_of_giga_fort_wanted = 5

level_of_mega_fort_wanted = 3

fort_limit_per_giga_fort = {
    value = define:NCountry|FIRST_FORT_COST_IN_POINTS
    add = {
        value = level_of_giga_fort_wanted
        subtract = 1
    }
}

fort_limit_per_mega_fort = {
    value = define:NCountry|FIRST_FORT_COST_IN_POINTS
    add = {
        value = level_of_mega_fort_wanted
        subtract = 1
    }
}

fort_limit_per_single_fort = {
    value = define:NCountry|FIRST_FORT_COST_IN_POINTS
}

fort_limit_for_mega_and_single_forts = {
    value = fort_limit_per_single_fort
    add = fort_limit_per_mega_fort
}

territory_fort_limit_for_wanted_fort = {
    value = 0
    if = {
        limit = {
            ai_wants_giga_fort_in_territory = yes
        }
        add = fort_limit_per_giga_fort
    }
    else_if = {
        limit = {
            ai_wants_mega_fort_in_territory = yes
        }
        add = fort_limit_per_mega_fort
    }
    else_if = {
        limit = {
            # Cache redoubt to make ai_territory_is_redoubt_of_state just a fast scope comparison
            state = {
                cache_redoubt_of_state_for_trigger = yes
            }

            ai_wants_single_fort_in_territory = yes
        }
        add = fort_limit_per_single_fort
    }
}

state_fort_limit_for_wanted_forts = {
    value = 0
    every_state_province = {
        add = territory_fort_limit_for_wanted_fort
    }
}

treasury_after_cancelling_fort = {
    value = treasury
    add = country_fortress_building_cost
}

treasury_after_removing_fort = {
    value = treasury
    add = {
        value = country_fortress_building_cost
        multiply = define:NProvince|DESTROY_BUILDING_MONEY_RETURN
    }
}

building_slots_required_for_single_fort = {
    value = 1
    subtract = num_of_fortress_building_projected
    min = 0
    max = 1
}

building_slots_required_for_mega_fort = {
    value = 3
    subtract = num_of_fortress_building_projected
    min = 0
    max = 3
}

territory_priority_by_population = {
    value = territory_priority_by_id
    add = {
        value = total_population
        max = 997
    }
}

territory_priority_for_having_fort = {
    # Resolve draws by territory ID
    value = territory_priority_by_id

    # 100000 x1-3 if a city or maybe even a metropolis
    if = {
        limit = {
            has_city_status = yes
        }
        add = 100000

        # Higher priority if large city or heavily urbanized state
        if = {
            limit = {
                OR = {
                    # Decent population with a buffer for every next fort level
                    trigger_if = {
                        limit = {
                            num_of_fortress_building_projected >= 3
                        }
                        total_population >= 35
                    }
                    trigger_else_if = {
                        limit = {
                            num_of_fortress_building_projected >= 2
                        }
                        total_population >= 40
                    }
                    trigger_else_if = {
                        limit = {
                            num_of_fortress_building_projected >= 1
                        }
                        total_population >= 45
                    }
                    trigger_else = {
                        total_population >= 50
                    }

                    # Somewhat populated capital and there are multiple more such cities in state
                    AND = {
                        is_state_capital = yes
                        trigger_if = {
                            limit = {
                                num_of_fortress_building_projected >= 3
                            }
                            total_population >= 25
                        }
                        trigger_else_if = {
                            limit = {
                                num_of_fortress_building_projected >= 2
                            }
                            total_population >= 30
                        }
                        trigger_else_if = {
                            limit = {
                                num_of_fortress_building_projected >= 1
                            }
                            total_population >= 35
                        }
                        trigger_else = {
                            total_population >= 40
                        }
                        state = {
                            any_state_province = {
                                count >= 3
                                has_city_status = yes
                                total_population >= 25
                            }
                        }
                    }
                }
            }
            add = 100000
        }

        # Higher priority if metropolis
        if = {
            limit = {
                has_province_rank = city_metropolis
            }
            add = 100000
        }
    }

    # 10000 if makes a good fort due to map setup reasons
    if = {
        limit = {
            ai_territory_is_good_for_defense = yes
        }
        add = 10000
    }

    # 1000 x0-4 based on defending modifiers from terrain
    if = {
        limit = {
            OR = {
                terrain = flood_plain
                terrain = oasis
                terrain = farmland
            }
        }
        add = 1000
    }
    else_if = {
        limit = {
            OR = {
                terrain = desert
                terrain = jungle
            }
        }
        add = 2000
    }
    else_if = {
        limit = {
            OR = {
                terrain = hills
                terrain = forest
                terrain = marsh
            }
        }
        add = 3000
    }
    else_if = {
        limit = {
            OR = {
                terrain = desert_hills
                terrain = mountain
            }
        }
        add = 4000
    }

    # Population as a main draw resolver
    add = {
        value = total_population
        max = 995
    }
}

territory_priority_for_state_redoubt = {
    # If capital can have fort, it always hosts state redoubt
    if = {
        limit = {
            state.capital_scope = {
                ai_territory_can_have_fort = yes
            }
        }
        if = {
            limit = {
                is_state_capital = yes
            }
            add = 10000000
        }
    }

    # Otherwise construct priority with similar factors as in ai_wants_single_fort_in_territory
    else = {

        # Most important is having fort already as non-capital redoubt is temporary at best and a compromise at worst
        if = {
            limit = {
                num_of_fortress_building_projected > 0
            }
            add = {
                value = 10000000
                multiply = {
                    value = num_of_fortress_building_projected
                    max = 9
                }
            }
        }

        add = territory_priority_for_having_fort
    }
}

territory_priority_for_state_outwork = {
    # Most important is having fort already to avoid moving outwork from one territory to another with little gain
    if = {
        limit = {
            num_of_fortress_building_projected > 0
        }
        add = {
            value = 10000000
            multiply = {
                value = num_of_fortress_building_projected
                max = 9
            }
        }
    }

    add = territory_priority_for_having_fort
}

priority_threshold_for_single_fort = 10000

priority_threshold_for_mega_fort = 110000