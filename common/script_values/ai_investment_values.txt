ai_state_importance = {
    value = 1
    every_state_province = {
        add = {
            value = total_population
            multiply = 0.01
        }
    }
    if = {
        limit = {
            this = owner.capital_scope.state
        }
        if = {
            limit = {
                OR = {
                    NOT = {
                        has_variable = num_state_investments
                    }
                    var:num_state_investments < 3
                }
            }
            multiply = 5
        }
        else = {
            multiply = 2
        }
    }
}

state_fort_limit = {
    value = define:NCountry|BASE_FORT_LIMIT_PER_STATE
    # add modifiers in 2.0.5?
}

state_fort_limit_used = {
    value = 0
    every_state_province = {
        limit = {
            fort_level > 0
        }
        add = define:NCountry|FIRST_FORT_COST_IN_POINTS
        subtract = 1
        min = 0
        add = fort_level
    }
}

# Limit is compared against current number of investments + 1, so the end value truly won't be higher than the limit
ai_investments_allowed_per_state = {
    value = 0
    every_state_province = {
        add = total_population
    }
    owner = {
        if = {
            limit = {
                government = tribal_chiefdom
            }
            divide = 40
        }
        else_if = {
            limit = {
                government = tribal_federation
            }
            divide = 30
        }
        else_if = {
            limit = {
                is_tribal = yes
            }
            divide = 35
        }
        else = {
            divide = 25
        }
    }
    floor = yes
    min = {
        if = {
            limit = {
                is_capital_state = yes
            }
            if = {
                limit = {
                    owner = {
                        OR = {
                            is_tribal = no
                            rank >= major_power
                        }
                    }
                }
                value = 2
            }
            else = {
                value = 1
            }
        }
        else = {
            value = 0
        }
    }
}

current_state_investments_plus_1 = { 
	value = 0
	if = {
		limit = {
			has_variable = num_state_investments
		}
		add = var:num_state_investments
	}
    min = 0
}

5_percent_of_population_cap = {
    value = population_cap
    multiply = 0.05
    round = yes
}
10_percent_of_population_cap = {
    value = population_cap
    multiply = 0.10
    round = yes
}
15_percent_of_population_cap = {
    value = population_cap
    multiply = 0.15
    round = yes
}
20_percent_of_population_cap = {
    value = population_cap
    multiply = 0.20
    round = yes
}
25_percent_of_population_cap = {
    value = population_cap
    multiply = 0.25
    round = yes
}
30_percent_of_population_cap = {
    value = population_cap
    multiply = 0.30
    round = yes
}
35_percent_of_population_cap = {
    value = population_cap
    multiply = 0.35
    round = yes
}
40_percent_of_population_cap = {
    value = population_cap
    multiply = 0.40
    round = yes
}
45_percent_of_population_cap = {
    value = population_cap
    multiply = 0.45
    round = yes
}
50_percent_of_population_cap = {
    value = population_cap
    multiply = 0.50
    round = yes
}
55_percent_of_population_cap = {
    value = population_cap
    multiply = 0.55
    round = yes
}
60_percent_of_population_cap = {
    value = population_cap
    multiply = 0.60
    round = yes
}
65_percent_of_population_cap = {
    value = population_cap
    multiply = 0.65
    round = yes
}
70_percent_of_population_cap = {
    value = population_cap
    multiply = 0.70
    round = yes
}
75_percent_of_population_cap = {
    value = population_cap
    multiply = 0.75
    round = yes
}
80_percent_of_population_cap = {
    value = population_cap
    multiply = 0.80
    round = yes
}
85_percent_of_population_cap = {
    value = population_cap
    multiply = 0.85
    round = yes
}
90_percent_of_population_cap = {
    value = population_cap
    multiply = 0.90
    round = yes
}
95_percent_of_population_cap = {
    value = population_cap
    multiply = 0.95
    round = yes
}