# Assume 50000 of territory IDs which should be more than safe
assumed_territory_id_limit = 50000

# Assume max distance between territories of 50000 which should be more than safe
assumed_max_territory_distance = 50000

ai_country_build_roads_price = {
    if = {
        limit = {
            has_local_variable = ai_country_build_roads_price_cached
        }
        value = local_var:ai_country_build_roads_price_cached
    }
    else = {
        if = {
            limit = {
                has_military_bonus = latin_roman_path_4
            }
            if = {
                limit = {
                    any_unit = {
                        ai_unit_qualifies_for_building_roads = yes
                        has_reduced_roadbuilding_cost = yes
                    }
                }
                value = 10
                multiply = {
                    value = 1.00
                    add = modifier:build_roads_engineers_cost_modifier
                }
            }
            else = {
                value = 25
                multiply = {
                    value = 1.00
                    add = modifier:build_roads_cost_modifier
                }
            }
        }
        else = {
            if = {
                limit = {
                    any_unit = {
                        ai_unit_qualifies_for_building_roads = yes
                        has_reduced_roadbuilding_cost = yes
                    }
                }
                value = 10
                multiply = {
                    value = 1.00
                    add = modifier:build_roads_engineers_cost_modifier
                }
            }
            else = {
                value = 50
                multiply = {
                    value = 1.00
                    add = modifier:build_expensive_roads_cost_modifier
                }
            }
        }
        min = 0
    }
}

ai_country_build_1_road_price = {
    value = ai_country_build_roads_price
}

ai_country_build_10_roads_price = {
    value = ai_country_build_roads_price
    multiply = 10
}

ai_wartime_fund_and_1_road = {
    value = ai_wartime_fund_desired
    add = ai_country_build_1_road_price
}

ai_wartime_fund_and_10_roads = {
    value = ai_wartime_fund_desired
    add = ai_country_build_10_roads_price
}

ai_wartime_fund_and_planned_roads = {
    value = ai_wartime_fund_desired
    add = cumulated_cost_of_planned_roads
}

cumulated_cost_of_planned_roads = {
    every_in_local_list = {
        variable = territories_chosen_for_road_building
        limit = {
            has_non_empty_variable_list = {
                name = will_have_road_towards
            }
        }
        every_in_list = {
            variable = will_have_road_towards
            add = scope:current_road_building_country.ai_country_build_roads_price
        }
    }
}

road_building_junction_search_depth = 15

# Reverse of ordering by ID because we want lower IDs to be prioritized
territory_priority_by_id = {
    value = assumed_territory_id_limit
    subtract = province_id
    divide = assumed_territory_id_limit
}

state_priority_by_id = {
    value = capital_scope.territory_priority_by_id
}

area_priority_by_id = {
    value = 0
    every_area_province = {
        add = territory_priority_by_id
    }
    divide = {
        value = 0
        every_area_province = {
            add = 1
        }
        min = 1
    }
}

region_priority_by_id = {
    value = 0
    every_region_area = {
        add = area_priority_by_id
    }
    divide = {
        value = 0
        every_region_area = {
            add = 1
        }
        min = 1
    }
}

governorship_priority_by_id = {
    value = capital_scope.territory_priority_by_id
}






territory_priority_by_distance_from_capital = {
    if = {
        limit = {
            this = scope:current_road_building_country.capital_scope
        }
        value = 0
    }
    else = {
        # Draws are decided by IDs
        value = territory_priority_by_id

        # Draws by state depth are decided by plain distance
        add = distance_from_province

        # Main factor should be distance in depth levels if specified
        if = {
            limit = {
                has_variable = state_capital_distance
            }
            value = var:state_capital_distance
            multiply = assumed_max_territory_distance
        }
    }
}

state_priority_by_distance_from_capital = {
    value = capital_scope.territory_priority_by_distance_from_capital
}

area_priority_by_distance_from_capital = {
    if = {
        limit = {
            any_area_state = {
                count > 0
            }
        }
        ordered_area_state = {
            order_by = state_priority_by_distance_from_capital
            position = 0
            check_range_bounds = no

            add = state_priority_by_distance_from_capital
        }
    }
    else = {
        ordered_area_province = {
            order_by = territory_priority_by_distance_from_capital
            position = 0
            check_range_bounds = no

            add = territory_priority_by_distance_from_capital
        }
    }
}

governorship_priority_by_distance_from_capital = {
    value = capital_scope.territory_priority_by_distance_from_capital
}

state_priority_by_closeness_to_capital = {
    value = 0
    subtract = state_priority_by_distance_from_capital
}

territory_priority_by_closeness_to_capital = {
    value = 0
    subtract = territory_priority_by_distance_from_capital
}

area_priority_by_closeness_to_capital = {
    value = 0
    subtract = area_priority_by_distance_from_capital
}

governorship_priority_by_closeness_to_capital = {
    value = 0
    subtract = governorship_priority_by_distance_from_capital
}

territory_priority_for_road_building = {
    # Draws are decided by IDs
    value = territory_priority_by_id
    # Already having a road is the most important thing, reducing parallel ones and not wasting money
    if = {
        limit = {
            has_road_towards = scope:current_road_building_territory
        }
        add = 10000
    }
    # City territories are prioritized as they are important military targets
    if = {
        limit = {
            has_city_status = yes
        }
        add = 1000
    }
    # Prefer territories that make us closer to a destination
    if = {
        limit = {
            has_less_depth_than_current_territory = yes
        }
        add = 100
    }
    # Also prefer our own territories more than subject ones
    if = {
        limit = {
            owner = scope:current_road_building_country
        }
        add = 10
    }
}

state_priority_for_road_building = {
    # Draws are decided by IDs
    value = state_priority_by_id
    # Already having roads is the most important thing, reducing parallel ones and not wasting money
    if = {
        limit = {
            state_contains_junction_with_roads = yes
        }
        add = 10000
    }
    # City junctions are prioritized as they are important military targets
    if = {
        limit = {
            capital_scope.var:state_contained_junction_territory = {
                has_city_status = yes
            }
        }
        add = 1000
    }
    # Prefer states that make us closer to a destination
    if = {
        limit = {
            has_less_depth_than_current_state = yes
        }
        add = 100
    }
    # Also prefer our own states more than subject ones
    if = {
        limit = {
            owner = scope:current_road_building_country
        }
        add = 10
    }
}





















territory_depth_level_svalue = {
    value = var:territory_depth_level
}




num_of_state_territories_svalue = {
    value = 0
    every_state_province = {
        add = 1
    }
}

territory_priority_for_junction = {
    value = territory_priority_by_id
}

state_priority_by_depth_level = {
    value = capital_scope.var:state_depth_level
    multiply = assumed_territory_id_limit

    add = capital_scope.territory_priority_by_id
}

area_priority_by_territory_ids = {
    value = 0
    every_area_province = {
        add = province_id
    }
}

state_priority_for_junction = {
    value = num_of_state_territories_svalue
    multiply = assumed_territory_id_limit
    add = capital_scope.territory_priority_by_id
}

num_of_roads_towards_neighbors = {
    value = 0
    every_neighbor_province = {
        limit = {
            has_road_towards = prev
        }
        add = 1
    }
}

state_depth_level_svalue = {
    if = {
        limit = {
            exists = capital_scope
            capital_scope = {
                has_variable = state_depth_level
            }
        }
        value = capital_scope.var:state_depth_level
    }
    else = {
        value = -1
    }
}

num_states_chosen_for_road_building = {
    value = 0
    if = {
        limit = {
            has_non_empty_local_variable_list = {
                name = states_chosen_for_road_building
            }
        }
        every_in_local_list = {
            variable = states_chosen_for_road_building
            add = 1
        }
    }
}

min_junctions_in_governorship_for_roads = 2