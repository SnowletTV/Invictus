trade_good_event_effect = {
	#NOTE: Used in the province scope.
	#INPUT - REWARD = (1-10)
	#GUIDE:
	#1 = Commerce building and 2 citizens
	#2 = Commerce building and 3 nobles
	#3 = Governor popularity and trade_winds_migrants_smod
	#4 = trade_winds_good modifier and 40-100 treasury.
	#5 = Poor governorship modifier and governor gains 40-100 gold. (BAD)
	#6 = Imprision governor, lose state loyalty, and gain ruler corruption (BAD)
	#7 = Add up to 220 treasury.
	#8 = Gain manpower and state_owned_resources_mod modifier.
	#9 = Gain up 10 100 treasury and new_trade_hub modifier.
	#10 = thriving_local_trade_smod state modifier.
	if = {
		limit = { $REWARD$ = 1 }
		if = {
			limit = {
				can_build_building = commerce_building
			}
			add_building_level = commerce_building
		}
		else_if = {
			limit = {
				can_build_building = population_building
			}
			add_building_level = population_building
		}
		else = {
			create_2_citizens_effect = yes
		}
	}
	else_if = {
		limit = { $REWARD$ = 2 }
		if = {
			limit = {
				can_build_building = population_building
			}
			add_building_level = population_building
		}
		else_if = {
			limit = {
				can_build_building = commerce_building
			}
			add_building_level = commerce_building
		}
		else_if = {
			limit = {
				can_build_building = aqueduct_building
			}
			add_building_level = aqueduct_building
		}
		else = {
			create_2_nobles_effect = yes
		}
	}
	else_if = {
		limit = { $REWARD$ = 3 }
		if = {
			limit = {
				exists = governor_or_ruler
			}
			governor_or_ruler = {
				add_popularity = popularity_small
			}
		}
		state = {
			add_state_modifier = {
				name = trade_winds_migrants_smod
				duration = 9125
			}
		}
	}
	else_if = {
		limit = { $REWARD$ = 4 }
		add_province_modifier = {
			name = trade_winds_good
			duration = 9125
		}
		root = {
			add_treasury = 100
		}
	}
	else_if = {
		limit = { $REWARD$ = 5 }
		state = {
			add_state_modifier = {
				name = state_modifier_poor_governorship
				duration = 9125
			}
		}
	}
	else_if = {
		limit = { $REWARD$ = 6 } 
		add_state_loyalty = {
			value = 0
			subtract = state_loyalty
			divide = 1.5
		}
		if = {
			limit = {
				exists = governor_or_ruler
				NOT = { governor_or_ruler = owner.current_ruler }
			}
			root = {
				imprison = {
					target = prev.governor_or_ruler
				}
			}
		}
		root.current_ruler = {
			add_corruption = {
				value = prev.governor_or_ruler.power_base
				divide = 4
				max = 20
				min = 5
			}
		}
	}
	else_if = {
		limit = { $REWARD$ = 7 }
		root = {
			add_treasury = {
				value = 0
				add = root.has_monthly_income
				multiply = 6
				max = 220
			}
		}
	}
	else_if = {
		limit = { $REWARD$ = 7 }
		root = {
			add_treasury = {
				value = 0
				add = root.has_monthly_income
				multiply = 6
				max = 220
			}
		}
	}
	else_if = {
		limit = { $REWARD$ = 8 }
		root = {
			add_manpower = {
				value = 0
				add = root.max_manpower
				divide = 20
				max = 2
			}
		}
		add_province_modifier = {
			name = state_owned_resources_mod
			duration = -1
		}
	}
	else_if = {
		limit = { $REWARD$ = 9 }
		root = {
			add_treasury = {
				value = 0
				add = prev.province_income
				multiply = 40
				max = 100
			}
		}
		add_province_modifier = {
			name = new_trade_hub
			duration = -1
		}
	}
	else_if = {
		limit = { $REWARD$ = 10 }
		state = {
			add_state_modifier = {
				name = thriving_local_trade_smod
				duration = -1
			}
		}
	}
}
trade_good_decision_spread_effect = {
	if = {
		limit = { $REGION$ = yes }
		area = {
			region = {
				random_region_province = {
					limit = { 
						owner = root
						NOR = { 
							trade_goods = $TRADE_GOOD$ 
							valuable_trade_good_trigger = yes
						}
						area = {
							NOT = {
								any_area_province = {
									trade_goods = $TRADE_GOOD$
								}
							}
						}
					}
					set_trade_goods = $TRADE_GOOD$
				}
			}
		}
	}
	else = {
		area = {
			random_neighbor_area = {
				limit = {
					any_area_province = {
						owner = root
						NOR = {
							trade_goods = $TRADE_GOOD$
							valuable_trade_good_trigger = yes
						}
					}
				}
				random_area_province = {
					limit = {
						owner = root
						NOT = { trade_goods = $TRADE_GOOD$ }
					}
					set_trade_goods = $TRADE_GOOD$
				}
			}
		}
	}
}
indian_colony_specialization_effect = {
	hidden_effect = {
		if = {
			limit = {
				has_province_modifier = indian_general_colony
			}
			remove_province_modifier = indian_general_colony
		}
		if = {
			limit = {
				has_province_modifier = maurya_general_colony
			}
			remove_province_modifier = maurya_general_colony
		}
		switch = {
		trigger = has_variable
			india_military_flag = {
		    add_permanent_province_modifier = {
		    name = military_colony
		    }
		    remove_variable = india_military_flag	        				
			}
			india_civic_flag = {
	        add_permanent_province_modifier = {
	        name = civic_colony
	        }
	        remove_variable = india_civic_flag
			}
			india_religious_flag = {
	        add_permanent_province_modifier = {
	        name = religious_colony
	        }
	        remove_variable = india_religious_flag
			}
			india_trade_flag = {
	        add_permanent_province_modifier = {
	        name = trade_colony
	        }
	        remove_variable = india_trade_flag
			}
		}
	}
}

indian_client_legion_law_capital_effect = {
	if = {
		limit = {
			NOR = {
			has_law = republican_recruitment_2 # legions capital
			has_law = republican_recruitment_4 # legions enabled
			}
		}
		change_law = republican_recruitment_2 # capital
	}	
}

indian_client_legion_law_enabled_effect = {
	if = {
		limit = {
			NOT = { 
			has_law = republican_recruitment_4 # legions enabled
			}
		}
		change_law = republican_recruitment_4 # enabled
	}	
}

tribal_duel_description_distribution = {	#Makes it so no description shows up twice in a row
	switch = {
		trigger = has_variable 

		axe_combat = {
			if = {
				limit = {
					NOT = { has_variable = generic_desc_giver }
				}
				set_variable = {	#I do this to make sure the 1st and 3rd descriptions are never the same.
					name = generic_desc_giver
					value = { integer_range = { min = 1 max = 7 } }	#7 possible generic descriptions change this to add more.
				}
			}
			else = {
				limit = { has_variable = generic_desc_giver }
				remove_variable = generic_desc_giver
				if = {
					limit = { var:axe_combat = 1 }
					random_list = {
						50 = {
							change_variable = {
								name = axe_combat
								add = 1
							}
						}
						50 = {
							change_variable = {
								name = axe_combat
								add = 2
							}
						}
					}
				}
				else_if = {
					limit = { var:axe_combat = 2 }
					random_list = {
						50 = {
							change_variable = {
								name = axe_combat
								add = 1
							}
						}
						50 = {
							change_variable = {
								name = axe_combat
								subtract = 1
							}
						}
					}
				}
				else = {
					limit = { var:axe_combat = 3 }
					random_list = {
						50 = {
							change_variable = {
								name = axe_combat
								subtract = 1
							}
						}
						50 = {
							change_variable = {
								name = axe_combat
								subtract = 2
							}
						}
					}				
				}
			}
		}
		spear_combat = {
			if = {
				limit = {
					NOT = { has_variable = generic_desc_giver }
				}
				set_variable = {	#I do this to make sure the 1st and 3rd descriptions are never the same.
					name = generic_desc_giver
					value = { integer_range = { min = 1 max = 5 } }	#5 possible generic descriptions change this to add more.
					days = 365
				}
			}
			else = {
				limit = { has_variable = generic_desc_giver }
				remove_variable = generic_desc_giver
				if = {
					limit = { var:spear_combat = 1 }
					random_list = {
						50 = {
							change_variable = {
								name = spear_combat
								add = 1
							}
						}
						50 = {
							change_variable = {
								name = spear_combat
								add = 2
							}
						}
					}
				}
				else_if = {
					limit = { var:spear_combat = 2 }
					random_list = {
						50 = {
							change_variable = {
								name = spear_combat
								add = 1
							}
						}
						50 = {
							change_variable = {
								name = spear_combat
								subtract = 1
							}
						}
					}
				}
				else = {
					limit = { var:spear_combat = 3 }
					random_list = {
						50 = {
							change_variable = {
								name = spear_combat
								subtract = 1
							}
						}
						50 = {
							change_variable = {
								name = spear_combat
								subtract = 2
							}
						}
					}				
				}
			}
		}
		horse_combat = {
			if = {
				limit = {
					NOT = { has_variable = generic_desc_giver }
				}
				set_variable = {	#I do this to make sure the 1st and 3rd descriptions are never the same.
					name = generic_desc_giver
					value = { integer_range = { min = 1 max = 5 } }	#5 possible generic descriptions change this to add more.
					days = 365
				}
			}
			else = {
				limit = { has_variable = generic_desc_giver }
				remove_variable = generic_desc_giver
				if = {
					limit = { var:horse_combat = 1 }
					random_list = {
						50 = {
							change_variable = {
								name = horse_combat
								add = 1
							}
						}
						50 = {
							change_variable = {
								name = horse_combat
								add = 2
							}
						}
					}
				}
				else_if = {
					limit = { var:horse_combat = 2 }
					random_list = {
						50 = {
							change_variable = {
								name = horse_combat
								add = 1
							}
						}
						50 = {
							change_variable = {
								name = horse_combat
								subtract = 1
							}
						}
					}
				}
				else = {
					limit = { var:horse_combat = 3 }
					random_list = {
						50 = {
							change_variable = {
								name = horse_combat
								subtract = 1
							}
						}
						50 = {
							change_variable = {
								name = horse_combat
								subtract = 2
							}
						}
					}				
				}
			}
		}
		hands_combat = {
			if = {
				limit = {
					NOT = { has_variable = generic_desc_giver }
				}
				set_variable = {	#I do this to make sure the 1st and 3rd descriptions are never the same.
					name = generic_desc_giver
					value = { integer_range = { min = 1 max = 5 } }	#5 possible generic descriptions change this to add more.
					days = 365
				}
			}
			else = {
				limit = { has_variable = generic_desc_giver }
				remove_variable = generic_desc_giver
				if = {
					limit = { var:hands_combat = 1 }
					random_list = {
						50 = {
							change_variable = {
								name = hands_combat
								add = 1
							}
						}
						50 = {
							change_variable = {
								name = hands_combat
								add = 2
							}
						}
					}
				}
				else_if = {
					limit = { var:hands_combat = 2 }
					random_list = {
						50 = {
							change_variable = {
								name = hands_combat
								add = 1
							}
						}
						50 = {
							change_variable = {
								name = hands_combat
								subtract = 1
							}
						}
					}
				}
				else = {
					limit = { var:hands_combat = 3 }
					random_list = {
						50 = {
							change_variable = {
								name = hands_combat
								subtract = 1
							}
						}
						50 = {
							change_variable = {
								name = hands_combat
								subtract = 2
							}
						}
					}				
				}
			}
		}
		sword_combat = {
			if = {
				limit = {
					NOT = { has_variable = generic_desc_giver }
				}
				set_variable = {	#I do this to make sure the 1st and 3rd descriptions are never the same.
					name = generic_desc_giver
					value = { integer_range = { min = 1 max = 5 } }	#5 possible generic descriptions change this to add more.
					days = 365
				}
			}
			else = {
				limit = { has_variable = generic_desc_giver }
				remove_variable = generic_desc_giver
				if = {
					limit = { var:sword_combat = 1 }
					random_list = {
						50 = {
							change_variable = {
								name = sword_combat
								add = 1
							}
						}
						50 = {
							change_variable = {
								name = sword_combat
								add = 2
							}
						}
					}
				}
				else_if = {
					limit = { var:sword_combat = 2 }
					random_list = {
						50 = {
							change_variable = {
								name = sword_combat
								add = 1
							}
						}
						50 = {
							change_variable = {
								name = sword_combat
								subtract = 1
							}
						}
					}
				}
				else = {
					limit = { var:sword_combat = 3 }
					random_list = {
						50 = {
							change_variable = {
								name = sword_combat
								subtract = 1
							}
						}
						50 = {
							change_variable = {
								name = sword_combat
								subtract = 2
							}
						}
					}				
				}
			}
		}
	}
}
tribal_duel_rewards_effect = {
	if = {
		limit = {
			has_variable = random_effects_1
		}
		if = {
			limit = {
				scope:fighter_of_duel = {
					has_nickname = no
				}
			}
			scope:fighter_of_duel = {
				add_nickname = THE_FIGHTER
				add_popularity = 10
			}
		}
		else = {
			scope:fighter_of_duel = {
				add_popularity = 10
			}
		}
	}
	if = {
		limit = {
			has_variable = random_effects_2
		}
		if = {
			limit = {
				scope:fighter_of_duel = {
					has_nickname = no
				}
			}
			scope:fighter_of_duel = {
				add_nickname = THE_CHAMPION
				add_martial = 1
				employer = {
					add_stability = 5
				}
			}
		}
		else = {
			scope:fighter_of_duel = {
				add_martial = 1
				employer = {
					add_stability = 5
				}
			}
		}
	}
	if = {
		limit = {
			has_variable = random_effects_3
		}
		if = {
			limit = {
				scope:fighter_of_duel = {
					has_nickname = no
				}
				scope:target = {
					is_alive = no
				}
			}
			scope:fighter_of_duel = {
				add_nickname = THE_SLAYER
				add_character_modifier = {
					name = renowned_fighter
					duration = 3650
				}
			}
		}
		else = {
			scope:fighter_of_duel = {
				add_character_modifier = {
					name = renowned_fighter
					duration = 3650
				}
			}
		}
	}
	if = {
		limit = {
			has_variable = random_effects_4
		}
		if = {
			limit = {
				scope:fighter_of_duel = {
					has_nickname = no
				}
			}
			scope:fighter_of_duel = {
				add_nickname = THE_STRONG
				add_martial = 1
				add_finesse = 1
			}
		}
		else = {
			scope:fighter_of_duel = {
				add_martial = 1
				add_finesse = 1
			}
		}
	}
	if = {
		limit = {
			has_variable = random_effects_5
		}
		if = {
			limit = {
				scope:fighter_of_duel = {
					has_nickname = no
				}
				scope:target = {
					is_alive = no
				}
			}
			scope:fighter_of_duel = {
				add_nickname = THE_TAKER_OF_SOULS
				add_popularity = 5
				add_character_modifier = {
					name = renowned_fighter
					duration = 3650
				}					
				family = {
					add_prestige = 100
				}
			}
		}
		else = {
			scope:fighter_of_duel = {
				add_popularity = 5
				add_character_modifier = {
					name = renowned_fighter
					duration = 3650
				}					
				family = {
					add_prestige = 100
				}
			}
		}
	}
}

bhadrabahu_goes_south_effect = {
	hidden_effect = {
	    ordered_country = {
	        limit = {
	            NOT = { this = root }
	            any_owned_province = {
	                OR = {
	                    is_in_region = dravida_region
	                    is_in_region = karnata_region
	                }
	            }
	        }
	        order_by = num_of_cities
	        save_scope_as = bhadrabahu_country
	    }
	}
	global_var:jain_priest_var = {
	    remove_all_offices = yes
	    if = {
	        limit = {
	            exists = scope:bhadrabahu_country
	        }
	        move_country = scope:bhadrabahu_country
	        scope:bhadrabahu_country = {
	            trigger_event = bhadrabahu.1
	        }
	    }
	    else = {
	    	ordered_country = {
	    		limit = {
	    			NOT = { this = root }
	    			any_owned_province = {
	    				OR = {
	    					is_in_central_india_trigger = yes
	    					is_in_south_india_trigger = yes
	    				}
	    			}
	    		}
	    		order_by = num_of_cities
	    		prev = {
	    			move_country = prev
	    		}
	    		trigger_event = bhadrabahu.1
	    		save_scope_as = bhadrabahu_country
	    	}
	    }
	}
	set_global_variable = bhadrabahu_went_south
}

spread_religion_in_province = {
	# Convert 12.5% - 25% of a provinces pops to $RELIGION$
	# Needs a new tooltip for each religion used.
	save_scope_as = province_name
	custom_tooltip = spread_$RELIGION$_in_province_tt
	hidden_effect = {
		ordered_pops_in_province = {
			limit = {
				NOT = { pop_religion = $RELIGION$ }
			}
			max = {
				scope:province_name = {
					every_pops_in_province = {
						add = 1
					}
				}
				divide =  {
					integer_range = {
						max = 8
						min = 4
					}
				}
			}
			set_pop_religion = $RELIGION$
		}
	}
}