# Mega effect because all this stuff is highly interdependent and uses every_country_state which so better to combine
ai_handle_forts_and_state_capitals = {
    if = {
        limit = {
            OR = {
                $periodic$ = 0
                NOT = {
                    has_variable = cached_border_states
                }
            }
            has_land = yes
        }
        set_variable = {
            name = cached_border_states
            days = 710 # 1 year + 11.5 months - every 2 years
        }

        clear_variable_list = country_border_states
        every_country_state = {
            ai_cache_if_state_is_borderland = yes
        }

        if = {
            limit = {
                is_ai = yes
                war = no
            }
            every_country_state = {
                ai_move_state_capitals_to_optimal = yes
                ai_optimize_forts = yes
            }
        }
    }
}

ai_cache_if_state_is_borderland = {
    if = {
        limit = {
            save_temporary_scope_as = evaluated_state
            OR = {
                any_state_province = {
                    has_city_status = yes
                }
                area = {
                    any_area_province = {
                        percent > 0.3333
                        exists = state
                        state = scope:evaluated_state
                    }
                }
            }
            OR = {
                any_state_province = {
                    OR = {
                        is_coastal = yes
                        is_adjacent_to_major_river = yes
                    }
                }
                area = {
                    # Any state in same area neighboring to evaluated is not ruled by us
                    any_area_state = {
                        owner = {
                            NOR = {
                                this = scope:evaluated_state.owner
                                AND = {
                                    is_subject_of = scope:evaluated_state.owner
                                    is_permanent_subject = yes
                                }
                            }
                        }
                        state_is_neighbor_of_including_unowned = {
                            state = scope:evaluated_state
                        }
                    }
                }
                area = {
                    any_neighbor_area = {
                        OR = {
                            # Any state in neighbor areas neighboring to evaluated is not ruled by us
                            any_area_state = {
                                owner = {
                                    NOR = {
                                        this = scope:evaluated_state.owner
                                        AND = {
                                            is_subject_of = scope:evaluated_state.owner
                                            is_permanent_subject = yes
                                        }
                                    }
                                }
                                state_is_neighbor_of_including_unowned = {
                                    state = scope:evaluated_state
                                }
                            }
                            # Neighbor area is fully unowned but can be used for army movement
                            AND = {
                                any_area_state = {
                                    count = 0
                                }
                                any_area_province = {
                                    is_water = no
                                }
                            }
                        }
                    }
                }
            }
        }
        owner = {
            add_to_variable_list = {
                name = country_border_states
                target = prev
            }
        }
    }
}

ai_move_state_capitals_to_optimal = {
    if = {
        limit = {
            # Vanilla requirements for moving state capital
            is_capital_state = no
            capital_scope.state_loyalty >= 50
            # Additional requirements to not ruin state loyalty
            OR = {
                AND = {
                    capital_scope.state_loyalty >= 70
                    monthly_state_loyalty_without_policy >= 0
                }
                AND = {
                    capital_scope.state_loyalty >= 80
                    monthly_state_loyalty_without_policy >= -0.05
                }
                AND = {
                    capital_scope.state_loyalty >= 90
                    monthly_state_loyalty_without_policy >= -0.10
                }
            }
            # Current capital is not the one we moved to recently
            NOT = {
                capital_scope = {
                    has_variable = ai_moved_state_capital_to_this
                }
            }
        }
        ordered_state_province = {
            order_by = territory_priority_for_state_capital
            position = 0
            
            if = {
                limit = {
                    is_state_capital = no
                }
                add_state_loyalty = {
                    value = province_capital_price_svalue
                    multiply = -1
                }
                state = {
                    set_state_capital = prev
                }
                set_variable = {
                    name = ai_moved_state_capital_to_this
                    days = 1825 # 5 years cooldown
                }
            }
        }
    }
}

ai_optimize_forts = {
    if = {
        limit = {
            state_is_disloyal = no
        }

        # Remove all forts in non-border states, except country capital territory
        if = {
            limit = {
                state_is_border = no
            }
            every_state_province = {
                limit = {
                    ai_wants_giga_fort_in_territory = no
                }
                while = {
                    limit = {
                        trigger_if = {
                            limit = {
                                ai_wants_mega_fort_in_territory = yes
                            }
                            fort_level_including_construction > level_of_mega_fort_wanted
                        }
                        trigger_else_if = {
                            limit = {
                                ai_wants_single_fort_in_territory = yes
                            }
                            fort_level_including_construction > 1
                        }
                        trigger_else = {
                            fort_level_including_construction > 0
                        }
                    }

                    if = {
                        limit = {
                            has_specific_construction = fortress_building
                        }
                        cancel_building_construction = fortress_building
                    }
                    remove_building_level = fortress_building

                    if = {
                        limit = {
                            # fort_level_including_construction = 0
                            owner = {
                                treasury >= country_fortress_building_cost
                            }
                        }
                        owner = {
                            if = {
                                limit = {
                                    capital_scope = {
                                        fort_level_including_construction <= 0
                                        free_building_slots > 0
                                    }
                                }
                                capital_scope = {
                                    start_building_construction = fortress_building
                                }
                            }
                            else = {
                                random_country_state = {
                                    # variable = country_border_states
                                    limit = {
                                        state_is_disloyal = no
                                        NOT = {
                                            any_state_province = {
                                                fort_level_including_construction > 0
                                            }
                                        }
                                        any_state_province = {
                                            fort_level_including_construction <= 0
                                            free_building_slots > 0
                                            ai_wants_single_fort_in_territory = yes
                                        }
                                    }
                                    weight = {
                                        modifier = {
                                            add = 100
                                            state_is_border = yes
                                        }
                                    }
                                    random_state_province = {
                                        limit = {
                                            fort_level_including_construction <= 0
                                            free_building_slots > 0
                                            ai_wants_single_fort_in_territory = yes
                                        }
                                        start_building_construction = fortress_building
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        # In border states remove all forts in non-capital territories and build fort in capital
        else = {
            every_state_province = {
                limit = {
                    ai_wants_giga_fort_in_territory = no
                }
                while = {
                    limit = {
                        trigger_if = {
                            limit = {
                                ai_wants_mega_fort_in_territory = yes
                            }
                            fort_level_including_construction > level_of_mega_fort_wanted
                        }
                        trigger_else_if = {
                            limit = {
                                ai_wants_single_fort_in_territory = yes
                            }
                            fort_level_including_construction > 1
                        }
                        trigger_else = {
                            fort_level_including_construction > 0
                        }
                    }

                    if = {
                        limit = {
                            has_specific_construction = fortress_building
                        }
                        cancel_building_construction = fortress_building
                    }
                    remove_building_level = fortress_building
                }
            }

            if = {
                limit = {
                    NOT = {
                        any_state_province = {
                            fort_level_including_construction > 0
                        }
                    }
                    owner = {
                        treasury >= country_fortress_building_cost
                    }
                }
                if = {
                    limit = {
                        capital_scope = {
                            fort_level_including_construction <= 0
                            free_building_slots > 0
                            ai_wants_single_fort_in_territory = yes
                        }
                    }
                    capital_scope = {
                        start_building_construction = fortress_building
                    }
                }
                else = {
                    random_state_province = {
                        limit = {
                            fort_level_including_construction <= 0
                            free_building_slots > 0
                            ai_wants_single_fort_in_territory = yes
                        }
                        start_building_construction = fortress_building
                    }
                }
            }
        }
    }
}