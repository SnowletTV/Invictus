# Note that this may kinda steal goods due to add_trade_route probably ignoring a lot of things
ai_import_into_low_food_states = {
    if = {
        limit = {
            NOT = {
                has_global_variable = ai_imported_into_low_food_states
            }
        }
        set_global_variable = {
            name = ai_imported_into_low_food_states
            days = 365
        }

        ordered_country = {
            limit = {
                has_land = yes
                is_ai = yes
                any_country_state = {
                    unused_trade_routes > 0
                    state_has_low_food = yes
                }
            }
            order_by = country_population
            min = 0
            max = 999999
            check_range_bounds = no

            save_scope_as = importing_country
            
            every_country = {
                limit = {
                    has_land = yes
                    OR = {
                        this = scope:importing_country
                        AND = {
                            # Don't steal trade goods from players
                            is_ai = yes
                            # Required for trading
                            scope:importing_country = {
                                in_diplomatic_range = prev
                            }
                            NOT = {
                                war_with = scope:importing_country
                            }
                            # Threshold where negative opinion outweights the base value
                            opinion = {
                                target = scope:importing_country
                                value > -120
                            }
                            # Allowed to trade all the goods we are looking for
                            is_trade_goods_allowed = grain
                            is_trade_goods_allowed = cattle
                            is_trade_goods_allowed = fish
                            is_trade_goods_allowed = vegetables
                            is_trade_goods_allowed = olive
                        }
                    }
                }

                # Save states to export from to variable lists in country scope. The reason is that there may be a lot
                # of low food states in the world, so it's much better to make every country loop over its states only
                # once and save the result, rather than do it over and over again for each country with low food states
                if = {
                    limit = {
                        NOT = {
                            has_variable = ai_created_lists_of_food_states
                        }
                    }                    
                    set_variable = ai_created_lists_of_food_states
                    every_country_state = {
                        limit = {
                            # Don't steal food from states that need it themselves
                            share_of_cities_in_state < 0.1666
                            # Disloyal states can't export goods
                            state_is_disloyal = no
                        }
                        # Limit it to widely available food, don't steal relatively rare capital effects from players
                        ai_add_to_list_if_state_can_export = {
                            goods = grain
                        }
                        ai_add_to_list_if_state_can_export = {
                            goods = cattle
                        }
                        ai_add_to_list_if_state_can_export = {
                            goods = fish
                        }
                        ai_add_to_list_if_state_can_export = {
                            goods = vegetables
                        }
                        ai_add_to_list_if_state_can_export = {
                            goods = olive
                        }
                    }
                }

                # Copy country scope lists into local lists made specifically for the country with low food state
                ai_duplicate_states_that_can_export = {
                    goods = grain
                }
                ai_duplicate_states_that_can_export = {
                    goods = cattle
                }
                ai_duplicate_states_that_can_export = {
                    goods = fish
                }
                ai_duplicate_states_that_can_export = {
                    goods = vegetables
                }
                ai_duplicate_states_that_can_export = {
                    goods = olive
                }
            }

            # Check if at least any of the lists exists before proceeding
            if = {
                limit = {
                    OR = {
                        has_non_empty_local_variable_list = {
                            name = states_to_import_grain_from
                        }
                        has_non_empty_local_variable_list = {
                            name = states_to_import_cattle_from
                        }
                        has_non_empty_local_variable_list = {
                            name = states_to_import_fish_from
                        }
                        has_non_empty_local_variable_list = {
                            name = states_to_import_vegetables_from
                        }
                        has_non_empty_local_variable_list = {
                            name = states_to_import_olive_from
                        }
                    }
                }
                every_country_state = {
                    limit = {
                        unused_trade_routes > 0
                        state_has_low_food = yes
                    }
                    save_scope_as = importing_state

                    # If capital and doesn't have bonus from olives, try to import them
                    if = {
                        limit = {
                            is_capital_state = yes
                            trade_good_surplus = {
                                target = olive
                                value < 2
                            }
                        }
                        ai_import_goods_into_specific_state = {
                            goods = olive
                            target = 2
                        }
                    }

                    # Grain is preferred for giving 2x food compared to other goods
                    ai_import_goods_into_specific_state = {
                        goods = grain
                        target = -1
                    }

                    # Coinflip if we prefer cattle or fish next
                    random_list = {
                        50 = {
                            ai_import_goods_into_specific_state = {
                                goods = cattle
                                target = -1
                            }
                            ai_import_goods_into_specific_state = {
                                goods = fish
                                target = -1
                            }
                        }
                        50 = {
                            ai_import_goods_into_specific_state = {
                                goods = fish
                                target = -1
                            }
                            ai_import_goods_into_specific_state = {
                                goods = cattle
                                target = -1
                            }
                        }
                    }

                    # Lower priority food but will do if nothing else works
                    ai_import_goods_into_specific_state = {
                        goods = vegetables
                        target = -1
                    }
                    ai_import_goods_into_specific_state = {
                        goods = olive
                        target = -1
                    }

                    clear_saved_scope = importing_state
                }

                # Clear combined local lists
                clear_local_variable_list = states_to_import_grain_from
                clear_local_variable_list = states_to_import_cattle_from
                clear_local_variable_list = states_to_import_fish_from
                clear_local_variable_list = states_to_import_vegetables_from
                clear_local_variable_list = states_to_import_olive_from
            }
            
            clear_saved_scope = importing_country
        }

        # After all low food states got their trade routes, clear data saved on country level
        every_country = {
            limit = {
                has_variable = ai_created_lists_of_food_states
            }
            remove_variable = ai_created_lists_of_food_states
            clear_variable_list = states_that_can_export_grain
            clear_variable_list = states_that_can_export_cattle
            clear_variable_list = states_that_can_export_fish
            clear_variable_list = states_that_can_export_vegetables
            clear_variable_list = states_that_can_export_olive
        }
    }
}

# State scope, creates states_that_can_export_$goods$ variable list in country scope
ai_add_to_list_if_state_can_export = {
    if = {
        limit = {
            trade_good_surplus = {
                target = $goods$
                value >= 2
            }
        }
        owner = {
            add_to_variable_list = {
                name = states_that_can_export_$goods$
                target = prev
            }
        }
    }
}

# Country scope, expects states_that_can_export_$goods$ variable list to be set
ai_duplicate_states_that_can_export = {
    if = {
        limit = {
            has_variable_list = states_that_can_export_$goods$
            variable_list_size = {
                name = states_that_can_export_$goods$
                value > 0
            }
        }
        every_in_list = {
            variable = states_that_can_export_$goods$
            add_to_local_variable_list = {
                name = states_to_import_$goods$_from
                target = this
            }
        }
    }
}

# State scope, requires scope:importing_state, expects local variable list states_to_import_$goods$_from
ai_import_goods_into_specific_state = {
    if = {
        limit = {
            has_non_empty_local_variable_list = {
                name = states_to_import_$goods$_from
            }
            unused_trade_routes > 0
            OR = {
                $target$ < 0
                trade_good_surplus = {
                    target = $goods$
                    value < $target$
                }
            }
        }

        set_local_variable = {
            name = importing_state_unused_trade_routes
            value = unused_trade_routes
        }

        ordered_in_local_list = {
            variable = states_to_import_$goods$_from

            # Need to re-check because this could change after routes of previous countries or iterations
            limit = {
                trade_good_surplus = {
                    target = $goods$
                    value >= 2
                }
                scope:importing_state = {
                    can_create_trade_route = {
                        target = prev
                        goods = $goods$
                    }
                }
            }

            # Prefer states with higher expected amount of the goods to export
            order_by = trade_good_surplus_$goods$
            min = 0
            max = importing_state_unused_trade_routes
            check_range_bounds = no

            # Check if previous states haven't exhausted our trade routes and haven't reached the target
            if = {
                limit = {
                    scope:importing_state = {
                        unused_trade_routes > 0
                        OR = {
                            $target$ < 0
                            trade_good_surplus = {
                                target = $goods$
                                value < $target$
                            }
                        }
                    }
                }
                # Try adding same amount of trade routes as they have surplus - may be lower if surplus is from import
                set_local_variable = {
                    name = num_goods_for_export
                    value = {
                        value = trade_good_surplus_$goods$
                        subtract = 1
                    }
                }
                while = {
                    count = local_var:num_goods_for_export
                    scope:importing_state = {
                        add_trade_route = {
                            target = prev
                            goods = $goods$
                        }
                    }
                }
                remove_local_variable = num_goods_for_export
            }
        }

        remove_local_variable = importing_state_unused_trade_routes
    }
}