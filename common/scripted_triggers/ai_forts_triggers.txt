ai_can_build_fortress_building = {
    trigger_if = {
        limit = {
            is_capital = yes
        }
        
        OR = {
            fort_level < 1
            owner = {
                all_border_states_have_forts = yes
            }
        }

        trigger_if = {
            limit = {
                owner = {
                    rank >= regional_power
                }
            }
            fort_level < 3
        }
        trigger_else = {
            always = yes
        }

        OR = {
            fort_level < 1
            state = {
                state_fort_limit_used < state_fort_limit_svalue
            }
        }
    }
    trigger_else = {
        state = {
            state_is_border = yes
        }

        OR = {
            is_state_capital = yes
            state.capital_scope = {
                free_building_slots <= 0
            }
        }

        trigger_if = {
            limit = {
                has_city_status = yes
                owner = {
                    all_border_states_have_forts = yes
                }
            }
            fort_level < 2
        }
        trigger_else = {
            fort_level < 1
        }

        state = {
            state_fort_limit_used <= 2
        }
    }
}

state_is_border_based_on_area = {
    OR = {
        any_area_state = {
            owner = {
                NOR = {
                    this = scope:evaluated_state.owner
                    AND = {
                        is_subject_of = scope:evaluated_state.owner
                        is_permanent_subject = yes
                    }
                }
            }
            state_is_neighbor_of_including_unowned = {
                state = scope:evaluated_state
            }
        }
        any_area_province = {
            NOT = {
                exists = owner
            }
            any_neighbor_province = {
                OR = {
                    NOT = {
                        exists = owner
                    }
                    owner = {
                        NOR = {
                            this = scope:evaluated_state.owner
                            AND = {
                                is_subject_of = scope:evaluated_state.owner
                                is_permanent_subject = yes
                            }
                        }
                    }
                }
            }
        }
    }
}