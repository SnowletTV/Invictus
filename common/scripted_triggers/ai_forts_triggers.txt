state_is_border = {
    owner = {
        has_non_empty_variable_list = {
            name = country_border_states
        }
        is_target_in_variable_list = {
            name = country_border_states
            target = prev
        }
    }
}

all_border_states_have_fort_in_capital = {
    has_non_empty_variable_list = {
        name = country_border_states
    }
    NOT = {
        any_in_list = {
            variable = country_border_states
            capital_scope = {
                fort_level_including_construction <= 0
                ai_territory_can_have_fort = yes
            }
        }
    }
}

ai_can_build_fortress_building = {
    # Allow to build in territories other than country capital only if it has fort or cannot have it
    OR = {
        is_capital = yes
        owner.capital_scope = {
            OR = {
                fort_level_including_construction > 0
                ai_territory_can_have_fort = no
            }
        }
    }

    # Allow to build in territories other than state capital only if it has fort or cannot have it
    OR = {
        is_state_capital = yes
        state.capital_scope = {
            OR = {
                fort_level_including_construction > 0
                ai_territory_can_have_fort = no
            }
        }
    }

    # Territory hasn't reached its target for num of forts
    ai_fort_level_is_lower_than_wanted = yes

    # Building more than level 1 is allowed only in country capital or if all border states have forts
    OR = {
        fort_level_including_construction < 1
        is_capital = yes
        owner = {
            all_border_states_have_fort_in_capital = yes
        }
    }
}

ai_wants_giga_fort_in_territory = {
    is_capital = yes
}

ai_wants_mega_fort_in_territory = {
    exists = state
    state = {
        state_is_border = yes
    }
    OR = {
        AND = {
            ai_territory_is_good_for_defense = yes
            OR = {
                is_state_capital = yes
                has_city_status = yes
            }
        }

        AND = {
            has_city_status = yes
            total_population >= 60
        }
    }

    # In capital state reserve at least 5 of fort limit for capital territory to have at least lvl 3 fort
    OR = {
        state = {
            is_capital_state = no
        }
        is_capital = yes
        state.state_fort_limit_svalue >= 10
    }
}

ai_wants_single_fort_in_territory = {
    OR = {
        AND = {
            exists = state
            state = {
                state_is_border = yes
            }
            OR = {

                # Only allow territories other than state capitals if it can't have a fort
                trigger_if = {
                    limit = {
                        state.capital_scope = {
                            ai_territory_can_have_fort = no
                        }
                    }
                    # If there are other territories having fort already, go for highest priority one
                    trigger_if = {
                        limit = {
                            state = {
                                any_state_province = {
                                    fort_level_including_construction > 0
                                }
                            }
                        }
                        fort_level_including_construction > 0
                        # Territory must be highest in priority for potentially becoming state capital
                        save_temporary_scope_as = evaluated_territory
                        NOT = {
                            state = {
                                any_state_province = {
                                    NOT = {
                                        this = scope:evaluated_territory
                                    }
                                    is_state_capital = no
                                    fort_level_including_construction > 0
                                    territory_priority_for_state_capital > scope:evaluated_territory.territory_priority_for_state_capital
                                }
                            }
                        }
                    }
                    # If there are no forts in state, choose highest priority territory that can have it
                    trigger_else = {
                        ai_territory_can_have_fort = yes
                        # Territory must be highest in priority for potentially becoming state capital
                        save_temporary_scope_as = evaluated_territory
                        NOT = {
                            state = {
                                any_state_province = {
                                    NOT = {
                                        this = scope:evaluated_territory
                                    }
                                    is_state_capital = no
                                    ai_territory_can_have_fort = yes
                                    territory_priority_for_state_capital > scope:evaluated_territory.territory_priority_for_state_capital
                                }
                            }
                        }
                    }
                }
                trigger_else = {
                    is_state_capital = yes
                }

                ai_territory_is_good_for_defense = yes

                AND = {
                    has_city_status = yes
                    total_population >= 40
                }
            }
        }

        AND = {
            has_city_status = yes
            total_population >= 60
        }
    }

    # In capital state reserve at least 5 of fort limit for capital territory to have at least lvl 3 fort
    OR = {
        state = {
            is_capital_state = no
        }
        is_capital = yes
        state.state_fort_limit_svalue >= 8
    }
}

ai_territory_can_have_fort = {
    # Ensure nothing weird happened and there are any slots at all
    num_of_total_building_slots > 0
    OR = {
        # If it has fort already, it probably can have it?
        fort_level_including_construction > 0
        # Ports are not occupying all building slots - they are higher in priority
        can_have_port = no
        port_level_including_construction < num_of_total_building_slots
    }
}

ai_fort_level_is_higher_than_wanted = {
    trigger_if = {
        limit = {
            ai_wants_giga_fort_in_territory = yes
        }
        fort_level_including_construction > level_of_giga_fort_wanted
    }
    trigger_else_if = {
        limit = {
            ai_wants_mega_fort_in_territory = yes
        }
        fort_level_including_construction > level_of_mega_fort_wanted
    }
    trigger_else_if = {
        limit = {
            ai_wants_single_fort_in_territory = yes
        }
        fort_level_including_construction > 1
    }
    trigger_else = {
        fort_level_including_construction > 0
    }
}

ai_fort_level_is_lower_than_wanted = {
    trigger_if = {
        limit = {
            ai_wants_giga_fort_in_territory = yes
        }
        fort_level_including_construction < level_of_giga_fort_wanted
    }
    trigger_else_if = {
        limit = {
            ai_wants_mega_fort_in_territory = yes
        }
        fort_level_including_construction < level_of_mega_fort_wanted
    }
    trigger_else_if = {
        limit = {
            ai_wants_single_fort_in_territory = yes
        }
        fort_level_including_construction < 1
    }
    trigger_else = {
        always = no
    }
}

ai_can_rebuild_fort_to_territory = {
    free_building_slots > 0
    fort_level_including_construction < 1
    ai_fort_level_is_lower_than_wanted = yes
    state.state_fort_limit_svalue >= state_fort_limit_with_1_more_level
}

# Covers gates, mountain passes, their desert alternatives, and probably various modifiers from missions etc.
ai_territory_is_good_for_defense = {
    OR = {
        modifier:attrition > 0
        modifier:local_hostile_attrition > 0
    }
    OR = {
        modifier:supply_limit < 0
        modifier:supply_limit_modifier < 0
        modifier:local_combat_width_modifier < 0
    }
}

territory_is_ownable = {
    # Hard to oversell how much faster this is compared to the other way
    if = {
        limit = {
            has_non_empty_global_variable_list = {
                name = ownable_territories
            }
        }
    }
    else = {
        any_ownable_province = {
            this = prev
        }
    }
}