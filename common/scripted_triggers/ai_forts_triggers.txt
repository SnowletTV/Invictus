state_is_border = {
    owner = {
        has_non_empty_variable_list = {
            name = country_border_states
        }
        is_target_in_variable_list = {
            name = country_border_states
            target = prev
        }
    }
}

all_border_states_have_forts = {
    has_non_empty_variable_list = {
        name = country_border_states
    }
    NOT = {
        any_in_list = {
            variable = country_border_states
            NOT = {
                any_state_province = {
                    fort_level_including_construction > 0
                }
            }
        }
    }
}

ai_can_build_fortress_building = {
    OR = {
        AND = {
            ai_wants_giga_fort_in_territory = yes
            fort_level_including_construction < level_of_giga_fort_wanted
        }
        AND = {
            ai_wants_mega_fort_in_territory = yes
            fort_level_including_construction < level_of_mega_fort_wanted
        }
        AND = {
            ai_wants_single_fort_in_territory = yes
            fort_level_including_construction < 1
        }
    }
    OR = {
        is_capital = yes
        fort_level_including_construction < 1
        owner = {
            all_border_states_have_forts = yes
        }
    }
    OR = {
        AND = {
            is_capital = yes
            fort_level_including_construction < 1
        }
        state.state_fort_limit_svalue >= state_fort_limit_with_1_more_level
    }
}

ai_wants_giga_fort_in_territory = {
    is_capital = yes
}

ai_wants_mega_fort_in_territory = {
    exists = state
    state = {
        state_is_border = yes
    }
    OR = {
        # Chokepoint, as in Mountain Pass
        AND = {
            has_province_modifier = lesser_pass_modifier
            OR = {
                is_state_capital = yes
                has_city_status = yes
            }
        }

        AND = {
            has_city_status = yes
            total_population >= 60
        }
    }
}

ai_wants_single_fort_in_territory = {
    OR = {
        AND = {
            exists = state
            state = {
                state_is_border = yes
            }
            OR = {
                is_state_capital = yes
                has_province_modifier = lesser_pass_modifier
                AND = {
                    has_city_status = yes
                    total_population >= 40
                }
            }
        }
        has_province_modifier = lesser_pass_modifier
        AND = {
            has_city_status = yes
            total_population >= 60
        }
    }
    # exists = state
    # state = {
    #     state_is_border = yes
    # }
    # OR = {
    #     fort_level >= 1
    #     free_building_slots >= 1
    # }
    # trigger_if = {
    #     limit = {
    #         state.capital_scope = {
    #             OR = {
    #                 fort_level >= 1
    #                 free_building_slots >= 1
    #             }
    #         }
    #     }
    #     is_state_capital = yes
    # }
    # trigger_else = {
    #     save_temporary_scope_as = evaluated_territory
    #     NOT = {
    #         state = {
    #             any_state_province = {
    #                 NOT = {
    #                     this = scope:evaluated_territory
    #                 }
    #                 is_state_capital = no
    #                 territory_priority_for_state_capital > scope:evaluated_territory.territory_priority_for_state_capital
    #             }
    #         }
    #     }
    # }
}

state_is_border_based_on_area = {
    OR = {
        any_area_state = {
            owner = {
                NOR = {
                    this = scope:evaluated_state.owner
                    AND = {
                        is_subject_of = scope:evaluated_state.owner
                        is_permanent_subject = yes
                    }
                }
            }
            state_is_neighbor_of_including_unowned = {
                state = scope:evaluated_state
            }
        }
        any_area_province = {
            NOT = {
                exists = owner
            }
            any_neighbor_province = {
                OR = {
                    NOT = {
                        exists = owner
                    }
                    owner = {
                        NOR = {
                            this = scope:evaluated_state.owner
                            AND = {
                                is_subject_of = scope:evaluated_state.owner
                                is_permanent_subject = yes
                            }
                        }
                    }
                }
            }
        }
    }
}