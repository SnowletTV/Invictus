is_advanced_ai_enabled = {
    OR = {
        has_global_variable = game_rule_advanced_ai
        # Deprecated since 1.10.1, keep it there for compatibility with 1.10 saves
        has_global_variable = game_rule_ai_custom_mercenary_recruitment
    }
}

# Same rules as found on Bribe button with some additions for the AI
ai_can_bribe_mercenary = {
    is_mercenary = yes
    in_command = yes
    # OR = {
    #     is_general = yes
    #     is_admiral = yes
    # }
    # Only armies for now
    is_general = yes
    any_character_unit = {
        unit_size > 0
        in_combat = no
    }

    save_temporary_scope_as = mercenary_to_bribe

    employer = {
        NOR = {
            tag = MER
            this = scope:recruiting_country
        }
        NOT = {
            invention = recruit_mercenary_inv
        }
        # Minor fog removal for AI. While not completely fair, we need to compensate somehow for it lacking intuition.
        # If we don't, AI countries will just drain gold with no gain, making them easier targets for players - BAD!
        trigger_if = {
            limit = {
                is_ai = yes
            }
            # Bribe AI mercs only if it's guaranteed to succeed
            OR = {
                scope:mercenary_to_bribe = {
                    any_character_unit = {
                        is_exiled = yes
                    }
                }
                treasury < ai_treasury_for_counter_bribing
            }
        }
        trigger_else = {
            # Bribe player mercs only if AI's pockets are deeper
            treasury < scope:recruiting_country.treasury
        }
    }

    scope:recruiting_country = {
        war_with = scope:mercenary_to_bribe.employer
        treasury >= scope:mercenary_to_bribe.ai_army_size_merc_estimation
        num_mercenaries_employed_svalue < max_mercenary_stacks_plus_1
    }

    # A Mercenary cannot be enticed more than once a year
    NOT = {
        has_variable = merc_buyoff_cooldown
    }

    OR = {
        location = {
            trigger_if = {
                limit = {
                    exists = controller
                }
                NOT = {
                    controller = {
                        war_with = scope:recruiting_country
                    }
                }
            }
            trigger_else_if = {
                limit = {
                    exists = owner
                }
                NOT = {
                    owner = {
                        war_with = scope:recruiting_country
                    }
                }
            }
            trigger_else = {
                always = yes
            }
        }
        NOT = {
            any_character_unit = {
                morale_percentage < 0.80
            }
        }
    }
    
    # Not exceeding the maintenance the country can cover
    NOT = {
        any_character_unit = {
            unit_default_maintenance > scope:recruiting_country.ai_free_mercenary_maintenance
        }
    }
}

# Scope is character
# Country must be saved as scope:recruiting_country
ai_can_recruit_mercenary = {
    # Basic checks for mercenary to be eligible
    is_mercenary = yes
    exists = c:MER
    employer = c:MER
    # OR = {
    #     is_general = yes
    #     is_admiral = yes
    # }
    # Only armies for now
    is_general = yes
    in_command = yes
    any_character_unit = {
        unit_size > 0
    }
    NOT = {
        any_character_unit = {
            OR = {
                in_combat = yes
                is_moving = yes
                strength_percentage < 1
            }
        }
    }
    
    # Check if mercenaries are in diplomatic range and are close enough so the AI can properly use them
    location = {
        # Prevent recruiting mercs in the enemy territory and spamming mercs on your own but occupied territories
        trigger_if = {
            limit = {
                exists = controller
            }
            NOT = {
                controller = {
                    war_with = scope:recruiting_country
                }
            }
        }
        trigger_else_if = {
            limit = {
                exists = owner
            }
            NOT = {
                owner = {
                    war_with = scope:recruiting_country
                }
            }
        }
        # Recruit mercs from unsettled territories only if they are adjacent to territories of the recruiting country
        trigger_else = {
            any_neighbor_province = {
                trigger_if = {
                    limit = {
                        exists = controller
                    }
                    controller = scope:recruiting_country
                }
                trigger_else_if = {
                    limit = {
                        exists = owner
                    }
                    owner = scope:recruiting_country
                }
                trigger_else = {
                    always = no
                }
            }
        }

        # Don't recruit mercs if enemy army will just immediately stack wipe it
        NOT = {
            any_unit_in_province = {
                is_army = yes
                unit_owner = {
                    war_with = scope:recruiting_country
                }
            }
        }

        # If we or our ally own Rhodope enclave, but our capital is not in it, Europa must have land path for mercs.
        # Should remake this into generally applicable solution, but it's pathfinding territory so may be expensive.
        trigger_if = {
            limit = {
                OR = {
                    this = p:270
                    this = p:297
                    this = p:1774
                }
                exists = owner
                owner = {
                    OR = {
                        this = scope:recruiting_country
                        alliance_with = scope:recruiting_country
                    }
                }
                scope:recruiting_country = {
                    capital_scope = {
                        NOR = {
                            this = p:270
                            this = p:297
                            this = p:1774
                        }
                    }
                }
            }
            p:349 = {
                OR = {
                    NOT = {
                        exists = owner
                    }
                    owner = {
                        OR = {
                            this = scope:recruiting_country
                            alliance_with = scope:recruiting_country
                            war_with = scope:recruiting_country
                        }
                    }
                }
            }
            area:europa_area = {
                any_area_state = {
                    owner = {
                        OR = {
                            this = scope:recruiting_country
                            alliance_with = scope:recruiting_country
                            war_with = scope:recruiting_country
                        }
                    }
                }
            }
        }
        trigger_else = {
            always = yes
        }

        # Normally mercs are available by diplomatic range, but a proper check would be to compare distance from every
        # province of the recruiting country, which is very expensive for such a frequently used trigger. Instead do a # series of simpler checks which should give us a good enough result, as mercs don't need a super precise one.
        OR = {
            # First check if we own the territory, which is the easiest scenario
            AND = {
                exists = owner
                owner = scope:recruiting_country
            }
            AND = {
                # If we don't, but there's still some owner, use fast native check if the owner is in range
                OR = {
                    NOT = {
                        exists = owner
                    }
                    owner = {
                        in_diplomatic_range = scope:recruiting_country
                    }
                }
                # Then check territory distance from governorships capitals, good coverage but not as many checks
                save_temporary_scope_as = mercenary_territory
                scope:recruiting_country = {
                    any_governorships = {
                        exists = capital_scope
                        capital_scope = {
                            distance_from = {
                                province = scope:mercenary_territory
                                value <= scope:recruiting_country.diplomatic_range_svalue
                            }
                        }
                    }
                }
            }
        }
        
        save_temporary_scope_as = mercenary_territory
        # Country is present in mercenary region or its neighbours with exceptions
        region = {
            save_temporary_scope_as = mercenary_region
            scope:recruiting_country = {
                any_governorships = {
                    OR = {
                        capital_scope.region = scope:mercenary_region
                        # For some reason mercs from Britannia and Caledonia have troubles moving between them
                        trigger_if = {
                            limit = {
                                OR = {
                                    AND = {
                                        capital_scope.region = p:2109.region # Caledonia
                                        scope:mercenary_region = p:2022.region # Britannia
                                    }
                                    AND = {
                                        capital_scope.region = p:2022.region # Britannia
                                        scope:mercenary_region = p:2109.region # Caledonia
                                    }
                                }
                            }
                            # Allow only if recruiting country is present in area adjacent to mercenary area
                            any_governorship_state = {
                                area = {
                                    any_neighbor_area = {
                                        any_area_province = {
                                            this = scope:mercenary_territory
                                        }
                                    }
                                }
                            }
                        }
                        # For other regions being present in neighbour region should be fine
                        trigger_else = {
                            capital_scope.region = {
                                any_neighbor_region = {
                                    this = scope:mercenary_region
                                }
                            }
                        }
                    }
                }
            }
        }

        # If it's island territory, recruiting country must be owner
        trigger_if = {
            limit = {
                is_island_territory = yes
            }
            owner = scope:recruiting_country
        }
        # If it's island area, recruiting country must own non-island territory here
        trigger_else_if = {
            limit = {
                area = {
                    is_island_area = yes
                }
            }
            area = {
                any_area_province = {
                    is_island_territory = no
                    owner = scope:recruiting_country
                }
            }
        }
        # It's on the land, now check if owner is present on non-island territories
        trigger_else = {
            scope:recruiting_country = {
                any_owned_province = {
                    is_island_territory = no
                    area = {
                        is_island_area = no
                    }
                }
            }
        }
    }

    # Not exceeding the maintenance the country can cover
    NOT = {
        any_character_unit = {
            unit_default_maintenance > scope:recruiting_country.ai_free_mercenary_maintenance
        }
    }
}

ai_is_facing_comparable_threat = {
    war = yes
    save_temporary_scope_as = country_at_war
    OR = {
        # Civil wars are no joke
        has_civil_war = yes
        # Is at war with player(s) with any significant combined population
        country_population_of_enemy_players >= country_population_20_percent
        # There's a war where...
        any_current_war = {
            OR = {
                # ...enemy side has similar amount of territories as ally side
                num_of_territories_of_enemy_side >= num_of_territories_of_ally_side_minus_one_fifth
                # ...both sides have similar small-ish amount of territories
                num_of_territories_of_enemy_side >= num_of_territories_of_ally_side_minus_ten
                # ...enemy side has similar amount of population as ally side
                country_population_of_enemy_side >= country_population_of_ally_side_minus_one_fifth
                # ...both sides have similar small-ish amount of population
                country_population_of_enemy_side >= country_population_of_ally_side_minus_thirty
            }
        }
        # A lot of our territories are occupied
        any_owned_province = {
            percent >= 0.25
            controller = {
                war_with = scope:country_at_war
            }
        }
    }
}

ai_is_facing_existential_threat = {
    war = yes
    save_temporary_scope_as = country_at_war
    OR = {
        # Civil wars are no joke
        has_civil_war = yes
        # Is at war with player(s) with somewhat comparable combined population
        country_population_of_enemy_players >= country_population_40_percent
        # There's a war where...
        any_current_war = {
            OR = {
                # ...enemy side has much larger amount of territories than ally side
                num_of_territories_of_enemy_side >= num_of_territories_of_ally_side_plus_three_fifths
                # ...enemy side has much larger amount of population than ally side
                country_population_of_enemy_side >= country_population_of_ally_side_plus_three_fifths
            }
        }
        # A lot of our territories are occupied
        any_owned_province = {
            percent >= 0.50
            controller = {
                war_with = scope:country_at_war
            }
        }
    }
}

is_island_territory = {
    OR = {
        # Isolated part of Cyclades
        this = p:1915
        this = p:263
        this = p:375
        this = p:387
        # No neighbouring land territories
        NOT = {
            any_neighbor_province = {
                is_sea = no
            }
        }
    }
}

is_island_area = {
    OR = {
        # Corsica
        this = p:3508.area
        # Sardinia
        this = p:3506.area
        this = p:3483.area
        # No neighbouring land areas
        any_neighbor_area = {
            count = 0
            any_area_province = {
                is_sea = no
            }
        }
    }
}

is_mercenary_unit = {
    exists = commander
    commander = {
        is_mercenary = yes
    }
}

is_legion_unit = {
    has_legion_trigger = yes
}

unit_pays_maintenance = {
    trigger_if = {
        limit = {
            is_army = yes
        }
        OR = {
            is_legion_unit = yes
            is_mercenary_unit = yes
        }
    }
    trigger_else_if = {
        limit = {
            is_navy = yes
        }
        always = yes
    }
    trigger_else = {
        always = no
    }
}