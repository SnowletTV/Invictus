is_advanced_ai = {
    OR = {
        has_global_variable = game_rule_advanced_ai
        # Deprecated since 1.10.1, keep it there for compatibility with 1.10 saves
        has_global_variable = game_rule_ai_custom_mercenary_recruitment
    }
}

# Scope is character
# Country must be saved as scope:recruiting_country
country_can_recruit_mercenary = {
    is_mercenary = yes
    exists = c:MER
    employer = c:MER
    OR = {
        is_general = yes
        is_admiral = yes
    }
    in_command = yes
    any_character_unit = {
        unit_size > 0
    }
    NOT = {
        any_character_unit = {
            OR = {
                in_combat = yes
                is_moving = yes
                strength_percentage < 1
            }
        }
    }
    location = {
        distance_from = {
            province = scope:recruiting_country.capital_scope
            value <= scope:recruiting_country.diplomatic_range_svalue
        }
    }
}

# Scope is character
# Country must be saved as scope:recruiting_country
country_should_recruit_mercenary = {
    is_general = yes
    NOT = {
        any_character_unit = {
            unit_typical_maintenance_at_default_policy > scope:recruiting_country.ai_free_mercenary_maintenance
        }
    }
    location = {
        # Prevent  mercs in the enemy territory and spamming mercs on your own but occupied territories
        trigger_if = {
            limit = {
                exists = controller
            }
            NOT = {
                controller = {
                    war_with = scope:recruiting_country
                }
            }
        }
        trigger_else_if = {
            limit = {
                exists = owner
            }
            NOT = {
                owner = {
                    war_with = scope:recruiting_country
                }
            }
        }
        # Recruit mercs from unsettled territories only if they are adjacent to territories of the recruiting country
        trigger_else = {
            any_neighbor_province = {
                trigger_if = {
                    limit = {
                        exists = controller
                    }
                    controller = scope:recruiting_country
                }
                trigger_else_if = {
                    limit = {
                        exists = owner
                    }
                    owner = scope:recruiting_country
                }
                trigger_else = {
                    always = no
                }
            }
        }
        
        save_temporary_scope_as = mercenary_territory
        # Country is present in mercenary region or its neighbours with exceptions
        region = {
            save_temporary_scope_as = mercenary_region
            scope:recruiting_country = {
                any_governorships = {
                    OR = {
                        capital_scope.region = scope:mercenary_region
                        # For some reason mercs from Britannia and Caledonia have troubles moving between them
                        trigger_if = {
                            limit = {
                                OR = {
                                    AND = {
                                        capital_scope.region = p:2109.region # Caledonia
                                        scope:mercenary_region = p:2022.region # Britannia
                                    }
                                    AND = {
                                        capital_scope.region = p:2022.region # Britannia
                                        scope:mercenary_region = p:2109.region # Caledonia
                                    }
                                }
                            }
                            # Allow only if recruiting country is present in area adjacent to mercenary area
                            any_governorship_state = {
                                area = {
                                    any_neighbor_area = {
                                        any_area_province = {
                                            this = scope:mercenary_territory
                                        }
                                    }
                                }
                            }
                        }
                        # For other regions being present in neighbour region should be fine
                        trigger_else = {
                            capital_scope.region = {
                                any_neighbor_region = {
                                    this = scope:mercenary_region
                                }
                            }
                        }
                    }
                }
            }
        }

        # If it's island territory, recruiting country must be owner
        trigger_if = {
            limit = {
                is_island_territory = yes
            }
            owner = scope:recruiting_country
        }
        # If it's island area, recruiting country must own non-island territory here
        trigger_else_if = {
            limit = {
                area = {
                    is_island_area = yes
                }
            }
            area = {
                any_area_province = {
                    is_island_territory = no
                    owner = scope:recruiting_country
                }
            }
        }
        # It's on the land, now check if owner is present on non-island territories
        trigger_else = {
            scope:recruiting_country = {
                any_owned_province = {
                    is_island_territory = no
                    area = {
                        is_island_area = no
                    }
                }
            }
        }
    }
}

ai_is_facing_comparable_threat = {
    war = yes
    save_temporary_scope_as = country_at_war
    OR = {
        # Civil wars are no joke
        has_civil_war = yes
        # Is at war with a player, which is always dangerous
        any_countries_at_war_with = {
            is_ai = no
        }
        # There's a war where...
        any_current_war = {
            OR = {
                # ...enemy side has similar amount of territories as ally side
                num_of_territories_of_enemy_side >= num_of_territories_of_ally_side_minus_one_sixth
                num_of_territories_of_enemy_side >= num_of_territories_of_ally_side_minus_ten
                # ...enemy side combined would be equal to a great power, so it must be an absolutely massive war.
                num_of_territories_of_enemy_side >= 500
            }
        }
        # A lot of out territories are occupied
        any_owned_province = {
            percent >= 0.25
            controller = {
                war_with = scope:country_at_war
            }
        }
    }
}

ai_is_facing_existential_threat = {
    war = yes
    save_temporary_scope_as = country_at_war
    OR = {
        # Civil wars are no joke
        has_civil_war = yes
        # Is at war with a player, which is always dangerous
        any_countries_at_war_with = {
            is_ai = no
        }
        # There's a war where...
        any_current_war = {
            OR = {
                # ...enemy side is 1.(6) times larger than ally side. This is similar to a country having higher rank,
                # as e.g. great power vs average major power is 500 to 300, which would be exactly 1.(6) times larger.
                num_of_territories_of_enemy_side >= num_of_territories_of_ally_side_plus_two_thirds
                # ...enemy side combined would be equal to a great power, so it must be an absolutely massive war.
                num_of_territories_of_enemy_side >= 500
            }
        }
        # A lot of out territories are occupied
        any_owned_province = {
            percent >= 0.50
            controller = {
                war_with = scope:country_at_war
            }
        }
    }
}

is_island_territory = {
    OR = {
        # Isolated part of Cyclades
        this = p:1915
        this = p:263
        this = p:375
        this = p:387
        # No neighbouring land territories
        NOT = {
            any_neighbor_province = {
                is_sea = no
            }
        }
    }
}

is_island_area = {
    OR = {
        # Corsica
        this = p:3508.area
        # Sardinia
        this = p:3506.area
        this = p:3483.area
        # No neighbouring land areas
        any_neighbor_area = {
            count = 0
            any_area_province = {
                is_sea = no
            }
        }
    }
}

is_mercenary_unit = {
    exists = commander
    commander = {
        is_mercenary = yes
    }
}

is_legion_unit = {
    has_legion_trigger = yes
}