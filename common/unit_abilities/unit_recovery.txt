unit_recovery = {

	duration = -1
	enable = yes
	toggle = yes
	army_only = yes
	
	map = yes
	
	soundeffect ="event:/SFX/UI/Unit/sfx_ui_unit_reorganization"


	allow = {
		is_army = yes
		in_combat = no
		is_moving = no
		is_exiled = no
		hidden:unit_location = {
			has_owner = yes
			OR = {
				controller = root.unit_owner
				controller = {
					alliance_with = root.unit_owner
				}
				controller = {
					is_subject_of = root.unit_owner
				}
			}
			OR = {
				owner = root.unit_owner
				owner = {
					alliance_with = root.unit_owner
				}
				owner = {
					is_subject_of = root.unit_owner
				}
			}
		}
		trigger_if = {
			limit = {
				exists = commander
			}
			commander = {
				loyalty > 33
			}
		}
	}
	modifier = {
		cohort_reinforcement_speed = 0.25
		land_morale_recovery = 0.1
		army_maintenance_cost = 1.0
		army_movement_speed = -0.33
	}
	
	
	start_effect = {

	}
	
	finished_when = {
		unit_location = { 	
			OR = {
				NOT = {
					exists = owner
				}
				NOR = {
					root.unit_owner = controller
					controller = {
						alliance_with = root.unit_owner
					}
					controller = {
						is_subject_of = root.unit_owner
					}
				}
			}
		} 
	}
	
	ai_will_do = {
		modifier = {
			trigger = {
				morale_percentage < 0.60

				# For units with paid maintenance - only if treasury is big enough
				trigger_if = {
					limit = {
						OR = {
							is_legion_unit = yes
							is_mercenary_unit = yes
						}
					}
					unit_owner = {
						treasury >= ai_treasury_for_unit_recovery
					}
				}
				# Otherwise it's literally free
				trigger_else = {
					always = yes
				}
			}
			add = {
				value = 250
			}
		}

		# Don't do it outside of war
		modifier = {
			trigger = {
				unit_owner = {
					war = no
				}
			}
			factor = 0
		}
	}
	
	ai_will_revoke = {
		OR = {
			morale_percentage >= 0.85
			# Don't do it outside of war
			unit_owner = {
				war = no
			}
			# For units with paid maintenance - only if treasury is big enough
			AND = {
				OR = {
					is_legion_unit = yes
					is_mercenary_unit = yes
				}
				unit_owner = {
					treasury < ai_treasury_for_unit_recovery_active
				}
			}
		}
	}
	
	idle_entity_state = recruiting
}