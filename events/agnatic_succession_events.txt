##Agnatic Succession - Sons only can inherit 

namespace = agnatic_succession_calculation

agnatic_succession_calculation.1 = {
	type = country_event
	hidden = yes

    immediate = {

        current_ruler = {
		save_scope_as = the_true_ruler
	    }

        #get_my_ruler_effect = yes

        #########################################################################################
        ## Check for existence of character then ordered character to prevent error log spam   ##
        #########################################################################################

        ##Primary Heir
        if = {
            limit = {
                any_character = {
                    NOT = { has_character_modifier = retired_ruler }
                    has_same_family = scope:the_true_ruler
                    is_ruler = no
                    is_male = yes
                }
            }
            ordered_character = {
                limit = {
                    NOT = { has_character_modifier = retired_ruler }
                    has_same_family = scope:the_true_ruler
                    is_male = yes
                    is_ruler = no 
                }
                check_range_bounds = no
                order_by = calc_agnatic_succession_svalue
                max = 1
                add_character_modifier = {
                    name = primary_heir_succession_value
                }
            }
        }
        ##Secondary Heir
        if = {
            limit = {
                any_character = {
                    NOT = { has_character_modifier = retired_ruler }
                    has_same_family = scope:the_true_ruler
                    is_male = yes
                    is_ruler = no
                    NOT = {
                        has_character_modifier = primary_heir_succession_value
                    }
                }
            }
            ordered_character = {
                limit = {
                    NOT = { has_character_modifier = retired_ruler }
                    has_same_family = scope:the_true_ruler
                    is_male = yes
                    is_ruler = no
                    NOT = {
                        has_character_modifier = primary_heir_succession_value
                    }
                }
                check_range_bounds = no
                order_by = calc_agnatic_succession_svalue
                max = 1
                add_character_modifier = {
                    name = pretender_succession_value_1
                }
            }
        }
        ##Tertiary Heir
        if = {
            limit = {
                any_character = {
                    NOT = { has_character_modifier = retired_ruler }
                    has_same_family = scope:the_true_ruler
                    is_male = yes
                    is_ruler = no
                    NOT = {
                        has_character_modifier = primary_heir_succession_value
                    }
                    NOT = {
                        has_character_modifier = pretender_succession_value_1
                    }
                }
            }
            ordered_character = {
                limit = {
                    NOT = { has_character_modifier = retired_ruler }
                    has_same_family = scope:the_true_ruler
                    is_male = yes
                    is_ruler = no
                    NOT = {
                        has_character_modifier = primary_heir_succession_value
                    }
                    NOT = {
                        has_character_modifier = pretender_succession_value_1
                    }
                }
                check_range_bounds = no
                order_by = calc_agnatic_succession_svalue
                max = 1
                add_character_modifier = {
                    name = pretender_succession_value_2
                }
            }
        }
        ##Last Heir
        if = {
            limit = {
                any_character = {
                    NOT = { has_character_modifier = retired_ruler }
                    has_same_family = scope:the_true_ruler
                    is_male = yes
                    is_ruler = no
                    NOT = {
                        has_character_modifier = primary_heir_succession_value
                    }
                    NOT = {
                        has_character_modifier = pretender_succession_value_1
                    }
                    NOT = {
                        has_character_modifier = pretender_succession_value_2
                    }
                }
            }
            ordered_character = {
                limit = {
                    NOT = { has_character_modifier = retired_ruler }
                    has_same_family = scope:the_true_ruler
                    is_male = yes
                    is_ruler = no
                    NOT = {
                        has_character_modifier = primary_heir_succession_value
                    }
                    NOT = {
                        has_character_modifier = pretender_succession_value_1
                    }
                    NOT = {
                        has_character_modifier = pretender_succession_value_2
                    }
                }
                check_range_bounds = no
                order_by = calc_agnatic_succession_svalue
                max = 1
                add_character_modifier = {
                    name = pretender_succession_value_3
                }
            }
        }
        ## END OF CALCULATIONS - Tell game to update succession
        recalc_succession = yes        
    }
}
