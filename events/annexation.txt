namespace = annexation

annexation.1 = {
	type = country_event
	title = "annexation.1.t"
	desc = "annexation.1.desc"
	goto_location = scope:annexee
	left_portrait = current_ruler
	right_portrait = scope:banish_first
	right_portrait = scope:banish_second
	right_portrait = scope:banish_third
	
	picture = persia_marching
	
	option = {
		name = "annexation.1.a"
		scope:banish_first = {
			add_loyalty = loyalty_offered_refuge
			set_home_country = ROOT
			set_as_minor_character = THIS
		}
		scope:banish_second = {
			add_loyalty = loyalty_offered_refuge
			set_home_country = ROOT
			set_as_minor_character = THIS
		}
		scope:banish_third = {
			add_loyalty = loyalty_offered_refuge
			set_home_country = ROOT
			set_as_minor_character = THIS
		}
		ai_chance = {
			modifier = {
				factor = 20
			}
		}
	}
	
	option = {
		name = "annexation.1.b"
		trigger = {
			NAND = {
				scope:banish_first = {
					has_same_family = root.current_ruler
				}
				scope:banish_second = {
					has_same_family = root.current_ruler
				}
				scope:banish_third = {
					has_same_family = root.current_ruler
				}
			}
		}
		scope:banish_first = {
			if = {
				limit = {
					is_alive = yes
					NOT = {
						has_same_family = root.current_ruler
					}
				}
				death = {
					death_reason = death_crucified
				}
			}
		}
		scope:banish_second = {
			if = {
				limit = {
					is_alive = yes
					NOT = {
						has_same_family = root.current_ruler
					}
				}
				death = {
					death_reason = death_crucified
				}
			}
		}
		scope:banish_third = {
			if = {
				limit = {
					is_alive = yes
					NOT = {
						has_same_family = root.current_ruler
					}
				}
				death = {
					death_reason = death_crucified
				}
			}
		}
		scope:annexer = {
			add_opinion = {
				modifier = killed_fugitives
				target = root
			}
		}
		ai_chance = {
			modifier = {
				factor = 80
			}
		}
	}

} 

annexation.2 = {
	type = country_event
	title = "annexation.2.t"
	desc = "annexation.2.desc"
	goto_location = scope:annexee
	left_portrait = current_ruler
	right_portrait = scope:banish_2_first
	right_portrait = scope:banish_2_second
	right_portrait = scope:banish_2_third
	
	picture = persia_marching
	
	option = {
		name = "annexation.2.a"
		scope:banish_2_first = {
			add_loyalty = loyalty_offered_refuge
		}
		scope:banish_2_second = {
			add_loyalty = loyalty_offered_refuge
		}
		scope:banish_2_third = {
			add_loyalty = loyalty_offered_refuge
		}
		ai_chance = {
			modifier = {
				factor = 80
			}
		}
	}
	
	option = {
		name = "annexation.2.b"
		trigger = {
			NAND = {
				scope:banish_2_first = {
					has_same_family = root.current_ruler
				}
				scope:banish_2_second = {
					has_same_family = root.current_ruler
				}
				scope:banish_2_third = {
					has_same_family = root.current_ruler
				}
			}
		}
		scope:banish_2_first = {
			if = {
				limit = {
					NOT = {
						has_same_family = root.current_ruler
					}
				}
				death = {
					death_reason = death_crucified
				}
			}
		}
		scope:banish_2_second = {
			if = {
				limit = {
					NOT = {
						has_same_family = root.current_ruler
					}
				}
				death = {
					death_reason = death_crucified
				}
			}
		}
		scope:banish_2_third = {
			if = {
				limit = {
					NOT = {
						has_same_family = root.current_ruler
					}
				}
				death = {
					death_reason = death_crucified
				}
			}
		}
		scope:annexer = {
			add_opinion = {
				modifier = killed_fugitives
				target = root
			}
		}
		ai_chance = {
			modifier = {
				factor = 20
			}
		}
	}

} 

annexation.3 = {
	type = country_event
	title = "annexation.3.t"
	desc = "annexation.3.desc"
	goto_location = scope:annexee
	picture = revolt
	
	immediate = {
		scope:annexee = {
			every_country_treasure = {
				add_to_list = annexed_treasures
			}
		}
		hidden_effect = {
			scope:annexer = {
				every_character = {
					limit = {
						prisoner = yes
						has_variable = came_from
						var:came_from = scope:annexee
					}
					set_as_minor_character = THIS
					add_to_list = imprisonment_list
				}
			}
			every_living_character = {
				limit = {
					has_variable = came_from
					var:came_from = scope:annexee
				}
				set_as_minor_character = THIS
			}
		
			scope:annexee = { 
				
				#Much of this logic is replicated in the on_diplo_annexation_event_effect on_action, please don't change this without also changing that.
				#Comments should also be kept similar.
				
				#This is where we send foreigners home:
				if = {
					limit = {
						any_character = {
							has_variable = came_from
							var:came_from = scope:annexer
							prisoner = yes
						}
					}
					every_character = {
						limit = {
							has_variable = came_from
							var:came_from = scope:annexer
							prisoner = yes
						}
						scope:annexee = {
							release_prisoner = {
								target = prev
							}
						}
						remove_all_positions = yes
						move_country_with_message = scope:annexer
						if = {
							limit = {
								has_character_modifier = foreign_citizen
							}
							remove_character_modifier = foreign_citizen
						}
					}
				}
				#Mercenaries also go Home:
				if = {
					limit = {
						any_character = {
							is_mercenary = yes
							OR = {
								is_general = yes
								is_admiral = yes
							}
						}
					}
					every_character = {
						limit = {
							is_mercenary = yes
							OR = {
								is_general = yes
								is_admiral = yes
							}
						}
						move_country = c:MER
					}
				}
				
				
				
				#This is finding where banished people go:
				if = {
					limit = {
						any_country = {
							NOR = {
								this = scope:annexer
								this = scope:annexee
							}
							scope:annexer = { in_diplomatic_range = prev }
						}
					}
					random_country = {
						limit = {
							NOR = {
								this = scope:annexer
								this = scope:annexee
							}
							scope:annexer = { in_diplomatic_range = prev }
						}
						weight = {
							modifier = {
								factor = 50
								alliance_with = scope:annexee
							}
							modifier = {
								factor = 100
								opinion = {
									target = scope:annexee
									value > 80
								}
							}
						}
						save_scope_as = banishment_country
					}
				}
				
				#This is finding the second country for banished people to go:
				if = {
					limit = {
						exists = scope:banishment_country
						any_country = {
							scope:annexer = { in_diplomatic_range = prev }
							NOR = {
								this = scope:banishment_country
								this = scope:annexer
								this = scope:annexee
							}
						}
					}
					random_country = {
						limit = {
							scope:annexer = { in_diplomatic_range = prev }
							NOR = {
								this = scope:banishment_country
								this = scope:annexer
								this = scope:annexee
							}
						}
						weight = {
							modifier = {
								factor = 50
								alliance_with = scope:annexee
							}
							modifier = {
								factor = 100
								opinion = {
									target = scope:annexee
									value > 80
								}
							}
						}
						save_scope_as = banishment_country_2
					}
				}
				
				#Banishment Logic:
				#First these characters are sent to the Annexer - Depending on choices they are later killed or Banished.
				
				#First Destination:
				if = {
					limit = {
						exists = scope:banishment_country #First Banishment Destination
					}
					ordered_character = { #Destined for the first Banishment Destination
						limit = {
							is_alive = yes
							NOT = { is_in_list = banishment_list }
						}
						order_by = banishment_importance_1
						check_range_bounds = no
						max = 3
						if = {
							limit = {
								NOT = {
									exists = scope:banish_first
								}
							}
							save_scope_as = banish_first
						}
						else_if = {
							limit = {
								NOT = {
									exists = scope:banish_second
								}
							}
							save_scope_as = banish_second
						}
						else_if = {
							limit = {
								NOT = {
									exists = scope:banish_third
								}
							}
							save_scope_as = banish_third
						}
						add_to_list = banishment_list
					}
				}
			
				#Second Destination:
				if = {
					limit = {
						exists = scope:banishment_country_2 #Second Banishment Destination
					}
					ordered_character = { #Destined for the second Banishment Destination
						limit = {
							is_alive = yes
							NOT = { is_in_list = banishment_list }
						}
						order_by = banishment_importance_2
						check_range_bounds = no
						max = 3				
						if = {
							limit = {
								NOT = {
									exists = scope:banish_2_first
								}
							}
							save_scope_as = banish_2_first
						}
						else_if = {
							limit = {
								NOT = {
									exists = scope:banish_2_second
								}
							}
							save_scope_as = banish_2_second
						}
						else_if = {
							limit = {
								NOT = {
									exists = scope:banish_2_third
								}
							}
							save_scope_as = banish_2_third
						}
						add_to_list = banishment_list
					}
				}
				
				#These are people we can imprison:
				ordered_character = { #Prison Candidates
					limit = {
						is_alive = yes
						is_ruler = no
						NOT = { is_in_list = imprisonment_list }
					}
					check_range_bounds = no
					order_by = importance_value
					max = 8
					add_to_list = imprisonment_list
				}
				if = { #Ruler also goes to Prison
					limit = {
						exists = current_ruler
					}
					current_ruler = {
						if = {
							limit = {
								OR = {
									is_general = yes
									is_admiral = yes
								}
							}
							remove_command = yes
						}
						if = {
							limit = {
								is_rival = scope:actor.current_ruler
							}
							remove_rival = scope:actor.current_ruler
						}
						save_scope_as = ruler_target_annex
						if = {
							limit = {
								scope:ruler_target_annex = {
									is_alive = yes
								}
							}
							scope:ruler_target_annex = {
								if = {
									limit = { NOT = { is_in_list = imprisonment_list } }
									add_to_list = imprisonment_list
								}
							}
						}
					}
				}
				
				#Families!
				
				#This is where we find our candidate families to accept:
				ordered_family = {
					limit = {
						any_family_member = {
							is_alive = yes
							employer = scope:annexee
						}
					}
					order_by = prestige
					max = 4
					check_range_bounds = no
					if = {
						limit = {
							NOT = {
								exists = scope:first_family
							}
						}
						save_scope_as = first_family
					}
					else_if = {
						limit = {
							NOT = {
								exists = scope:second_family     
							}
						}
						save_scope_as = second_family
					}
					else_if = {
						limit = {
							NOT = {
								exists = scope:third_family
							}
						}
						save_scope_as = third_family
					}
					else_if = {
						limit = {
							NOT = {
								exists = scope:fourth_family
							}
						}
						save_scope_as = fourth_family
					}
				}
				
				#These are members of the Annexed country's great families that we may be accepting:
				
				#First Family:
				if = {
					limit = {
						exists = scope:first_family
					}
					scope:first_family = {
						head_of_family = {
							save_scope_as = first_family_head
							add_to_list = first_annex_family_list
						}
						ordered_family_member = {
							limit = { power_base > 1 }
							max = 2
							check_range_bounds = no
							order_by = power_base
							add_to_list = first_annex_family_list
						}
						random_family_member = {
							limit = {
								is_female = yes
								age < 40
							}
							add_to_list = first_annex_family_list
						}
					}
				}
				#Second Family:
				if = {
					limit = {
						exists = scope:second_family
					}
					scope:second_family = {
						head_of_family = {
							save_scope_as = second_family_head
							add_to_list = second_annex_family_list
						}
						ordered_family_member = {
							limit = { power_base > 1 }
							max = 2
							check_range_bounds = no
							order_by = power_base
							remove_all_positions = yes
							add_to_list = second_annex_family_list
						}
						random_family_member = {
							limit = {
								is_female = yes
								age < 40
							}
							add_to_list = second_annex_family_list
						}
					}
				}
				#Third Family:
				if = {
					limit = {
						exists = scope:third_family
					}
					scope:third_family = {
						head_of_family = {
							save_scope_as = third_family_head
							add_to_list = third_annex_family_list
							#Must be cleared in all options, one way or another.
						}
						ordered_family_member = {
							limit = { power_base > 1 }
							max = 2
							check_range_bounds = no
							order_by = power_base
							add_to_list = third_annex_family_list
						}
						random_family_member = {
							limit = {
								is_female = yes
								age < 40
							}
							add_to_list = third_annex_family_list
						}
					}
				}
				#Fourth Family:
				if = {
					limit = {
						exists = scope:fourth_family
					}
					scope:fourth_family = {
						head_of_family = {
							save_scope_as = fourth_family_head
							add_to_list = fourth_annex_family_list
						}
						ordered_family_member = {
							limit = { power_base > 1 }
							max = 2
							check_range_bounds = no
							order_by = power_base
							add_to_list = fourth_annex_family_list
						}
						random_family_member = {
							limit = {
								is_female = yes
								age < 40
							}
							add_to_list = fourth_annex_family_list
						}
						save_scope_as = family_4
					}
				}
				
				
				#Now we move everyone of interest:
	
				
				every_character = { #Now we move everyone of interest:
					limit = {
						OR = {
							is_in_list = first_annex_family_list
							is_in_list = second_annex_family_list
							is_in_list = third_annex_family_list
							is_in_list = fourth_annex_family_list
							is_in_list = imprisonment_list
							is_in_list = banishment_list
						}
					}
					remove_all_positions = yes
					move_country = scope:annexer
					set_as_minor_character = THIS
					set_home_country = scope:annexer
					add_loyalty = annexed_home_country
				}
			
				every_character = { #The rest die or vanish into obscurity.
					if = {
						limit = {
							is_adult = yes
							NOR = {
								is_in_list = first_annex_family_list
								is_in_list = second_annex_family_list
								is_in_list = third_annex_family_list
								is_in_list = fourth_annex_family_list
								is_in_list = imprisonment_list
								is_in_list = banishment_list
							}
						}
						death = {
							death_reason = death_slaughtered_during_conquest
						}
						root = {
							country_kill_counter_effect = yes
						}
					}
					else_if = {
						limit = {
							NOR = {
								is_in_list = first_annex_family_list
								is_in_list = second_annex_family_list
								is_in_list = third_annex_family_list
								is_in_list = fourth_annex_family_list
								is_in_list = imprisonment_list
								is_in_list = banishment_list
							}
						}
						death = {
							death_reason = death_obscurity
						}
					}
				}
				every_character = {
					if = {
						limit = { is_adult = yes }
						death = {
							death_reason = death_slaughtered_during_conquest
						}
						root = {
							country_kill_counter_effect = yes
						}
					}
					else = {
						death = {
							death_reason = death_obscurity
						}
					}
				}
			}
		}
		every_in_list = {
			list = annexed_treasures
			transfer_treasure_to_country = scope:annexer
		}
	}
	
	option = {
		name = "annexation.3.a" #Kill all.
		ai_chance = {
			factor = 30
		}
		custom_tooltip = everybody_gonna_die
		
		hidden_effect = { #Here we handle everyone not yet killed.
			#Those who could have lived:
			every_character = { #Now we kill everyone of interest:
					limit = {
						OR = {
							is_in_list = first_annex_family_list
							is_in_list = second_annex_family_list
							is_in_list = third_annex_family_list
							is_in_list = fourth_annex_family_list
							is_in_list = imprisonment_list
							is_in_list = banishment_list
						}
					}
					remove_all_positions = yes
					annexation_character_cleanup = yes #This cleans up all the variables.
					if = {
						limit = { is_adult = yes }
						death = {
							death_reason = death_slaughtered_during_conquest
							silent = yes
						}
					}
					else = {
						death = {
							death_reason = death_obscurity
							silent = yes
						}
					}
			}
		}

		current_ruler = { add_popularity = 5 }
		scope:annexer = {
			if = {
				limit = {
					NOT = { scope:annexee.culture = scope:annexer.culture }
					any_country_culture = {
						this.culture = scope:annexee.culture
					}
				}
				random_country_culture = {
					limit = {
						this.culture = scope:annexee.culture
					}
					if = {
						limit = {
							NOT = { has_country_culture_modifier = annexed_my_home_culture }
							NOT = { has_country_culture_modifier = annexed_my_home_culture_lenient }
						}
						add_country_culture_modifier = {
							name = "annexed_my_home_culture"
							duration = 1825
						}
					}
					else_if = {
						limit = {
							NOT = { has_country_culture_modifier = annexed_my_home_culture }
							has_country_culture_modifier = annexed_my_home_culture_lenient
						}
						remove_country_culture_modifier = annexed_my_home_culture_lenient
						add_country_culture_modifier = {
							name = "annexed_my_home_culture"
							duration = 1825
						}
					}
				}
			}
		}
	}
	
	option = {
		name = "annexation.3.b" #Banish Important People
		trigger = {
			OR = {
				exists = scope:banishment_country
				exists = scope:banishment_country_2
			}
		}
		ai_chance = {
			factor = 50
		}
		
		custom_tooltip = important_people_banished
		hidden_effect = { 
		
			#The first Banishment Destination:
			
			#Char number 1
			if = { 
				limit = {
					exists = scope:banish_first
					scope:banish_first = {
						is_alive = yes
					}
					exists = scope:banishment_country
				}
				scope:banish_first = {
					annexation_character_cleanup = yes #This cleans up all the variables so we don't track them down and kill them by mistake later.
					remove_all_positions = yes
					move_country = scope:banishment_country
					set_as_minor_character = THIS
				}
			}
			else_if = {
				limit = { exists = scope:banish_first }
				scope:banish_first = {
					annexation_character_cleanup = yes #This cleans up all the variables so we don't track them down and kill them by mistake later.
					remove_all_positions = yes
					death = {
						death_reason = death_mysteriously_retired
						silent = yes
					}
				}
			}
			
			#Char Number 2
			if = { 
				limit = {
					exists = scope:banish_second
					exists = scope:banishment_country
					scope:banish_second = {
						is_alive = yes
					}
				}
				scope:banish_second = {
					annexation_character_cleanup = yes #This cleans up all the variables so we don't track them down and kill them by mistake later.
					remove_all_positions = yes
					move_country = scope:banishment_country
					set_as_minor_character = THIS
				}
			}
			else_if = {
				limit = { exists = scope:banish_second }
				scope:banish_second = {
					annexation_character_cleanup = yes #This cleans up all the variables so we don't track them down and kill them by mistake later.
					remove_all_positions = yes
					death = {
						death_reason = death_mysteriously_retired
						silent = yes
					}
				}
			}
			
			#Char number 3
			if = { 
				limit = {
					exists = scope:banish_third
					exists = scope:banishment_country
					scope:banish_third = {
						is_alive = yes
					}
				}
				scope:banish_third = {
					annexation_character_cleanup = yes #This cleans up all the variables so we don't track them down and kill them by mistake later.
					remove_all_positions = yes
					move_country = scope:banishment_country
					set_as_minor_character = THIS
				}
			}
			else_if = {
				limit = { exists = scope:banish_third }
				scope:banish_third = {
					annexation_character_cleanup = yes #This cleans up all the variables so we don't track them down and kill them by mistake later.
					remove_all_positions = yes
					death = {
						death_reason = death_mysteriously_retired
						silent = yes
					}
				}
			}
			
			#Now Recieving country gets an event if anyone arrived:
			if = {
				limit = {
					exists = scope:banish_first
					exists = scope:banish_second
					exists = scope:banish_third
				}
				scope:banishment_country = {
					trigger_event = {
						id = annexation.1
					}
				}
			}
			
			#The Second Banishment Destination:
			
			#Char number 1
			if = { 
				limit = {
					exists = scope:banish_2_first
					exists = scope:banishment_country_2
				}
				scope:banish_2_first = {
					annexation_character_cleanup = yes #This cleans up all the variables so we don't track them down and kill them by mistake later.
					remove_all_positions = yes
					move_country = scope:banishment_country_2
					set_as_minor_character = THIS
				}
			}
			else_if = {
				limit = { exists = scope:banish_2_first }
				scope:banish_2_first = {
					annexation_character_cleanup = yes #This cleans up all the variables so we don't track them down and kill them by mistake later.
					remove_all_positions = yes
					death = {
						death_reason = death_mysteriously_retired
						silent = yes
					}
				}
			}
			
			#Char Number 2
			if = { 
				limit = {
					exists = scope:banish_2_second
					exists = scope:banishment_country_2
				}
				scope:banish_2_second = {
					annexation_character_cleanup = yes #This cleans up all the variables so we don't track them down and kill them by mistake later.
					remove_all_positions = yes
					move_country = scope:banishment_country_2
					set_as_minor_character = THIS
				}
			}
			else_if = {
				limit = { exists = scope:banish_2_second }
				scope:banish_2_second = {
					annexation_character_cleanup = yes #This cleans up all the variables so we don't track them down and kill them by mistake later.
					remove_all_positions = yes
					death = {
						death_reason = death_mysteriously_retired
						silent = yes
					}
				}
			}
			
			#Char number 3
			if = { 
				limit = {
					exists = scope:banish_2_third
					exists = scope:banishment_country_2
				}
				scope:banish_2_third = {
					annexation_character_cleanup = yes #This cleans up all the variables so we don't track them down and kill them by mistake later.
					remove_all_positions = yes
					move_country = scope:banishment_country_2
					set_as_minor_character = THIS
				}
			}
			else_if = {
				limit = { exists = scope:banish_2_third }
				scope:banish_2_third = {
					annexation_character_cleanup = yes #This cleans up all the variables so we don't track them down and kill them by mistake later.
					remove_all_positions = yes
					death = {
						death_reason = death_mysteriously_retired
						silent = yes
					}
				}
			}
			
			#Now Recieving country gets an event if anyone arrived:
			if = {
				limit = {
					exists = scope:banish_2_first
					exists = scope:banish_2_second
					exists = scope:banish_2_third
				}
				scope:banishment_country_2 = {
					trigger_event = {
						id = annexation.2
					}
				}
			}
		}
		add_aggressive_expansion = -0.5
		hidden_effect = {
			#Those who could have lived:
			every_character = { #anyone still alive with any of these variables is now killed.
					limit = {
						OR = {
							is_in_list = first_annex_family_list
							is_in_list = second_annex_family_list
							is_in_list = third_annex_family_list
							is_in_list = fourth_annex_family_list
							is_in_list = imprisonment_list
							is_in_list = banishment_list
						}
					}
					remove_all_positions = yes
					annexation_character_cleanup = yes #This cleans up all the variables.
					if = {
						limit = { is_adult = yes }
						death = {
							death_reason = death_slaughtered_during_conquest
							silent = yes
						}
					}
					else = {
						death = {
							death_reason = death_obscurity
							silent = yes
						}
					}
			}
		}
		scope:annexer = {
			if = {
				limit = {
					NOT = { scope:annexee.culture = scope:annexer.culture }
					any_country_culture = {
						this.culture = scope:annexee.culture
					}
				}
				random_country_culture = {
					limit = {
						this.culture = scope:annexee.culture
					}
					if = {
						limit = {
							NOT = { has_country_culture_modifier = annexed_my_home_culture }
							NOT = { has_country_culture_modifier = annexed_my_home_culture_lenient }
						}
						add_country_culture_modifier = {
							name = "annexed_my_home_culture_lenient"
							duration = 1825
						}
					}
				}
			}
		}
	}
	
	option = {
		name = "annexation.3.c" #Imprison prisonworthy people.
		ai_chance = {
			factor = 0
		}
		custom_tooltip = important_prisoners_taken
		current_ruler = { add_popularity = -3.5 }
		hidden_effect = {
			every_character = { #This is where we imprison those that we took in.
				limit = {
					is_in_list = imprisonment_list
				}
				save_scope_as = temp_prison
				if = {
					limit = { prisoner = no }
					scope:annexer = {
						imprison = {
							target = scope:temp_prison
						}
					}
				}
				clear_saved_scope = temp_prison
				annexation_character_cleanup = yes #This cleans up all the variables so we don't track them down and kill them by mistake later.
			}
			

			#Those who could have lived:
			every_character = { #anyone still alive with any of these variables is now killed.
				limit = {
					OR = {
						is_in_list = first_annex_family_list
						is_in_list = second_annex_family_list
						is_in_list = third_annex_family_list
						is_in_list = fourth_annex_family_list
						is_in_list = imprisonment_list
						is_in_list = banishment_list
					}
				}
				remove_all_positions = yes
				annexation_character_cleanup = yes #This cleans up all the variables.
				if = {
					limit = { is_adult = yes }
					death = {
						death_reason = death_slaughtered_during_conquest
						silent = yes
					}
				}
				else = {
					death = {
						death_reason = death_obscurity
						silent = yes
					}
				}
			}
		}
		scope:annexer = {
			if = {
				limit = {
					NOT = { scope:annexee.culture = scope:annexer.culture }
					any_country_culture = {
						this.culture = scope:annexee.culture
					}
				}
				random_country_culture = {
					limit = {
						this.culture = scope:annexee.culture
					}
					if = {
						limit = {
							NOT = { has_country_culture_modifier = annexed_my_home_culture }
							NOT = { has_country_culture_modifier = annexed_my_home_culture_lenient }
						}
						add_country_culture_modifier = {
							name = "annexed_my_home_culture_lenient"
							duration = 1825
						}
					}
				}
			}
		}
	}
	
	option = {
		name = "annexation.3.d"
		ai_chance = {
			factor = 20
		}
		custom_tooltip = decide_for_each_important_family
		
		hidden_effect = {
			scope:annexer = {
				trigger_event = {
					id = annexation.4
				}
			}
		}
		hidden_effect = {
			#Those who could have lived:
			every_character = { #anyone still alive with any of these variables is now killed - unless they are needed for the followup event.
				limit = {
					OR = {
						is_in_list = imprisonment_list
						is_in_list = banishment_list
					}
				}
				
				if = { limit = { is_in_list = imprisonment_list } remove_from_list = imprisonment_list }
				if = { limit = { is_in_list = banishment_list } remove_from_list = banishment_list }
				
				#Now we kill off anyone who is not needed in the followup Event:
				if = {
					limit = {
						NOR = {
							is_in_list = first_annex_family_list
							is_in_list = second_annex_family_list
							is_in_list = third_annex_family_list
							is_in_list = fourth_annex_family_list
						}
					}
					remove_all_positions = yes
					if = {
						limit = { is_adult = yes }
						death = {
							death_reason = death_slaughtered_during_conquest
							silent = yes
						}
					}
					else = {
						death = {
							death_reason = death_obscurity
							silent = yes
						}
					}
				}
			}
		}
		scope:annexer = {
			if = {
				limit = {
					NOT = { scope:annexee.culture = scope:annexer.culture }
					any_country_culture = {
						this.culture = scope:annexee.culture
					}
				}
				random_country_culture = {
					limit = {
						this.culture = scope:annexee.culture
					}
					if = {
						limit = {
							NOT = { has_country_culture_modifier = annexed_my_home_culture }
							NOT = { has_country_culture_modifier = annexed_my_home_culture_lenient }
						}
						add_country_culture_modifier = {
							name = "annexed_my_home_culture_lenient"
							duration = 1825
						}
					}
				}
			}
		}
	}
}

annexation.4 = {
	type = country_event
	title = "annexation.4.t"
	desc = "annexation.4.desc"
	goto_location = scope:annexee
	picture = peaceful_integration_or_crucifixion
	
	left_portrait = scope:first_family_head
	left_portrait = scope:third_family_head
	right_portrait = scope:second_family_head
	right_portrait = scope:fourth_family_head
	
	trigger = {
		OR = {
			exists = scope:first_family_head
			exists = scope:second_family_head
			exists = scope:third_family_head
			exists = scope:fourth_family_head
		}
	}
	
	option = {
		name = "annexation.4.a"
		ai_chance = {
			factor = 50
		}
		trigger = {
			any_character = { is_in_list = first_annex_family_list }
		}
		scope:first_family_head = {
			custom_tooltip = first_family_moves_to
		}
		hidden_effect = {
			every_character = {
				limit = { is_in_list = first_annex_family_list }
				remove_from_list = first_annex_family_list
				if = {
					limit = { has_character_modifier = foreign_citizen }
					remove_character_modifier = foreign_citizen
				}
				annexation_character_cleanup = yes #This cleans up all the variables so we don't track them down and kill them by mistake later.
			}
		}
		clear_saved_scope = first_family_head
		if = {
			limit = {
				any_character = {
					OR = {
						is_in_list = second_annex_family_list
						is_in_list = third_annex_family_list
						is_in_list = fourth_annex_family_list
					}
				}
			}
			trigger_event = {
				id = annexation.4 
			}
		}
		else_if = {
			limit = {
				has_variable = integration_event_check
			}
			remove_variable = integration_event_check
		}
		else_if = {
			limit = { NOT = { scope:annexee.culture = scope:annexer.culture } }
			if = {
				limit = { current_ruler = { crucifixion_efficiency_svalue > 3 } }
				ROOT = {
					if = {
						limit = {
							any_country_culture = {
								this.culture = scope:annexee.culture
							}
						}
						random_country_culture = {
							limit = {
								this.culture = scope:annexee.culture
							}
							if = {
								limit = {
									NOT = { has_country_culture_modifier = annexed_my_home_culture }
									NOT = { has_country_culture_modifier = annexed_my_home_culture_lenient }
								}
								add_country_culture_modifier = {
									name = "annexed_my_home_culture"
									duration = 1825
								}
							}
							else_if = {
								limit = {
									NOT = { has_country_culture_modifier = annexed_my_home_culture }
									has_country_culture_modifier = annexed_my_home_culture_lenient
								}
								remove_country_culture_modifier = annexed_my_home_culture_lenient
								add_country_culture_modifier = {
									name = "annexed_my_home_culture"
									duration = 1825
								}
							}
						}
					}
				}
			}
			else = {
				ROOT = {
					if = {
						limit = {
							any_country_culture = {
								this.culture = scope:annexee.culture
							}
						}
						random_country_culture = {
							limit = {
								this.culture = scope:annexee.culture
							}
							if = {
								limit = {
									NOT = { has_country_culture_modifier = annexed_my_home_culture }
									NOT = { has_country_culture_modifier = annexed_my_home_culture_lenient }
								}
								add_country_culture_modifier = {
									name = "annexed_my_home_culture_lenient"
									duration = 1825
								}
							}
						}
					}
				}
			}
		}
		current_ruler = { add_popularity = -5 }
	}
	
	option = {
		name = "annexation.4.b"
		ai_chance = {
			factor = 20
		}
		trigger = {
			any_character = { is_in_list = second_annex_family_list }
		}
		scope:second_family_head = {
			custom_tooltip = second_family_moves_to
		}
		hidden_effect = {
			every_character = {
				limit = { is_in_list = second_annex_family_list }
				remove_from_list = second_annex_family_list
				if = {
					limit = { has_character_modifier = foreign_citizen }
					remove_character_modifier = foreign_citizen
				}
				annexation_character_cleanup = yes #This cleans up all the variables so we don't track them down and kill them by mistake later.
			}
		}
		clear_saved_scope = second_family_head
		if = {
			limit = {
				any_character = {
					OR = {
						is_in_list = first_annex_family_list
						is_in_list = third_annex_family_list
						is_in_list = fourth_annex_family_list
					}
				}
			}
			trigger_event = {
				id = annexation.4 
			}
		}
		else_if = {
			limit = {
				has_variable = integration_event_check
			}
			remove_variable = integration_event_check
		}
		else_if = {
			limit = { NOT = { scope:annexee.culture = scope:annexer.culture } }
			if = {
				limit = { current_ruler = { crucifixion_efficiency_svalue > 3 } }
				ROOT = {
					if = {
						limit = {
							any_country_culture = {
								this.culture = scope:annexee.culture
							}
						}
						random_country_culture = {
							limit = {
								this.culture = scope:annexee.culture
							}
							if = {
								limit = {
									NOT = { has_country_culture_modifier = annexed_my_home_culture }
									NOT = { has_country_culture_modifier = annexed_my_home_culture_lenient }
								}
								add_country_culture_modifier = {
									name = "annexed_my_home_culture"
									duration = 1825
								}
							}
							else_if = {
								limit = {
									NOT = { has_country_culture_modifier = annexed_my_home_culture }
									has_country_culture_modifier = annexed_my_home_culture_lenient
								}
								remove_country_culture_modifier = annexed_my_home_culture_lenient
								add_country_culture_modifier = {
									name = "annexed_my_home_culture"
									duration = 1825
								}
							}
						}
					}
				}
			}
			else = {
				ROOT = {
					if = {
						limit = {
							any_country_culture = {
								this.culture = scope:annexee.culture
							}
						}
						random_country_culture = {
							limit = {
								this.culture = scope:annexee.culture
							}
							if = {
								limit = {
									NOT = { has_country_culture_modifier = annexed_my_home_culture }
									NOT = { has_country_culture_modifier = annexed_my_home_culture_lenient }
								}
								add_country_culture_modifier = {
									name = "annexed_my_home_culture_lenient"
									duration = 1825
								}
							}
						}
					}
				}
			}
		}
		current_ruler = { add_popularity = -5 }
	}
	
	option = {
		name = "annexation.4.c"
		ai_chance = {
			factor = 0
		}
		trigger = {
			any_character = { is_in_list = third_annex_family_list }
		}
		scope:third_family_head = {
			custom_tooltip = third_family_moves_to
		}
		hidden_effect = {
			every_character = {
				limit = { is_in_list = third_annex_family_list }
				remove_from_list = third_annex_family_list
				if = {
					limit = { has_character_modifier = foreign_citizen }
					remove_character_modifier = foreign_citizen
				}
				annexation_character_cleanup = yes #This cleans up all the variables so we don't track them down and kill them by mistake later.
			}
		}
		clear_saved_scope = third_family_head
		if = {
			limit = {
				any_character = {
					OR = {
						is_in_list = first_annex_family_list
						is_in_list = second_annex_family_list
						is_in_list = fourth_annex_family_list
					}
				}
			}
			trigger_event = {
				id = annexation.4 
			}
		}
		else_if = {
			limit = {
				has_variable = integration_event_check
			}
			remove_variable = integration_event_check
		}
		else_if = {
			limit = { NOT = { scope:annexee.culture = scope:annexer.culture } }
			if = {
				limit = { current_ruler = { crucifixion_efficiency_svalue > 3 } }
				ROOT = {
					if = {
						limit = {
							any_country_culture = {
								this.culture = scope:annexee.culture
							}
						}
						random_country_culture = {
							limit = {
								this.culture = scope:annexee.culture
							}
							if = {
								limit = {
									NOT = { has_country_culture_modifier = annexed_my_home_culture }
									NOT = { has_country_culture_modifier = annexed_my_home_culture_lenient }
								}
								add_country_culture_modifier = {
									name = "annexed_my_home_culture"
									duration = 1825
								}
							}
							else_if = {
								limit = {
									NOT = { has_country_culture_modifier = annexed_my_home_culture }
									has_country_culture_modifier = annexed_my_home_culture_lenient
								}
								remove_country_culture_modifier = annexed_my_home_culture_lenient
								add_country_culture_modifier = {
									name = "annexed_my_home_culture"
									duration = 1825
								}
							}
						}
					}
				}
			}
			else = {
				ROOT = {
					if = {
						limit = {
							any_country_culture = {
								this.culture = scope:annexee.culture
							}
						}
						random_country_culture = {
							limit = {
								this.culture = scope:annexee.culture
							}
							if = {
								limit = {
									NOT = { has_country_culture_modifier = annexed_my_home_culture }
									NOT = { has_country_culture_modifier = annexed_my_home_culture_lenient }
								}
								add_country_culture_modifier = {
									name = "annexed_my_home_culture_lenient"
									duration = 1825
								}
							}
						}
					}
				}
			}
		}
		current_ruler = { add_popularity = -5 }
	}
	
	option = {
		name = "annexation.4.d"
		ai_chance = {
			factor = 0
		}
		trigger = {
			any_character = { is_in_list = fourth_annex_family_list }
		}
		scope:fourth_family_head = {
			custom_tooltip = fourth_family_moves_to
		}
		hidden_effect = {
			every_character = {
				limit = { is_in_list = fourth_annex_family_list }
				remove_from_list = fourth_annex_family_list
				if = {
					limit = { has_character_modifier = foreign_citizen }
					remove_character_modifier = foreign_citizen
				}
				annexation_character_cleanup = yes #This cleans up all the variables so we don't track them down and kill them by mistake later.
			}
		}
		clear_saved_scope = fourth_family_head
		if = {
			limit = {
				any_character = {
					OR = {
						is_in_list = first_annex_family_list
						is_in_list = second_annex_family_list
						is_in_list = third_annex_family_list
					}
				}
			}
			trigger_event = {
				id = annexation.4 
			}
		}
		else_if = {
			limit = {
				has_variable = integration_event_check
			}
			remove_variable = integration_event_check
		}
		else_if = {
			limit = { NOT = { scope:annexee.culture = scope:annexer.culture } }
			if = {
				limit = { current_ruler = { crucifixion_efficiency_svalue > 3 } }
				ROOT = {
					if = {
						limit = {
							any_country_culture = {
								this.culture = scope:annexee.culture
							}
						}
						random_country_culture = {
							limit = {
								this.culture = scope:annexee.culture
							}
							if = {
								limit = {
									NOT = { has_country_culture_modifier = annexed_my_home_culture }
									NOT = { has_country_culture_modifier = annexed_my_home_culture_lenient }
								}
								add_country_culture_modifier = {
									name = "annexed_my_home_culture"
									duration = 1825
								}
							}
							else_if = {
								limit = {
									NOT = { has_country_culture_modifier = annexed_my_home_culture }
									has_country_culture_modifier = annexed_my_home_culture_lenient
								}
								remove_country_culture_modifier = annexed_my_home_culture_lenient
								add_country_culture_modifier = {
									name = "annexed_my_home_culture"
									duration = 1825
								}
							}
						}
					}
				}
			}
			else = {
				ROOT = {
					if = {
						limit = {
							any_country_culture = {
								this.culture = scope:annexee.culture
							}
						}
						random_country_culture = {
							limit = {
								this.culture = scope:annexee.culture
							}
							if = {
								limit = {
									NOT = { has_country_culture_modifier = annexed_my_home_culture }
									NOT = { has_country_culture_modifier = annexed_my_home_culture_lenient }
								}
								add_country_culture_modifier = {
									name = "annexed_my_home_culture_lenient"
									duration = 1825
								}
							}
						}
					}
				}
			}
		}
		current_ruler = { add_popularity = -5 }
	}
	
	option = {
		name = "annexation.4.e"
		trigger = {
			NOT = { has_variable = integration_event_check }
		}
		ai_chance = {
			factor = 30
		}
		if = {
			limit = {
				NOT = { scope:annexee.culture = scope:annexer.culture }
				current_ruler = { crucifixion_efficiency_svalue > 3 }
			}
			ROOT = {
				if = {
					limit = {
						any_country_culture = {
							this.culture = scope:annexee.culture
						}
					}
					random_country_culture = {
						limit = {
							this.culture = scope:annexee.culture
						}
						if = {
							limit = {
								NOT = { has_country_culture_modifier = annexed_my_home_culture }
								NOT = { has_country_culture_modifier = annexed_my_home_culture_lenient }
							}
							custom_tooltip = annexation.4.e.tt
							add_country_culture_modifier = {
								name = "annexed_my_home_culture"
								duration = 1825
							}
						}
						else_if = {
							limit = {
								NOT = { has_country_culture_modifier = annexed_my_home_culture }
								has_country_culture_modifier = annexed_my_home_culture_lenient
							}
							custom_tooltip = annexation.4.e.tt
							remove_country_culture_modifier = annexed_my_home_culture_lenient
							add_country_culture_modifier = {
								name = "annexed_my_home_culture"
								duration = 1825
							}
						}
					}
				}
			}
		}
		else_if = {
			limit = {
				NOT = { scope:annexee.culture = scope:annexer.culture }
			}
			ROOT = {
				if = {
					limit = {
						any_country_culture = {
							this.culture = scope:annexee.culture
						}
					}
					random_country_culture = {
						limit = {
							this.culture = scope:annexee.culture
						}
						if = {
							limit = {
								NOT = { has_country_culture_modifier = annexed_my_home_culture }
								NOT = { has_country_culture_modifier = annexed_my_home_culture_lenient }
							}
							add_country_culture_modifier = {
								name = "annexed_my_home_culture_lenient"
								duration = 1825
							}
						}
					}
				}
			}
		}
		custom_tooltip = per_family_crucified
		current_ruler = { add_popularity = crucifixion_efficiency_svalue }
		if = {
			limit = {
				any_character = {
					OR = {
						is_in_list = first_annex_family_list
						is_in_list = second_annex_family_list
						is_in_list = third_annex_family_list
						is_in_list = fourth_annex_family_list
					}
				}
			}
			hidden_effect = {
				every_character = {
					limit = {
						OR = {
							is_in_list = first_annex_family_list
							is_in_list = second_annex_family_list
							is_in_list = third_annex_family_list
							is_in_list = fourth_annex_family_list
						}
					}
					remove_all_positions = yes
					annexation_character_cleanup = yes #This cleans up all the variables so we don't track them down and kill them by mistake later.
					death = {
						death_reason = death_crucified
						silent = yes
					}
				}
			}
		}
	}

	option = {
		name = "annexation.5.e"
		trigger = {
			has_variable = integration_event_check
		}
		remove_variable = integration_event_check
		if = {
			limit = {
				any_character = {
					OR = {
						is_in_list = first_annex_family_list
						is_in_list = second_annex_family_list
						is_in_list = third_annex_family_list
						is_in_list = fourth_annex_family_list
					}
				}
			}
			hidden_effect = {
				every_character = {
					limit = {
						OR = {
							is_in_list = first_annex_family_list
							is_in_list = second_annex_family_list
							is_in_list = third_annex_family_list
							is_in_list = fourth_annex_family_list
						}
					}
					remove_all_positions = yes
					annexation_character_cleanup = yes #This cleans up all the variables so we don't track them down and kill them by mistake later.
					death = {
						death_reason = death_obscurity
					}
				}
			}
			
			#Replace with loyalty drop among existing family heads?
			custom_tooltip = per_family_turned_away
			current_ruler = {
				add_popularity = crucifixion_efficiency_svalue
			}
			
		}
	}
}

annexation.5 = { #Diplo Annex
	type = country_event
	title = "annexation.5.t"
	desc = "annexation.5.desc"
	goto_location = scope:annexee
	picture = greek_philosophers
	
	left_portrait = scope:first_family_head 
	left_portrait = scope:second_family_head
	right_portrait = scope:third_family_head
	right_portrait = scope:fourth_family_head
	
	trigger = {
		OR = {
			exists = scope:first_family_head
			exists = scope:second_family_head
			exists = scope:third_family_head 
			exists = scope:fourth_family_head
		}
	}
	
	immediate = {
		every_in_list = {
			list = annexed_treasures
			transfer_treasure_to_country = ROOT
		}
	}
	
	option = {
		name = "annexation.5.a"
		ai_chance = {
			factor = 10
		}
		trigger = {
			any_character = { is_in_list = first_annex_family_list }
		}
		scope:first_family_head = {
			custom_tooltip = first_family_moves_to
		}
		hidden_effect = {
			every_character = {
				limit = { is_in_list = first_annex_family_list }
				remove_from_list = first_annex_family_list
				if = {
					limit = { has_character_modifier = foreign_citizen }
					remove_character_modifier = foreign_citizen
				}
				annexation_character_cleanup = yes #This cleans up all the variables so we don't track them down and kill them by mistake later.
			}
		}
		clear_saved_scope = first_family_head
		hidden_effect = {
			if = {
				limit = {
					any_character = {
						OR = {
							is_in_list = second_annex_family_list
							is_in_list = third_annex_family_list
							is_in_list = fourth_annex_family_list
						}
					}
				}
				set_variable = integration_event_check
				trigger_event = {
					id = annexation.4 
				}
			}
		}
		current_ruler = { add_popularity = -5 }
	}
	
	option = {
		name = "annexation.5.b"
		ai_chance = {
			factor = 0
		}
		trigger = {
			any_character = { is_in_list = second_annex_family_list }
		}
		scope:second_family_head = {
			custom_tooltip = second_family_moves_to
		}
		hidden_effect = {
			every_character = {
				limit = { is_in_list = second_annex_family_list }
				remove_from_list = second_annex_family_list
				if = {
					limit = { has_character_modifier = foreign_citizen }
					remove_character_modifier = foreign_citizen
				}
				annexation_character_cleanup = yes #This cleans up all the variables so we don't track them down and kill them by mistake later.
			}
		}
		clear_saved_scope = second_family_head
		hidden_effect = {
			if = {
				limit = {
					any_character = {
						OR = {
							is_in_list = first_annex_family_list
							is_in_list = third_annex_family_list
							is_in_list = fourth_annex_family_list
						}
					}
				}
				set_variable = integration_event_check
				trigger_event = {
					id = annexation.4 
				}
			}
		}
		current_ruler = { add_popularity = -5 }
	}
	
	option = {
		name = "annexation.5.c"
		ai_chance = {
			factor = 0
		}
		trigger = {
			any_character = { is_in_list = third_annex_family_list }
		}
		scope:third_family_head = {
			custom_tooltip = third_family_moves_to
		}
		hidden_effect = {
			every_character = {
				limit = { is_in_list = third_annex_family_list }
				remove_from_list = third_annex_family_list
				if = {
					limit = { has_character_modifier = foreign_citizen }
					remove_character_modifier = foreign_citizen
				}
				annexation_character_cleanup = yes #This cleans up all the variables so we don't track them down and kill them by mistake later.
			}
		}
		clear_saved_scope = third_family_head
		hidden_effect = {
			if = {
				limit = {
					any_character = {
						OR = {
							is_in_list = first_annex_family_list
							is_in_list = second_annex_family_list
							is_in_list = fourth_annex_family_list
						}
					}
				}
				set_variable = integration_event_check
				trigger_event = {
					id = annexation.4 
				}
			}
		}
		current_ruler = { add_popularity = -5 }
	}
	
	option = {
		name = "annexation.5.d"
		ai_chance = {
			factor = 0
		}
		trigger = {
			any_character = { is_in_list = fourth_annex_family_list }
		}
		scope:fourth_family_head = {
			custom_tooltip = fourth_family_moves_to
		}
		hidden_effect = {
			every_character = {
				limit = { is_in_list = fourth_annex_family_list }
				remove_from_list = fourth_annex_family_list
				if = {
					limit = { has_character_modifier = foreign_citizen }
					remove_character_modifier = foreign_citizen
				}
				annexation_character_cleanup = yes #This cleans up all the variables so we don't track them down and kill them by mistake later.
			}
		}
		clear_saved_scope = fourth_family_head
		hidden_effect = {
			if = {
				limit = {
					any_character = {
						OR = {
							is_in_list = first_annex_family_list
							is_in_list = second_annex_family_list
							is_in_list = third_annex_family_list
						}
					}
				}
				set_variable = integration_event_check
				trigger_event = {
					id = annexation.4 
				}
			}
		}
		current_ruler = { add_popularity = -5 }
	}
	
	
	option = {
		name = "annexation.5.e"
		#Replace with loyalty drop among existing family heads?
		custom_tooltip = per_family_turned_away
		current_ruler = { add_popularity = crucifixion_efficiency_svalue }
		if = {
			limit = {
				any_character = {
					OR = {
						is_in_list = first_annex_family_list
						is_in_list = second_annex_family_list
						is_in_list = third_annex_family_list
						is_in_list = fourth_annex_family_list
					}
				}
			}
			hidden_effect = {
				every_character = {
					limit = {
						OR = {
							is_in_list = first_annex_family_list
							is_in_list = second_annex_family_list
							is_in_list = third_annex_family_list
							is_in_list = fourth_annex_family_list
						}
					}
					remove_all_positions = yes
					annexation_character_cleanup = yes #This cleans up all the variables so we don't track them down and kill them by mistake later.
					death = {
						death_reason = death_obscurity
					}
				}
			}
		}
		
		ai_chance = {
			factor = 90
		}
	}
}
