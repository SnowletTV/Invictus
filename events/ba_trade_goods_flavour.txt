namespace = trade_goods_flavour

# trade_goods_flavour.1 = { #tin - extra load of tin coming - importer (province owners of tin) could be adapted for metal
# 	type = country_event
# 	title = "trade_goods_flavour.1.t"
# 	desc = "trade_goods_flavour.1.desc"
# 	picture = road_construction
# 	left_portrait = current_ruler

# 	trigger = {
# 		has_country_modifier = has_bronze
# 		any_owned_province = {
# 			trade_goods = tin
# 		}
# 		NOT = {
# 			has_country_modifier = extra_tin_mil
# 		}
# 	}

# 	option = { #sell it
# 		name = trade_goods_flavour.1.a
# 		add_treasury = has_yearly_income_svalue
# 		random_country = {
# 			limit = {
# 				has_country_modifier = has_bronze
# 				NOT = { #importer
# 					has_country_modifier = extra_tin_mil
# 					any_owned_province = {
# 						trade_goods = tin
# 					}
# 				}
# 			}
# 			trigger_event = {
# 				id = trade_goods_flavour.2
# 			}
# 		}
# 	}

# 	option = { #use it ourselves
# 		name = trade_goods_flavour.1.b
# 		add_country_modifier = {
# 			name = extra_tin_mil
# 			duration = 3650 # 10 years
# 		}
# 	}
# }

# trade_goods_flavour.2 = { #tin - extra load of tin coming - if importer sold it
# 	type = country_event
# 	title = "trade_goods_flavour.2.t"
# 	desc = "trade_goods_flavour.2.desc"
# 	picture = quarry
# 	left_portrait = current_ruler

# 	trigger = {
# 		has_country_modifier = has_bronze
# 		NOT = {
# 			has_country_modifier = extra_tin_mil
# 		}
# 	}

# 	option = { #use it ourselves; can't continue selling it
# 		name = trade_goods_flavour.2.a
# 		add_country_modifier = {
# 			name = extra_tin_mil
# 			duration = 3650 # 10 years
# 		}
# 	}
# }

# trade_goods_flavour.3 = { # master smith appears
# 	type = country_event
# 	title = "trade_goods_flavour.3.t"
# 	desc = "trade_goods_flavour.3.desc"
# 	picture = celtic_chiefs
# 	left_portrait = current_ruler

# 	trigger = {
# 		has_country_modifier = has_bronze
# 		NOT = {
# 			has_variable = tin_smith_cooldown
# 		}
# 	}

# 	immediate = {
# 		set_variable = {
# 			name = tin_smith_cooldown
# 			days = 12775  # 35 years
# 		}
# 	}

# 	option = { #buy an artifact
# 		name = trade_goods_flavour.3.a
# 		trigger = {
# 			NOR = {
# 				current_ruler = {
# 					has_trait = cruel
# 				}
# 				exists = treasure:bronze_armour_artifact
# 			}
# 		}
# 		create_country_treasure = {
# 			key = "bronze_helmet_artifact"
# 			icon = "treasure_chest"
# 			modifier = {
# 				local_manpower_modifier = 0.1
# 			}
# 		}
# 		add_treasury = {
# 			value = rank_scaled_treasury_svalue
# 			multiply = 2
# 			round = floor
# 		}
# 	}

# 	option = { #bring him home
# 		name = trade_goods_flavour.3.b
# 		add_political_influence = -15
# 		custom_tooltip = tin_smith_joins_court_tt
# 		hidden_effect = {
# 			create_character = {
# 				female = no
# 				add_finesse = 8 #generals from mil trads get +8 on their Martial --> equivalent
# 				add_trait = obsessive
# 				add_gold = 300
# 				add_popularity = 60
# 			}
# 		}
# 	}

# 	option = { #ask for advice
# 		name = trade_goods_flavour.3.c
# 		add_country_modifier = {
# 			name = tin_smith_advice
# 			duration = 5475 #15 years
# 		}
# 	}
	
# 	option = { #rob artifact
# 		name = trade_goods_flavour.3.d
# 		trigger = {
# 			NOT = {
# 				exists = treasure:bronze_armour_artifact
# 			}
# 			current_ruler = {
# 				has_trait = cruel
# 			}
# 		}
# 		create_country_treasure = {
# 			key = "bronze_helmet_artifact"
# 			icon = "treasure_chest"
# 			modifier = {
# 				local_manpower_modifier = 0.1
# 			}
# 		}
# 	}
# } 

trade_goods_flavour.4 = { #find cypriot dwarf elephants and dwarf hippo bones found
	type = country_event #I originally thought, that the elephants only died out in the BA. turns out it was around 12000 BC; they'd get ivory
	title = "trade_goods_flavour.4.t"
	desc = "trade_goods_flavour.4.desc"
	picture = hellenic_temple
	left_portrait = current_ruler

	trigger = {
		NOT = {
			exists = treasure:cypriot_dwarf_elephant_bones #not that they'd recognise it...
		}
		has_global_variable = collecting_dwarf_bones
		any_owned_province = {
			is_in_area = cyprus_area
		}
	}

	option = { # collect the bones
		name = trade_goods_flavour.4.a
		set_global_variable = collecting_dwarf_bones
		trigger_event = {
			id = trade_goods_flavour.5
			days = { 120 160 }
		}
		add_treasury = -200
	}

	option = { #sell them
		name = trade_goods_flavour.4.b
		add_treasury = has_monthly_income
	}

	option = { #ignore them
		name = trade_goods_flavour.4.c
	}
}

trade_goods_flavour.5 = { # coherence? not quite...
	type = country_event 
	title = "trade_goods_flavour.5.t"
	desc = "trade_goods_flavour.5.desc"
	picture = hellenic_temple
	left_portrait = current_ruler

	option = {
		name = trade_goods_flavour.5.a
		create_country_treasure = {
			key = "cypriot_dwarf_elephant_bones"
			icon = "treasure_sarcophagus"
			modifier = {
				local_country_civilization_value = 3
			}
		}
	}

	option = { #what a waste of time...
		name = trade_goods_flavour.5.b
	}

	after = {
		remove_global_variable = collecting_dwarf_bones
	}
}

### Can be adapted to metal or gold or something

# trade_goods_flavour.8 = { # Tin - Smith offers to create some experimental weapons for some units
# 	type = country_event 
# 	title = "trade_goods_flavour.8.t"
# 	desc = "trade_goods_flavour.8.desc"
# 	picture = gladiators
# 	left_portrait = current_ruler

# 	trigger = {
# 		has_country_modifier = has_bronze
# 		NOT = {
# 			has_variable = tin_smith_cooldown
# 		}
# 	}

# 	immediate = {
# 		set_variable = {
# 			name = tin_smith_cooldown
# 			days = 12775 # 35 years
# 		}
# 	}

# 	option = { #try to upgrade the heart of the forces (axes and spears)
# 		name = trade_goods_flavour.8.a
# 		add_country_modifier = {
# 			name = tin_smith_inf 
# 			duration = 5475 #15 years
# 		}
# 		add_treasury = {
# 			value = rank_scaled_treasury_svalue
# 			max = -250
# 		}
# 	}

# 	option = { #improve the weapons of the skirmishers (skirmishers and archers)
# 		name = trade_goods_flavour.8.b
# 		add_country_modifier = {
# 			name = tin_smith_skirm
# 			duration = 5475 #15 years
# 		}
# 		add_treasury = {
# 			value = rank_scaled_treasury_svalue
# 			max = -250
# 		}
# 	}

# 	option = { #give the chariots an upgrade
# 		name = trade_goods_flavour.8.c
# 		add_country_modifier = {
# 			name = tin_smith_char
# 			duration = 5475 #15 years
# 		}
# 		add_treasury = {
# 			value = rank_scaled_treasury_svalue
# 			max = -250
# 		}
# 	}

# 	option = { #too expensive
# 		name = trade_goods_flavour.8.d
# 	}
# }

# trade_goods_flavour.9 = { # Tin - Bronze jewelry your wife ordered that you didn't know about...
# 	type = country_event 
# 	title = "trade_goods_flavour.9.t"
# 	desc = "trade_goods_flavour.9.desc"
# 	picture = ba_assyrian_king
# 	left_portrait = current_ruler
# 	right_portrait = consort

# 	trigger = {
# 		has_country_modifier = has_bronze
# 		NOR = {
# 			exists = treasure:bronze_jewelry
# 			has_variable = bronze_jewelry_cd
# 		}
# 		exists = consort
# 		consort = { 
# 			is_alive = yes 
# 			is_female = yes #just in case
# 		}
# 	}

# 	immediate = {
# 		add_treasury = {
# 			value = has_monthly_income
# 			multiply = -3
# 			max = -250
# 		}
# 		set_variable = {
# 			name = bronze_jewelry_cd
# 			days = 7300
# 		}
# 	}

# 	option = { #let her keep them
# 		name = trade_goods_flavour.9.a
# 		consort = {
# 			add_character_modifier = {
# 				name = lapis_jewels #loced neutrally
# 				duration = 3650 # 10 years
# 			}
# 			add_charisma = 1
# 		}
# 		if = {
# 			limit = {
# 				current_ruler = {
# 					NOT = {
# 						has_trait = loving
# 					}
# 				}
# 			}
# 			current_ruler = {
# 				add_trait = loving
# 			}
# 		}
# 	}

# 	option = { #gift them to a goddess
# 		name = trade_goods_flavour.9.b
# 		consort = {
# 			add_character_modifier = {
# 				name = lapis_jewels_denied #loced neutrally
# 				duration = 3650 # 10 years
# 			}
# 		}
# 		create_country_treasure = {
# 			key = "bronze_jewelry"
# 			icon = "treasure_chest"
# 			modifier = {
# 				local_nobles_desired_pop_ratio = 0.03
# 			}
# 		}
# 		if = {
# 			limit = {
# 				current_ruler = {
# 					NOT = {
# 						has_trait = devout
# 					}
# 				}
# 			}
# 			current_ruler = {
# 				add_trait = devout
# 			}
# 		}
# 		else_if = {
# 			limit = {
# 				current_ruler = {
# 					NOT = {
# 						has_trait = pious
# 					}
# 				}
# 			}
# 			current_ruler = {
# 				add_trait = pious
# 			}
# 		}
# 		else_if = {
# 			limit = {
# 				current_ruler = {
# 					NOT = {
# 						has_trait = zealous
# 					}
# 				}
# 			}
# 			current_ruler = {
# 				add_trait = zealous
# 			}
# 		}
# 	}

# 	option = { #sell it - even if it'll be a loss
# 		name = trade_goods_flavour.9.c
# 		add_treasury = has_monthly_income #one third you get back
# 		consort = {
# 			add_character_modifier = {
# 				name = lapis_jewels_denied #loced neutrally
# 				duration = 3650 # 10 years
# 			}
# 		}
# 		if = {
# 			limit = {
# 				current_ruler = {
# 					NOT = {
# 						has_trait = harsh
# 					}
# 				}
# 			}
# 			current_ruler = {
# 				add_trait = harsh
# 			}
# 		}
# 	}
# }

trade_goods_flavour.10 = { #Silphium - Find out the many uses Silphium had: aphrodisiac, contraceptive, medicine, spice and more. Associated with love and sexuality; Heart symbol comes from Silphium seed or fruit
	type = country_event 
	title = "trade_goods_flavour.10.t"
	desc = "trade_goods_flavour.10.desc"
	picture = farming
	left_portrait = current_ruler

	fire_only_once = yes

	trigger = {
		any_owned_province = {
			trade_goods = silphium
			count >= 3 #out of 8
		}
	}

	option = { #use it more ourselves
		name = trade_goods_flavour.10.a
		add_country_modifier = {
			name = silphium_used
			duration = 3650
		}
	}

	option = { #leave as is
		name = trade_goods_flavour.10.b
	}

	option = { #focus on exports
		name = trade_goods_flavour.10.c
		add_country_modifier = {
			name = silphium_sold
			duration = 3650
		}
	}
}

trade_goods_flavour.11 = { #Silphium - cooking
	type = country_event 
	title = "trade_goods_flavour.11.t"
	desc = "trade_goods_flavour.11.desc"
	picture = bakery
	left_portrait = current_ruler

	trigger = {
		silphium_in_country_trigger = yes
		NOT = {
			has_variable = silphium_flavour_cooldown
		}
	}

	immediate = {
		set_variable = {
			name = silphium_flavour_cooldown
			days = 7300 # 20 years
		}
	}

	option = { # roast a boar
		name = trade_goods_flavour.11.a
		current_ruler = {
			add_character_modifier = {
				name = silphium_roast
				duration = 3650 # 10 years
			}
		}
	}

	option = { # make a soup
		name = trade_goods_flavour.11.b
		current_ruler = {
			add_character_modifier = {
				name = silphium_soup
				duration = 3650 # 10 years
			}
		}
	}

	option = { # spice up the dessert
		name = trade_goods_flavour.11.c
		current_ruler = {
			add_character_modifier = {
				name = silphium_dessert
				duration = 3650 # 10 years
			}
		}
	}

	option = { # make a snack
		name = trade_goods_flavour.11.d
		current_ruler = {
			add_character_modifier = {
				name = silphium_snack
				duration = 3650 # 10 years
			}
		}
	}
}

trade_goods_flavour.12 = { # Silphium - Healing
	type = country_event 
	title = "trade_goods_flavour.12.t"
	desc = "trade_goods_flavour.12.desc"
	picture = diadochi_greek_royal_wedding
	left_portrait = current_ruler

	trigger = {
		silphium_in_country_trigger = yes
		OR = {
			current_ruler = {
				recoverable_ailments_trigger = yes
				NOT = {
					has_variable = seeking_treatment
				}
			}
			consort = {
				recoverable_ailments_trigger = yes
				NOT = {
					has_variable = seeking_treatment
				}
			}
		}
	}

	option = {
		name = trade_goods_flavour.12.a
		custom_tooltip = silphium_healing_tt
		if = {
			limit = {
				current_ruler = {
					recoverable_ailments_trigger = yes
					NOT = {
						has_variable = seeking_treatment
					}
				}
			}
			current_ruler = {
				recover_from_affliction_effect = yes
			}
		}
		if = {
			limit = {
				consort = {
					recoverable_ailments_trigger = yes
					NOT = {
						has_variable = seeking_treatment
					}
				}
			}
			consort = {
				recover_from_affliction_effect = yes
			}
		}
	}	
}

trade_goods_flavour.13 = { # Silphium - Silphium Farming
	type = country_event 
	title = "trade_goods_flavour.13.t"
	desc = "trade_goods_flavour.13.desc"
	picture = farming
	left_portrait = current_ruler

	goto_location = scope:silphium_farm

	trigger = {
		any_owned_province = {
			trade_goods = silphium
		}
		NOT = {
			has_variable = silphium_flavour_cooldown
		}
	}

	immediate = {
		set_variable = {
			name = silphium_flavour_cooldown
			days = 7300 # 20 years
		}
		random_owned_province = {
			limit = {
				trade_goods = silphium
				NOT = {
					has_province_modifier = silphium_farm_pmod
				}
			}
			save_scope_as = silphium_farm
		}
	}

	option = { #Farm Silphium More
		name = trade_goods_flavour.13.a
		scope:silphium_farm = {
			add_permanent_province_modifier = {
				name = silphium_farm_pmod
				duration = -1
			}
		}
	}

	option = { #Try to have it spread
		name = trade_goods_flavour.13.b
		trigger = {
			OR = {
				scope:silphium_farm = {
					any_neighbor_province = {
						owner = root
						NOT = {
							trade_goods = silphium
						}
						OR = {
							terrain = plains
							terrain = hills
						}
					}
				}
				any_owned_province = { #original silphium province disappeared
					is_original_silphium_province = yes
					NOT = {
						trade_goods = silphium
					}
				}
			}
			scope:silphium_farm.region = {
				any_region_province = {
					count <= 10 #at most 10 at any give time
					trade_goods = silphium
				}
			}
		}
		if = {
			limit = {
				any_owned_province = { #original silphium province disappeared
					is_original_silphium_province = yes
					NOT = {
						trade_goods = silphium
					}
				}
			}
			random = {
				chance = 75 #higher chance of Silphium reappearing
				random_owned_province = {
					limit = {
						is_original_silphium_province = yes
						NOT = {
							trade_goods = silphium
						}
					}
					set_trade_goods = silphium
				}
			}
		}
		else = {
			random = {
				chance = 30
				scope:silphium_farm = {
					random_neighbor_province = {
						limit = {
							NOT = {
								trade_goods = silphium
							}
							OR = {
								terrain = plains
								terrain = hills
							}
						}
						set_trade_goods = silphium
					}
				}
			}
		}
	}

	option = { #We should not overexploit it
		name = trade_goods_flavour.13.c
		scope:silphium_farm = {
			add_province_modifier = {
				name = silphium_farm_pmod
				duration = 3650 # 10 years
			}
		}
	}
}

### If reworked, look at region trigger etc

# trade_goods_flavour.14 = { # Silphium - Silphium Retreating (a little bit)
# 	type = country_event 
# 	title = "trade_goods_flavour.14.t"
# 	desc = "trade_goods_flavour.14.desc"
# 	picture = farming
# 	left_portrait = current_ruler

# 	goto_location = scope:silphium_farm

# 	trigger = {
# 		any_owned_province = {
# 			trade_goods = silphium
# 		}
# 		NOT = {
# 			has_variable = silphium_flavour_cooldown
# 		}
# 		region:libya_region = {
# 			any_region_province = {
# 				count <= 7 #So it's at least 6 at all times
# 				trade_goods = silphium
# 			}
# 		}
# 	}

# 	immediate = {
# 		set_variable = {
# 			name = silphium_flavour_cooldown
# 			days = 7300 # 20 years
# 		}
# 		if = { #prioritises added silphium growth from event 13
# 			limit = {
# 				any_owned_province = {
# 					trade_goods = silphium
# 				}
# 				is_original_silphium_province = no
# 			}
# 			random_owned_province = {
# 				limit = {
# 					trade_goods = silphium
# 					is_original_silphium_province = no
# 				}
# 				save_scope_as = silphium_farm
# 			}
# 		}
# 		else = {
# 			random_owned_province = {
# 				limit = {
# 					trade_goods = silphium
# 				}
# 				save_scope_as = silphium_farm
# 			}
# 		}
# 	}

# 	option = { #We should have preserved some more...
# 		name = trade_goods_flavour.14.a
# 		scope:silphium_farm = {
# 			set_trade_goods = cattle
# 			if = {
# 				limit = {
# 					has_province_modifier = silphium_farm_pmod
# 				}
# 				remove_province_modifier = silphium_farm_pmod
# 			}
# 		}
# 	}
# }

trade_goods_flavour.15 = { # Cedar - Get Naval Bonus from having enough cedars for a big, strong fleet
	type = country_event 
	title = "trade_goods_flavour.15.t"
	desc = "trade_goods_flavour.15.desc"
	picture = grand_ship
	left_portrait = current_ruler

	trigger = {
		war = yes
		NOT = {
			has_country_modifier = cedar_planks
		}
		any_owned_province = {
			trade_goods = cedar
			count >= 12
		}
	}

	option = {
		name = trade_goods_flavour.15.a
		add_country_modifier = {
			name = cedar_planks
			duration = 1875
		}
	}
}

trade_goods_flavour.16 = { # Cedar - lose Naval Bonus from not having enough cedars for a big, strong fleet
	type = country_event 
	title = "trade_goods_flavour.16.t"
	desc = "trade_goods_flavour.16.desc"
	picture = ship_in_storm
	left_portrait = current_ruler

	trigger = {
		always = no
		has_country_modifier = cedar_planks
		any_owned_province = {
			trade_goods = cedar
			count < 12
		}
	}

	option = {
		name = trade_goods_flavour.16.a
		remove_country_modifier = cedar_planks
	}
}

trade_goods_flavour.17 = { # Cedar - lose one territory cedar for a temporary naval bonus
	type = country_event 
	title = "trade_goods_flavour.17.t"
	desc = "trade_goods_flavour.17.desc"
	picture = war_council
	left_portrait = current_ruler

	trigger = {
		NOR = {
			has_country_modifier = cedar_used_up
			has_variable = cedar_flavour_cooldown
		}
		any_owned_province = {
			trade_goods = cedar
		}
	}

	immediate = {
		set_variable = {
			name = cedar_flavour_cooldown
			days = 7300 # 20 years
		}
	}

	option = {
		name = trade_goods_flavour.17.a
		trigger = {
			any_owned_province = {
				trade_goods = cedar
				NOR = { # too lazy to create a script that would remove the provinces without the first modifier or that would reapply it in case of regrowth
						# scripted trigger like for silphium isn't as easy bcs a) more provinces and b) dynamic for the 2nd modifier; don't want to see the prov mods gone
					has_province_modifier = cedars_of_lebanon
					has_province_modifier = bred_cedars_future
				} 
			}
		}
		add_country_modifier = {
			name = cedar_used_up
			duration = 5475 # 15 years
		}
		random_owned_province = {
			limit = {
				trade_goods = cedar
				NOR = { 
					has_province_modifier = cedars_of_lebanon
					has_province_modifier = bred_cedars_future
				}
			}
			set_trade_goods = wood
			set_variable = cedar_gone_variable #next event can restore forests; no growth of total amount of cedars
		}

		ai_chance = {
			factor = 0 
		}
	}

	option = { #exploit just a little bit 
		name = trade_goods_flavour.17.b
		add_country_modifier = {
			name = cedar_used_up
			duration = 1825 # 5 years
		}
		random_owned_province = {
			limit = {
				trade_goods = cedar
				#since not permanent removal, it's fine to not restrict
			}
			add_province_modifier = {
				name = exploited_cedar
				duration = 9125 # 25 years
			}
		}
	}

	option = { #do not touch more than we'd usually do
		name = trade_goods_flavour.17.c
	}
}

trade_goods_flavour.18 = { #Cedar - Regrowth
	type = country_event 
	title = "trade_goods_flavour.18.t"
	desc = "trade_goods_flavour.18.desc"
	picture = celtic_religious_festival
	left_portrait = current_ruler

	goto_location = scope:cedar_regrown

	trigger = {
		NOR = { #doesn't exploit anymore or other flavour
			has_country_modifier = cedar_used_up
			has_variable = cedar_flavour_cooldown
		}
		any_owned_province = { #exploited territory
			has_variable = cedar_gone_variable
		}
	}

	immediate = {
		set_variable = {
			name = cedar_flavour_cooldown
			days = 7300 # 20 years
		}
		random_owned_province = {
			limit = {
				has_variable = cedar_gone_variable
			}
			set_trade_goods = cedar
			remove_variable = cedar_gone_variable
			save_scope_as = cedar_regrown
		}
	}

	option = {
		name = trade_goods_flavour.18.a
	}
}

trade_goods_flavour.19 = { #Cedar - Shipyards profiting
	type = country_event 
	title = "trade_goods_flavour.19.t"
	desc = "trade_goods_flavour.19.desc"
	picture = grand_ship
	left_portrait = current_ruler

	goto_location = scope:main_shipyard_prov

	trigger = {
		NOT = { 
			has_variable = cedar_flavour_cooldown
		}
		num_of_ships >= 25
		any_owned_province = { 
			num_of_port_building >= 3
			#num_of_shipyards >= 1
			state = {
				trade_good_surplus = {
					target = cedar
					value >= 5
				}
			}
		}
		NOR = {
			any_owned_province = {
				has_province_modifier = quality_shipyard
			}
			any_owned_province = {
				has_province_modifier = quantity_shipyard
			}
		}
	}

	immediate = {
		set_variable = {
			name = cedar_flavour_cooldown
			days = 7300 # 20 years
		}
		random_owned_province = {
			limit = {
				num_of_port_building >= 3
				#num_of_shipyards >= 1
				state = {
					trade_good_surplus = {
						target = cedar
						value >= 5
					}
				}
			}
			save_scope_as = main_shipyard_prov
		}
	}

	option = { #quantity 
		name = trade_goods_flavour.19.a
		scope:main_shipyard_prov = {
			add_permanent_province_modifier = {
				name = quantity_shipyard
				duration = -1
			}
		}
	}

	option = { #quality
		name = trade_goods_flavour.19.b
		scope:main_shipyard_prov = {
			add_permanent_province_modifier = {
				name = quality_shipyard
				duration = -1
			}
		}
	}
}

trade_goods_flavour.20 = { # Wood - Get Naval Bonus from having enough wood for a cheaper fleet
	type = country_event 
	title = "trade_goods_flavour.20.t"
	desc = "trade_goods_flavour.20.desc"
	picture = interesting_histories_punic_town
	left_portrait = current_ruler

	trigger = {
		war = yes
		NOT = {
			has_country_modifier = wood_surplus_navy_cmod
		}
		any_owned_province = {
			trade_goods = wood
			count >= 35
		}
		num_of_ships >= 50
	}

	option = {
		name = trade_goods_flavour.20.a
		add_country_modifier = {
			name = wood_surplus_navy_cmod
			duration = 1875
		}
	}
}

trade_goods_flavour.21 = { # Wood - lose Naval Bonus from not having enough wood
	type = country_event 
	title = "trade_goods_flavour.21.t"
	desc = "trade_goods_flavour.21.desc"
	picture = ship_in_storm
	left_portrait = current_ruler

	trigger = {
		always = no
		has_country_modifier = wood_surplus_navy_cmod
		any_owned_province = {
			trade_goods = wood
			count < 35
		}
	}

	option = {
		name = trade_goods_flavour.21.a
		remove_country_modifier = wood_surplus_navy_cmod
	}
}

trade_goods_flavour.22 = { # Wood - Deforestation if there are too many people
	type = country_event 
	title = "trade_goods_flavour.22.t"
	desc = "trade_goods_flavour.22.desc"
	picture = army_desert
	left_portrait = current_ruler

	trigger = {
		any_owned_province = {
			trade_goods = wood
			has_city_status = yes
			total_population >= 50
		}
		NOT = {
			has_variable = wood_flavour_cooldown
		}
	}

	immediate = {
		set_variable = {
			name = wood_flavour_cooldown
			days = 3650
		}
		random_owned_province = {
			limit = {
				trade_goods = wood
				has_city_status = yes
				total_population >= 50
				NOT = {
					city_has_special_trade_goods_trigger = yes
				}
			}
			save_scope_as = wood_city_scope
		}
	}

	option = {
		name = trade_goods_flavour.22.a
		if = {
			limit = {
				scope:wood_city_scope = {
					OR = {
						terrain = farmland
						terrain = plains
					}
				}
			}
			scope:wood_city_scope = {
				set_trade_goods = cloth
				set_variable = had_grain #in case of city getting revoked
			}
		}
		else = {
			scope:wood_city_scope = {
				set_trade_goods = earthware
				set_variable = had_cattle #in case of city getting revoked (since wood is now rare)
			}
		}
	}
}


trade_goods_flavour.29 = { # Wine - Wine Culture (other wine events won't be the same as beer, don't worry xD)
	type = country_event 
	title = "trade_goods_flavour.29.t"
	desc = "trade_goods_flavour.29.desc"
	picture = slaves_working
	left_portrait = current_ruler

	goto_location = scope:wine_city_scope

	trigger = {
		is_tribal = no
		any_owned_province = {
			NOT = {
				has_province_modifier = wine_culture
			}
			trade_goods = wine
		}
		NOT = {
			has_variable = wine_flavour_cooldown
		}
	}

	immediate = {
		set_variable = {
			name = wine_flavour_cooldown
			days = 7300 # 20 years
		}
		random_owned_province = {
			limit = {
				NOT = {
					has_province_modifier = wine_culture
				}
				trade_goods = wine
			}
			save_scope_as = wine_city_scope
		}
	}

	option = { #Support it
		name = trade_goods_flavour.29.a
		add_treasury = -200
		scope:wine_city_scope = {
			add_permanent_province_modifier = {
				name = wine_culture
				duration = -1
			}
		}
	}

	option = { #It will die down
		name = trade_goods_flavour.29.b
		scope:wine_city_scope = {
			add_province_modifier = {
				name = wine_culture
				duration = 1825 # 5 years
			}
		}
	}
}

trade_goods_flavour.30 = { #Myrrhs and Incense - Censers invented
	type = country_event 
	title = "trade_goods_flavour.30.t"
	desc = "trade_goods_flavour.30.desc"
	picture = hellenic_temple
	left_portrait = current_ruler

	trigger = {
		NOR = {
			has_variable = has_incense_flavour_var
			exists = treasure:censer_treasure
		}
		# both so it doesn't hsppen too early into the game
		myrrh_in_country_trigger = yes
		incense_in_country_trigger = yes
		is_tribal = no
	}

	immediate = {
		set_variable = {
			name = has_incense_flavour_var
			days = 3650 #10 years
		}
	}

	option = { 
		name = trade_goods_flavour.30.a
		create_country_treasure = {
			key = "censer_treasure"
			icon = "treasure_chest"
			modifier = {
				local_happiness_for_same_religion_modifier = 0.05
			}
		}
	}

	after = {
		trigger_event = {
			id = trade_goods_flavour.31
			days = -1
		}
	}
}

trade_goods_flavour.31 = { # Incense and Myrrh - Censer Bearer
	type = country_event 
	title = "trade_goods_flavour.31.t"
	desc = "trade_goods_flavour.31.desc"
	picture = religious_rite
	left_portrait = current_ruler
	right_portrait = scope:censer_bearer_scope
	right_portrait = scope:family_censer_bearer_scope

	trigger = {
		always = no
		#treasure:censer_treasure = {
		#	treasure_owned_or_altared_trigger = { SHINY = treasure:censer_treasure }
		#}
		any_owned_province = {
			OR = {
				trade_goods = myrrh
				trade_goods = incense
			}
		}
		NOT = {
			any_character = {
				has_character_modifier = censer_bearer_char_mod
			}
		}
	}

	immediate = {
		random_character = {
			limit = {
				OR = {
					has_office = office_high_priest
					has_office = office_high_priest_monarchy
				}
			}
			save_scope_as = censer_bearer_scope
		}
		random_character = {
			limit = {
				family = root.current_ruler.family
				is_primary_heir = yes
				NOR = {
					has_office = office_high_priest
					has_office = office_high_priest_monarchy
				}
				OR = {
					can_hold_office = office_high_priest
					can_hold_office = office_high_priest_monarchy
				}
			}
			save_scope_as = family_censer_bearer_scope
		}
	}

	option = { # Highpriest as Option
		name = trade_goods_flavour.31.a
		scope:censer_bearer_scope = {
			add_character_modifier = {
				name = censer_bearer_char_mod
				duration = -1
			}
		}
	}

	option = { # Someone from the family
		name = trade_goods_flavour.31.b
		scope:family_censer_bearer_scope = {
			add_character_modifier = {
				name = censer_bearer_char_mod
				duration = -1
			}
			if = {
				limit = {
					scope:family_censer_bearer_scope.employer = { is_tribal = yes }
				}
				give_office = office_high_priest
			}
			else = {
				give_office = office_high_priest_monarchy
			}
		}
	}	
}
trade_goods_flavour.32 = { # Incense - Try to make a farm
	type = country_event 
	title = "trade_goods_flavour.32.t"
	desc = "trade_goods_flavour.32.desc"
	picture = farming
	left_portrait = current_ruler

	goto_location = scope:incense_spread_scope

	trigger = {
		NOT = {
			has_variable = has_incense_flavour_var
		}
		any_owned_province = {
			NOT = { 
				trade_goods = incense
				#trade_goods = lapis #just in case
				#trade_goods = tin #just in case
			}
			OR = {
				terrain = desert
				terrain = desert_hills
				#terrain = desert_valley
			}
			any_neighbor_province = {
				owner = root
				trade_goods = incense
			}
		}
	}

	immediate = {
		set_variable = {
			name = has_incense_flavour_var
			days = 3650 # 10 years
		}
		random_owned_province = {
			limit = {
				NOT = { 
					trade_goods = incense
					#trade_goods = lapis #just in case
					#trade_goods = tin 
			 	}
				OR = {
					terrain = desert
					terrain = desert_hills
					#terrain = desert_valley
				}
				any_neighbor_province = {
					owner = root
					trade_goods = incense
				}
			}
			save_scope_as = incense_spread_scope
		}
	}

	option = { #spread
		name = trade_goods_flavour.32.a
		scope:incense_spread_scope = {
			set_trade_goods = incense
		}
		add_treasury = {
			add = {
				value = 100
				multiply = owned_incense_province_svalue
			}
			max = -200
			min = -500
		}
	}

	option = { #not worth the investment
		name = trade_goods_flavour.32.b
		add_treasury = 200
	}
}

trade_goods_flavour.33 = { # Myrrh - Try to make a farm; same as event 32
	type = country_event 
	title = "trade_goods_flavour.33.t"
	desc = "trade_goods_flavour.33.desc"
	picture = farming
	left_portrait = current_ruler

	goto_location = scope:myrrh_spread_scope

	trigger = {
		NOT = {
			has_variable = has_incense_flavour_var
		}
		any_owned_province = {
			NOT = { 
				trade_goods = myrrh
				#trade_goods = lapis #just in case
				#trade_goods = tin #just in case
			}
			OR = {
				terrain = desert
				terrain = desert_hills
				#terrain = desert_valley
			}
			any_neighbor_province = {
				owner = root
				trade_goods = myrrh
				#NOT = { has_province_modifier = myrrh_import_hub }
			}
		}
	}

	immediate = {
		set_variable = {
			name = has_incense_flavour_var
			days = 3650 # 10 years
		}
		random_owned_province = {
			limit = {
				NOT = { 
					trade_goods = myrrh
					#trade_goods = lapis #just in case
					#trade_goods = tin #just in case
					#has_province_modifier = myrrh_import_hub
			 	}
				OR = {
					terrain = desert
					terrain = desert_hills
					#terrain = desert_valley
				}
				any_neighbor_province = {
					owner = root
					trade_goods = myrrh
					#NOT = { has_province_modifier = myrrh_import_hub }
				}
			}
			save_scope_as = myrrh_spread_scope
		}
	}

	option = { #spread
		name = trade_goods_flavour.33.a
		scope:myrrh_spread_scope = {
			set_trade_goods = myrrh
		}
		add_treasury = {
			add = {
				value = 100
				multiply = owned_myrrh_province_svalue
			}
			max = -200
			min = -500
		}
	}

	option = { #not worth the investment
		name = trade_goods_flavour.33.b
		add_treasury = 200
	}
}

trade_goods_flavour.39 = { #Ivory - Carving made by a carver
	type = country_event 
	title = "trade_goods_flavour.39.t"
	desc = "trade_goods_flavour.39.desc"
	picture = interesting_histories_levant_town
	left_portrait = current_ruler

	trigger = {
		NOT = {
			has_variable = ivory_cooldown
		}
		any_owned_province = {
			trade_goods = elephants
		}
		is_monarchy = yes
	}

	immediate = {
		set_variable = {
			name = ivory_cooldown
			days = 7300 # 20 years
		}
	}

	option = { # Sell it
		name = trade_goods_flavour.39.a
		add_treasury = {
			value = has_monthly_income
			multiply = 4
		}
	}


	option = { # Display it in the the palace
		name = trade_goods_flavour.39.b
		add_country_modifier = {
			name = magnificent_carving
			duration = 3650 # 10 years
		}
	}
	

	option = { # Gift it to a temple
		name = trade_goods_flavour.39.c
		trigger = {
			NOT = {
				exists = treasure:ivory_carving
			}
		}
		create_country_treasure = {
			key = "ivory_carving"
			icon = "treasure_chest"
			modifier = {
				local_pop_promotion_speed_modifier = 0.15
			}
		}
	}
}

trade_goods_flavour.40 = { #Ivory - Commission a Throne made of Ivory
	type = country_event 
	title = "trade_goods_flavour.40.t"
	desc = "trade_goods_flavour.40.desc"
	picture = war_chest
	left_portrait = current_ruler

	trigger = {
		NOT = {
			has_variable = ivory_cooldown
		}
		any_owned_province = {
			trade_goods = elephants
		}
		has_monthly_income >= 75
		NOT = {
			has_country_modifier = ivory_throne_cmod
			has_country_modifier = ivory_throne_small_cmod
			exists = treasure:ivory_throne
		}
	}

	immediate = { 
		set_variable = {
			name = ivory_cooldown
			days = 7300 # 20 years
		}
	}

	option = { # use myself
		name = trade_goods_flavour.40.a
		trigger = {
			NOT = {
				has_country_modifier = ivory_throne_cmod
			}
		}
		add_country_modifier = {
			name = ivory_throne_cmod
			duration = 3650
		}
		add_treasury = {
			value = has_monthly_income
			multiply = -1 # since you nerfed the fuck out of this
		}
	}
	

	option = { # temple
		name = trade_goods_flavour.40.b
		trigger = {
			NOT = {
				exists = treasure:ivory_throne
			}
		}
		create_country_treasure = {
			key = "ivory_throne"
			icon = "treasure_chest"
			modifier = {
				local_output_modifier = 0.05
			}
		}
		add_treasury = {
			value = has_monthly_income
			multiply = -1
		}
	}

	option = { # use myself
		name = trade_goods_flavour.40.c
		highlight = yes
		custom_tooltip = small_ivory_throne_tt
		trigger = {
			has_country_modifier = ivory_throne_cmod
		}
		add_country_modifier = {
			name = ivory_throne_small_cmod
			duration = 3650 # 10 years
		}
		add_treasury = {
			value = has_monthly_income
			multiply = -0.5
		}
	}

	option = { # we are too poor
		name = trade_goods_flavour.40.d
		remove_variable = ivory_cooldown
		set_variable = {
			name = ivory_cooldown
			days = 1825 # 5 years
		}
	}
}

trade_goods_flavour.41 = { # Ivory - Elephant Hunt; Elephant fitting for hunt sighted
	type = country_event 
	title = "trade_goods_flavour.41.t"
	desc = "trade_goods_flavour.41.desc"
	picture = interesting_histories_levant_town
	left_portrait = current_ruler

	trigger = {
		NOR = {
			has_variable = ivory_cooldown
			has_country_modifier = successful_hunt
		}
		any_owned_province = {
			trade_goods = elephants
		}
	}

	immediate = {
		set_variable = {
			name = ivory_cooldown
			days = 7300 # 20 years
		}
	}

	option = { # yes, start hunt
		name = trade_goods_flavour.41.a
		trigger_event = {
			id = trade_goods_flavour.42
			days = { 7 14 }
		}
		custom_tooltip = hunt_help_tt
		hunt_calc_effect = {
			ANIMAL_VALUE = -6
		}
	}

	option = { # do not hunt
		name = trade_goods_flavour.41.b
	}
}

trade_goods_flavour.42 = { # Ivory - Elephant Hunt
	type = country_event 
	title = "trade_goods_flavour.42.t"
	desc = {
		first_valid = {
			triggered_desc = { #disaster; you die
				trigger = { var:hunting_variable < 0 }
				desc = trade_goods_flavour.42.desc_1
			}
			triggered_desc = { # bad, you wounded
				trigger = { var:hunting_variable = 0 }
				desc = trade_goods_flavour.42.desc_2
			}
			triggered_desc = { # yay, success
				trigger = { var:hunting_variable > 0 }
				desc = trade_goods_flavour.42.desc_3
			}
		}
	}
	picture = interesting_histories_asia_mountains
	left_portrait = current_ruler

	immediate = {
		hidden_effect = {
			random_list = { # only gets used if you "win" the hunt
				1 = {
					set_variable = hunt_money_var
				}
				1 = {
					trigger = { ### ADJUST for new event
						NOT = {
							exists = treasure:elephant_hunt_reward
						}
					}
					set_variable = hunt_treasure_var
				}
				1 = {
					set_variable = hunt_mod_var
				}
			}
		}
	}

	option = {
		name = trade_goods_flavour.42.a
		trigger = {
			var:hunting_variable <= 0
		}
		if = {
			limit = {
				var:hunting_variable < 0
			}
			current_ruler = {
				death = {
					death_reason = death_hunting_accident
				}
			}
		}
		else_if = {
			limit = {
				var:hunting_variable = 0
			}
			current_ruler = {
				add_trait = wounded
			}
		}
	}

	option = {
		name = trade_goods_flavour.42.b
		trigger = {
			var:hunting_variable > 0
		}
		if = {
			limit = {
				has_variable = hunt_money_var
			}
			add_treasury = {
				value = has_monthly_income
				multiply = 3
			}
		}
		else_if = {
			limit = { ### ADJUST for new event
				has_variable = hunt_treasure_var
			}
			create_country_treasure = {
				key = "elephant_hunt_reward"
				icon = "treasure_chest"
				modifier = {
					local_population_capacity_modifier = 0.05
				}
			}
		}
		else_if = {
			limit = {
				has_variable = hunt_mod_var
			}
			add_country_modifier = {
				name = successful_hunt
				duration = 3650 # 10 years
			}
		}
	}

	after = {
		if = {
			limit = {
				has_variable = hunt_money_var
			}
			remove_variable = hunt_money_var
		}
		else_if = {
			limit = {
				has_variable = hunt_treasure_var
			}
			remove_variable = hunt_treasure_var
		}
		else_if = {
			limit = {
				has_variable = hunt_mod_var
			}
			remove_variable = hunt_mod_var
		}
	}
}

trade_goods_flavour.43 = { # Wild Game - Stag Hunt
	type = country_event 
	title = "trade_goods_flavour.43.t"
	desc = "trade_goods_flavour.43.desc"
	picture = interesting_histories_asia_mountains
	left_portrait = current_ruler

	trigger = {
		NOR = {
			has_variable = wild_game_cooldown
			has_country_modifier = successful_hunt
		}
		any_owned_province = {
			trade_goods = wild_game
		}
	}

	immediate = {
		set_variable = {
			name = wild_game_cooldown
			days = 7300 # 20 years
		}
	}

	option = { # yes, start hunt
		name = trade_goods_flavour.43.a
		trigger_event = {
			id = trade_goods_flavour.44
			days = { 7 14 }
		}
		custom_tooltip = hunt_help_tt
		hunt_calc_effect = {
			ANIMAL_VALUE = -2
		}
	}

	option = { # do not hunt
		name = trade_goods_flavour.43.b
	}
}

trade_goods_flavour.44 = { # Wild - Stag Hunt
	type = country_event 
	title = "trade_goods_flavour.44.t"
	desc = {
		first_valid = {
			triggered_desc = { #disaster; you die
				trigger = { var:hunting_variable < 0 }
				desc = trade_goods_flavour.44.desc_1
			}
			triggered_desc = { # bad, you wounded
				trigger = { var:hunting_variable = 0 }
				desc = trade_goods_flavour.44.desc_2
			}
			triggered_desc = { # yay, success
				trigger = { var:hunting_variable > 0 }
				desc = trade_goods_flavour.44.desc_3
			}
		}
	}
	picture = interesting_histories_asia_mountains
	left_portrait = current_ruler

	immediate = {
		random_list = { # only gets used if you "win" the hunt
			1 = {
				set_variable = hunt_money_var
			}
			1 = {
				trigger = { ### ADJUST for new event
					NOT = {
						exists = treasure:stag_hunt_reward
					}
				}
				set_variable = hunt_treasure_var
			}
			1 = {
				set_variable = hunt_mod_var
			}
		}
	}

	option = {
		name = trade_goods_flavour.44.a
		trigger = {
			var:hunting_variable <= 0
		}
		if = {
			limit = {
				var:hunting_variable < 0
			}
			current_ruler = {
				death = {
					death_reason = death_hunting_accident
				}
			}
		}
		else_if = {
			limit = {
				var:hunting_variable = 0
			}
			current_ruler = {
				add_trait = wounded
			}
		}
	}

	option = {
		name = trade_goods_flavour.44.b
		trigger = {
			var:hunting_variable > 0
		}
		if = {
			limit = {
				has_variable = hunt_money_var
			}
			add_treasury = {
				value = has_monthly_income
				multiply = 3
			}
		}
		else_if = {
			limit = { ### ADJUST for new event
				has_variable = hunt_treasure_var
			}
			create_country_treasure = {
				key = "stag_hunt_reward"
				icon = "treasure_chest"
				modifier = {
					local_freemen_output = 0.06
				}
			}
		}
		else_if = {
			limit = {
				has_variable = hunt_mod_var
			}
			add_country_modifier = {
				name = successful_hunt
				duration = 3650 # 10 years
			}
		}
	}

	after = {
		if = {
			limit = {
				has_variable = hunt_money_var
			}
			remove_variable = hunt_money_var
		}
		else_if = {
			limit = {
				has_variable = hunt_treasure_var
			}
			remove_variable = hunt_treasure_var
		}
		else_if = {
			limit = {
				has_variable = hunt_mod_var
			}
			remove_variable = hunt_mod_var
		}
	}
}

trade_goods_flavour.45 = { # Wild Game - Boar Hunt
	type = country_event 
	title = "trade_goods_flavour.45.t"
	desc = "trade_goods_flavour.45.desc"
	picture = interesting_histories_asia_mountains
	left_portrait = current_ruler

	trigger = {
		NOR = {
			has_variable = wild_game_cooldown
			has_country_modifier = successful_hunt
		}
		any_owned_province = {
			trade_goods = wild_game
		}
	}

	immediate = {
		set_variable = {
			name = wild_game_cooldown
			days = 7300 # 20 years
		}
	}

	option = { # yes, start hunt
		name = trade_goods_flavour.45.a
		trigger_event = {
			id = trade_goods_flavour.46
			days = { 7 14 }
		}
		custom_tooltip = hunt_help_tt
		hunt_calc_effect = {
			ANIMAL_VALUE = -3
		}
	}

	option = { # do not hunt
		name = trade_goods_flavour.45.b
	}
}

trade_goods_flavour.46 = { # Wild game - Boar Hunt
	type = country_event 
	title = "trade_goods_flavour.46.t"
	desc = {
		first_valid = {
			triggered_desc = { #disaster; you die
				trigger = { var:hunting_variable < 0 }
				desc = trade_goods_flavour.46.desc_1
			}
			triggered_desc = { # bad, you wounded
				trigger = { var:hunting_variable = 0 }
				desc = trade_goods_flavour.46.desc_2
			}
			triggered_desc = { # yay, success
				trigger = { var:hunting_variable > 0 }
				desc = trade_goods_flavour.46.desc_3
			}
		}
	}
	picture = interesting_histories_asia_mountains
	left_portrait = current_ruler

	immediate = {
		hidden_effect = {
			random_list = { # only gets used if you "win" the hunt
				1 = {
					set_variable = hunt_money_var
				}
				1 = {
					trigger = { ### ADJUST for new event
						NOT = {
							exists = treasure:boar_hunt_reward
						}
					}
					set_variable = hunt_treasure_var
				}
				1 = {
					set_variable = hunt_mod_var
				}
			}
		}
	}

	option = {
		name = trade_goods_flavour.46.a
		trigger = {
			var:hunting_variable <= 0
		}
		if = {
			limit = {
				var:hunting_variable < 0
			}
			current_ruler = {
				death = {
					death_reason = death_hunting_accident
				}
			}
		}
		else_if = {
			limit = {
				var:hunting_variable = 0
			}
			current_ruler = {
				add_trait = wounded
			}
		}
	}

	option = {
		name = trade_goods_flavour.46.b
		trigger = {
			var:hunting_variable > 0
		}
		if = {
			limit = {
				has_variable = hunt_money_var
			}
			add_treasury = {
				value = has_monthly_income
				multiply = 3
			}
		}
		else_if = {
			limit = { ### ADJUST for new event
				has_variable = hunt_treasure_var
			}
			create_country_treasure = {
				key = "boar_hunt_reward"
				icon = "treasure_chest"
				modifier = {
					local_freemen_desired_pop_ratio = 0.05
				}
			}
		}
		else_if = {
			limit = {
				has_variable = hunt_mod_var
			}
			add_country_modifier = {
				name = successful_hunt
				duration = 3650 # 10 years
			}
		}
	}

	after = {
		if = {
			limit = {
				has_variable = hunt_money_var
			}
			remove_variable = hunt_money_var
		}
		else_if = {
			limit = {
				has_variable = hunt_treasure_var
			}
			remove_variable = hunt_treasure_var
		}
		else_if = {
			limit = {
				has_variable = hunt_mod_var
			}
			remove_variable = hunt_mod_var
		}
	}
}

trade_goods_flavour.47 = { # Furs - Bear Hunt
	type = country_event 
	title = "trade_goods_flavour.47.t"
	desc = "trade_goods_flavour.47.desc"
	picture = interesting_histories_italic_hilltop
	left_portrait = current_ruler

	trigger = {
		NOR = {
			has_variable = fur_cooldown
			has_country_modifier = successful_hunt
		}
		any_owned_province = {
			trade_goods = fur
		}
	}

	immediate = {
		set_variable = {
			name = fur_cooldown
			days = 7300 # 20 years
		}
	}

	option = { # yes, start hunt
		name = trade_goods_flavour.47.a
		trigger_event = {
			id = trade_goods_flavour.48
			days = { 7 14 }
		}
		custom_tooltip = hunt_help_tt
		hunt_calc_effect = {
			ANIMAL_VALUE = -4
		}
	}

	option = { # do not hunt
		name = trade_goods_flavour.47.b
	}
}

trade_goods_flavour.48 = { # Fur - Bear Hunt
	type = country_event 
	title = "trade_goods_flavour.48.t"
	desc = {
		first_valid = {
			triggered_desc = { #disaster; you die
				trigger = { var:hunting_variable < 0 }
				desc = trade_goods_flavour.48.desc_1
			}
			triggered_desc = { # bad, you wounded
				trigger = { var:hunting_variable = 0 }
				desc = trade_goods_flavour.48.desc_2
			}
			triggered_desc = { # yay, success
				trigger = { var:hunting_variable > 0 }
				desc = trade_goods_flavour.48.desc_3
			}
		}
	}
	picture = interesting_histories_norse_tribes
	left_portrait = current_ruler

	immediate = {
		hidden_effect = {
			random_list = { # only gets used if you "win" the hunt
				1 = {
					set_variable = hunt_money_var
				}
				1 = {
					trigger = { ### ADJUST for new event
						NOT = {
							exists = treasure:bear_hunt_reward
						}
					}
					set_variable = hunt_treasure_var
				}
				1 = {
					set_variable = hunt_mod_var
				}
			}
		}
	}

	option = {
		name = trade_goods_flavour.48.a
		trigger = {
			var:hunting_variable <= 0
		}
		if = {
			limit = {
				var:hunting_variable < 0
			}
			current_ruler = {
				death = {
					death_reason = death_hunting_accident
				}
			}
		}
		else_if = {
			limit = {
				var:hunting_variable = 0
			}
			current_ruler = {
				add_trait = wounded
			}
		}
	}

	option = {
		name = trade_goods_flavour.48.b
		trigger = {
			var:hunting_variable > 0
		}
		if = {
			limit = {
				has_variable = hunt_money_var
			}
			add_treasury = {
				value = has_monthly_income
				multiply = 3
			}
		}
		else_if = {
			limit = { ### ADJUST for new event
				has_variable = hunt_treasure_var
			}
			create_country_treasure = {
				key = "bear_hunt_reward"
				icon = "treasure_chest"
				modifier = {
					local_manpower_modifier = 0.1
				}
			}
		}
		else_if = {
			limit = {
				has_variable = hunt_mod_var
			}
			add_country_modifier = {
				name = successful_hunt
				duration = 3650 # 10 years
			}
		}
	}

	after = {
		if = {
			limit = {
				has_variable = hunt_money_var
			}
			remove_variable = hunt_money_var
		}
		else_if = {
			limit = {
				has_variable = hunt_treasure_var
			}
			remove_variable = hunt_treasure_var
		}
		else_if = {
			limit = {
				has_variable = hunt_mod_var
			}
			remove_variable = hunt_mod_var
		}
	}
}

trade_goods_flavour.49 = { # Fur - Lion Hunt
	type = country_event 
	title = "trade_goods_flavour.49.t"
	desc = "trade_goods_flavour.49.desc"
	picture = interesting_histories_punic_city_purple
	left_portrait = current_ruler

	trigger = {
		NOR = {
			has_variable = fur_cooldown
			has_country_modifier = successful_hunt
		}
		any_owned_province = {
			trade_goods = fur
		}
	}

	immediate = {
		set_variable = {
			name = fur_cooldown
			days = 7300 # 20 years
		}
	}

	option = { # yes, start hunt
		name = trade_goods_flavour.49.a
		trigger_event = {
			id = trade_goods_flavour.50
			days = { 7 14 }
		}
		custom_tooltip = hunt_help_tt
		hunt_calc_effect = {
			ANIMAL_VALUE = -5
		}
	}

	option = { # do not hunt
		name = trade_goods_flavour.49.b
	}
}

trade_goods_flavour.50 = { # Fur - Lion Hunt
	type = country_event 
	title = "trade_goods_flavour.50.t"
	desc = {
		first_valid = {
			triggered_desc = { #disaster; you die
				trigger = { var:hunting_variable < 0 }
				desc = trade_goods_flavour.50.desc_1
			}
			triggered_desc = { # bad, you wounded
				trigger = { var:hunting_variable = 0 }
				desc = trade_goods_flavour.50.desc_2
			}
			triggered_desc = { # yay, success
				trigger = { var:hunting_variable > 0 }
				desc = trade_goods_flavour.50.desc_3
			}
		}
	}
	picture = hellenic_marketplace
	left_portrait = current_ruler

	immediate = {
		hidden_effect = {
			random_list = { # only gets used if you "win" the hunt
				1 = {
					set_variable = hunt_money_var
				}
				1 = {
					trigger = { ### ADJUST for new event
						NOT = {
							exists = treasure:lion_hunt_reward
						}
					}
					set_variable = hunt_treasure_var
				}
				1 = {
					set_variable = hunt_mod_var
				}
			}
		}
	}

	option = {
		name = trade_goods_flavour.50.a
		trigger = {
			var:hunting_variable <= 0
		}
		if = {
			limit = {
				var:hunting_variable < 0
			}
			current_ruler = {
				death = {
					death_reason = death_hunting_accident
				}
			}
		}
		else_if = {
			limit = {
				var:hunting_variable = 0
			}
			current_ruler = {
				add_trait = wounded
			}
		}
	}

	option = {
		name = trade_goods_flavour.50.b
		trigger = {
			var:hunting_variable > 0
		}
		if = {
			limit = {
				has_variable = hunt_money_var
			}
			add_treasury = {
				value = has_monthly_income
				multiply = 3
			}
		}
		else_if = {
			limit = { ### ADJUST for new event
				has_variable = hunt_treasure_var
			}
			create_country_treasure = {
				key = "lion_hunt_reward"
				icon = "treasure_chest"
				modifier = {
					local_freemen_desired_pop_ratio = 0.05
				}
			}
		}
		else_if = {
			limit = {
				has_variable = hunt_mod_var
			}
			add_country_modifier = {
				name = successful_hunt
				duration = 3650 # 10 years
			}
		}
	}

	after = {
		if = {
			limit = {
				has_variable = hunt_money_var
			}
			remove_variable = hunt_money_var
		}
		else_if = {
			limit = {
				has_variable = hunt_treasure_var
			}
			remove_variable = hunt_treasure_var
		}
		else_if = {
			limit = {
				has_variable = hunt_mod_var
			}
			remove_variable = hunt_mod_var
		}
	}
}

trade_goods_flavour.51 = { #Horses - Breeder
	type = country_event 
	title = "trade_goods_flavour.51.t"
	desc = "trade_goods_flavour.51.desc"
	picture =  steppe_cavalry_honor
	left_portrait = current_ruler

	trigger = {
		any_owned_province = {
			trade_goods = horses
			NOT = {
				has_province_modifier = horses_escaped
			}
		}
		NOT = {
			has_variable = horses_flavour_cooldown
		}
	}

	immediate = {
		set_variable = {
			name = horses_flavour_cooldown
			days = 7300 # 20 years
		}
	}

	option = { # Horses for War Chariots
		name = trade_goods_flavour.51.a
		add_country_modifier = {
			name = war_horse_breed
			duration = 5475 # 15 years
		}
	}

	option = { # Horses for Farming
		name = trade_goods_flavour.51.b
		add_country_modifier = {
			name = farm_horse_breed
			duration = 5475 # 15 years
		}
	}

	option = { # Have the breeder join the court
		name = trade_goods_flavour.51.c
		custom_tooltip = master_breeder_joins_court_tt
		hidden_effect = {
			create_character = {
				female = no
				add_finesse = 5
				add_trait = intelligent
			}
		}
	}
}

trade_goods_flavour.52 = { # Wood - Sacred Groves
	type = country_event 
	title = "trade_goods_flavour.52.t"
	desc = "trade_goods_flavour.52.desc"
	picture = great_work_animals
	left_portrait = current_ruler

	trigger = {
		any_owned_province = {
			is_holy_site = yes
			trade_goods = wood
		}
		NOT = {
			has_variable = wood_flavour_cooldown
		}
	}

	immediate = {
		set_variable = {
			name = wood_flavour_cooldown
			days = 7300
		}
		random_owned_province = {
			limit = {
				is_holy_site = yes
				trade_goods = wood
			}
			save_scope_as = grove_scope
		}
	}

	option = { # Keep the Grove
		name = trade_goods_flavour.52.a
		add_country_modifier = {
			name = grove_preserved
			duration = 7300 # 20 years
		}
	}

	option = { # We need the trees for building
		name = trade_goods_flavour.52.b
		add_country_modifier = {
			name = grove_desecrated
			duration = 7300 # 20 years
		}
		scope:grove_scope = {
			remove_province_deity = yes
		}
		add_political_influence = 25
	}
}

trade_goods_flavour.53 = { #Horses - Horses Escape
	type = country_event 
	title = "trade_goods_flavour.53.t"
	desc = "trade_goods_flavour.53.desc"
	picture = steppe_cavalry
	left_portrait = current_ruler

	goto_location = scope:horse_farm_scope

	trigger = {
		NOT = {
			has_variable = horses_flavour_cooldown
		}
		any_owned_province = {
			trade_goods = horses
			NOT = {
				has_province_modifier = horses_escaped
			}
		}
		has_monthly_balance >= 8
	}

	immediate = {
		set_variable = {
			name = horses_flavour_cooldown
			days = 7300 # 20 years
		}
		random_owned_province = {
			limit = {
				trade_goods = horses
				num_goods_produced >= 2
				NOT = {
					has_province_modifier = horses_escaped
				}
			}
			save_scope_as = horse_farm_scope
			add_province_modifier = {
				name = horses_escaped
				duration = 3650 # 10 years
			}
		}
	}

	option = { # Try to find them again
		name = trade_goods_flavour.53.a
		add_treasury = {
			value = has_monthly_income
			multiply = -3
			min = -300 # min = most negative number
			max = -100
		}
		custom_tooltip = horses_capture_again_tt
	}

	option = { # Lost is lost
		name = trade_goods_flavour.53.b
		custom_tooltip = horses_escaped_tt
		hidden_effect = {
			scope:horse_farm_scope = {
				add_province_modifier = {
					name = horses_escaped
					mode = add
					duration = 3650 # 10 years
				}
			}
		}
	}
}

trade_goods_flavour.54 = { # "Fur" - Nemean Lion Sighted
	type = country_event 
	title = "trade_goods_flavour.54.t"
	desc = "trade_goods_flavour.54.desc"
	picture = interesting_histories_asia_mountains
	left_portrait = current_ruler

	goto_location = p:210

	trigger = {
		owns = 440 #Nemea (Argos)
		p:440 = {
			NOT = {
				has_province_modifier = nemean_lion_hunted
			}
		}
		NOT = {
			exists = treasure:nemean_lion_pelt
		}
	}

	immediate = {
		p:440 = {
			add_province_modifier = {
				name = nemean_lion_hunted
				duration = 1825 # 5 years
			}
		}
	}

	option = { # Hunt it
		name = trade_goods_flavour.54.a
		custom_tooltip = nemean_lion_hunt_tt
		hidden_effect = {
			random_list = {
				1 = {
					trigger_event = { # found
						id = trade_goods_flavour.55
						days = 7
					}
				}
				99 = {
					trigger_event = { # hunt without success
						id = trade_goods_flavour.56
						days = 7
					}
				}
			}
		}	
	}

	option = { # It is too dangerous
		name = trade_goods_flavour.54.b
	}
}

trade_goods_flavour.55 = { #found the nemean lion 
	type = country_event 
	title = "trade_goods_flavour.55.t"
	desc = "trade_goods_flavour.55.desc"
	picture = interesting_histories_asia_mountains
	left_portrait = current_ruler

	goto_location = p:440

	immediate = {
		hunt_calc_effect = {
			ANIMAL_VALUE = -10
		}
	}

	option = {
		name = trade_goods_flavour.55.a
		create_country_treasure = {
			key = "nemean_lion_pelt"
			icon = "treasure_chest"
			modifier = {
				local_defensive = 0.5
				local_combat_width_modifier = -5
			}
		}
		if = {
			limit = {
				var:hunting_variable < 0
			}
			current_ruler = {
				death = {
					death_reason = death_hunting_accident
				}
			}
		}
		else_if = {
			limit = {
				var:hunting_variable = 0
			}
			current_ruler = {
				add_trait = wounded
			}
		}
		else_if = {
			limit = {
				var:hunting_variable > 0
			}
			current_ruler = {
				add_trait = brave
			}
		}
	}
}

trade_goods_flavour.56 = { #didn't find the lion
	type = country_event 
	title = "trade_goods_flavour.56.t"
	desc = "trade_goods_flavour.56.desc"
	picture = interesting_histories_asia_mountains
	left_portrait = current_ruler

	goto_location = p:440

	option = {
		name = trade_goods_flavour.56.a
	}
}

trade_goods_flavour.57 = { # "Fur" - Erymanthian Boar Sighted
	type = country_event 
	title = "trade_goods_flavour.57.t"
	desc = "trade_goods_flavour.57.desc"
	picture = interesting_histories_asia_mountains
	left_portrait = current_ruler

	trigger = {
		any_owned_province = {
			is_in_area = achaea_area
		}
		NOT = {
			exists = treasure:erymanthian_boar_tusk
		}
	}

	immediate = {
		random_owned_province = {
			limit = {
				is_in_area = achaea_area
			}
			add_province_modifier = {
				name = erymanthian_boar_hunted
				duration = 1825 # 5 years
			}
		}
	}

	option = { # Hunt it
		name = trade_goods_flavour.57.a
		custom_tooltip = nemean_lion_hunt_tt
		hidden_effect = {
			random_list = {
				1 = {
					trigger_event = { # found
						id = trade_goods_flavour.58
						days = 7
					}
				}
				99 = {
					trigger_event = { # hunt without success
						id = trade_goods_flavour.58
						days = 7
					}
				}
			}
		}	
	}

	option = { # It is too dangerous
		name = trade_goods_flavour.57.b
	}
}

trade_goods_flavour.58 = { #found the erymanthian boar
	type = country_event 
	title = "trade_goods_flavour.58.t"
	desc = "trade_goods_flavour.58.desc"
	picture = interesting_histories_asia_mountains
	left_portrait = current_ruler

	immediate = {
		hunt_calc_effect = {
			ANIMAL_VALUE = -9
		}
	}

	option = {
		name = trade_goods_flavour.58.a
		create_country_treasure = {
			key = "erymanthian_boar_tusk"
			icon = "treasure_chest"
			modifier = {
				max_attrition = 0.05
				local_hostile_attrition = 2
			}
		}
		if = {
			limit = {
				var:hunting_variable < 0
			}
			current_ruler = {
				death = {
					death_reason = death_hunting_accident
				}
			}
		}
		else_if = {
			limit = {
				var:hunting_variable = 0
			}
			current_ruler = {
				add_trait = wounded
			}
		}
		else_if = {
			limit = {
				var:hunting_variable > 0
			}
			current_ruler = {
				add_trait = brave
			}
		}
	}
}

trade_goods_flavour.59 = { #didn't find the boar
	type = country_event 
	title = "trade_goods_flavour.59.t"
	desc = "trade_goods_flavour.59.desc"
	picture = interesting_histories_asia_mountains
	left_portrait = current_ruler

	option = {
		name = trade_goods_flavour.59.a
	}
}

trade_goods_flavour.60 = { # Fruits - Pops are eating healthy (same event will exist for veggies)
	type = country_event 
	title = "trade_goods_flavour.60.t"
	desc = "trade_goods_flavour.60.desc"
	picture = farming
	left_portrait = current_ruler

	goto_location = scope:fruits_scope

	trigger = {
		NOT = {
			has_variable = pop_health_var
		}
		any_owned_province = {
			trade_goods = fruits
		}
	}

	immediate = {
		set_variable = {
			name = pop_health_var
			days = 3650 # 10 years
		}
		random_owned_province = {
			limit = {
				trade_goods = fruits
			}
			save_scope_as = fruits_scope
		}
	}

	option = {
		name = trade_goods_flavour.60.a
		scope:fruits_scope = {
			add_province_modifier = {
				name = healthy_pops_pmod
				duration = 3650 # 10 years
			}
		}
	}
}

trade_goods_flavour.61 = { # Vegetables, Grain - Pops are eating healthy (same event will exist for fruits)
	type = country_event 
	title = "trade_goods_flavour.61.t"
	desc = "trade_goods_flavour.61.desc"
	picture = farming
	left_portrait = current_ruler

	goto_location = scope:fruits_scope

	trigger = {
		NOT = {
			has_variable = pop_health_var
		}
		any_owned_province = {
			OR = {
				trade_goods = vegetables
				trade_goods = grain
			}
		}
	}

	immediate = {
		set_variable = {
			name = pop_health_var
			days = 3650 # 10 years
		}
		random_owned_province = {
			limit = {
				OR = {
					trade_goods = vegetables
					trade_goods = grain
				}
			}
			save_scope_as = fruits_scope
		}
	}

	option = {
		name = trade_goods_flavour.61.a
		scope:fruits_scope = {
			add_province_modifier = {
				name = healthy_pops_pmod
				duration = 3650 # 10 years
			}
		}
	}
}

### Could be adapted into local flavour, for Iraq f.ex.

# trade_goods_flavour.62 = { # Bitumen Surplus
# 	type = country_event 
# 	title = "trade_goods_flavour.62.t"
# 	desc = "trade_goods_flavour.62.desc"
# 	picture = quarry
# 	left_portrait = current_ruler

# 	trigger = {
# 		bitumen_in_country_trigger = yes
# 		NOT = {
# 			has_variable = bitumen_flavour_cooldown
# 		}
# 	}

# 	immediate = {
# 		set_variable = {
# 			name = bitumen_flavour_cooldown
# 			days = 7300 # 20 years
# 		}
# 	}

# 	option = { # ship buff
# 		name = trade_goods_flavour.62.a
# 		add_country_modifier = {
# 			name = bitumen_temp_ship 
# 			duration = 5375 # 15 years
# 		}
# 	}

# 	option = { #build buff
# 		name = trade_goods_flavour.62.b
# 		add_country_modifier = {
# 			name = bitumen_temp_build
# 			duration = 5375 # 15 years
# 		}
# 	}

# 	option = { #pop buff
# 		name = trade_goods_flavour.62.c
# 		add_country_modifier = {
# 			name = bitumen_temp_tools
# 			duration = 5375 # 15 years
# 		}
# 	}

# 	option = { # trade it away
# 		name = trade_goods_flavour.62.d
# 		add_country_modifier = {
# 			name = bitumen_trade_boom
# 			duration = 5375 # 15 years
# 		}
# 	}
# }

# trade_goods_flavour.63 = { # Bitumen - Found bones in tar pit; Dinosaur, but they think it's gods
# 	type = country_event 
# 	title = "trade_goods_flavour.63.t"
# 	desc = "trade_goods_flavour.63.desc"
# 	picture = road_construction
# 	left_portrait = current_ruler

# 	trigger = {
# 		bitumen_in_country_trigger = yes
# 		NOT = {
# 			has_variable = bitumen_flavour_cooldown
# 		}
# 		NOT = {
# 			exists = treasure:tar_pit_bones_1
# 			exists = treasure:tar_pit_bones_2
# 			exists = treasure:tar_pit_bones_3
# 			exists = treasure:tar_pit_bones_4
# 		}
# 	}

# 	immediate = {
# 		set_variable = {
# 			name = bitumen_flavour_cooldown
# 			days = 7300 # 20 years
# 		}
# 		random_list = {
# 			5 = {
# 				set_variable = tre_1
# 			}
# 			5 = {
# 				trigger = {
# 					religion = mesopotamian_religion
# 				}
# 				set_variable = tre_2
# 			}
# 			5 = {
# 				set_variable = tre_3
# 			}
# 			5 = {
# 				trigger = {
# 					religion = canaanite_religion
# 				}
# 				set_variable = tre_4
# 			}
# 		}
# 	}

# 	option = { # excavate more
# 		name = trade_goods_flavour.63.a
# 		trigger = {
# 			has_variable = tre_1
# 			NOT = {
# 				exists = treasure:tar_pit_bones_1
# 			}
# 		}
# 		add_treasury = -250
# 		create_country_treasure = {
# 			key = "tar_pit_bones_1"
# 			icon = "treasure_sarcophagus"
# 			modifier = {
# 				local_pop_assimilation_speed_modifier = 0.05
# 			}
# 		}
# 	}

# 	option = { # excavate more
# 		name = trade_goods_flavour.63.b
# 		trigger = {
# 			has_variable = tre_2
# 			religion = mesopotamian_religion
# 			NOT = {
# 				exists = treasure:tar_pit_bones_2
# 			}
# 		}
# 		add_treasury = -250
# 		create_country_treasure = {
# 			key = "tar_pit_bones_2"
# 			icon = "treasure_chest"
# 			modifier = {
# 				local_unrest = -1
# 			}
# 		}
# 	}

# 	option = { # excavate more
# 		name = trade_goods_flavour.63.c
# 		trigger = {
# 			has_variable = tre_3
# 			NOT = {
# 				exists = treasure:tar_pit_bones_3
# 			}
# 		}
# 		add_treasury = -250
# 		create_country_treasure = {
# 			key = "tar_pit_bones_3"
# 			icon = "treasure_sarcophagus"
# 			modifier = {
# 				local_population_capacity_modifier = 0.05
# 			}
# 		}
# 	}

# 	option = { # excavate more
# 		name = trade_goods_flavour.63.d
# 		trigger = {
# 			has_variable = tre_4
# 			religion = canaanite_religion
# 			NOT = {
# 				exists = treasure:tar_pit_bones_4
# 			}
# 		}
# 		add_treasury = -250
# 		create_country_treasure = {
# 			key = "tar_pit_bones_4"
# 			icon = "treasure_chest"
# 			modifier = {
# 				local_unrest = -1
# 			}
# 		}
# 	}

# 	option = { # let the dead have their peace
# 		name = trade_goods_flavour.63.e
# 		add_country_modifier = {
# 			name = tar_pit_rest_in_pieces
# 			duration = 3650 # 10 years
# 		}
# 	}

# 	after = {
# 		if = {
# 			limit = {
# 				has_variable = tre_1
# 			}
# 			remove_variable = tre_1
# 		}
# 		else_if = {
# 			limit = {
# 				has_variable = tre_2
# 			}
# 			remove_variable = tre_2
# 		}
# 		else_if = {
# 			limit = {
# 				has_variable = tre_2
# 			}
# 			remove_variable = tre_2
# 		}
# 		else_if = {
# 			limit = {
# 				has_variable = tre_4
# 			}
# 			remove_variable = tre_4
# 		}
# 	}
# }

trade_goods_flavour.64 = { # Fruits - Pomegranate Harvest spoiled
	type = country_event 
	title = "trade_goods_flavour.64.t"
	desc = "trade_goods_flavour.64.desc"
	picture = slaves_working
	left_portrait = current_ruler

	trigger = {
		any_owned_province = {
			trade_goods = fruits
		}
		NOT = {
			has_variable = pop_health_var
		}
	}

	immediate = {
		set_variable = {
			name = pop_health_var
			days = 3650 # 10 years
		}
		add_country_modifier = {
			name = pomegranates_spoiled
			duration = 1825 # 5 years
		}
	}

	option = { # try to find replacements from abroad
		name = trade_goods_flavour.64.a
		add_treasury = rank_scaled_treasury_svalue
		remove_country_modifier = pomegranates_spoiled
	}

	option = { # forgo the consumption
		name = trade_goods_flavour.64.b
	}
}

trade_goods_flavour.65 = { # Fruits - Pomegranate Harvest Surplus
	type = country_event 
	title = "trade_goods_flavour.65.t"
	desc = "trade_goods_flavour.65.desc"
	picture = farming
	left_portrait = current_ruler

	trigger = {
		any_owned_province = {
			trade_goods = fruits
		}
		NOT = {
			has_variable = pop_health_var
		}
	}

	immediate = {
		set_variable = {
			name = pop_health_var
			days = 3650 # 10 years
		}
	}

	option = { # try to find replacements from abroad
		name = trade_goods_flavour.65.a
		add_country_modifier = {
			name = pomegranates_surplus
			duration = 1825 # 5 years
		}
	}

	option = { # sell them
		name = trade_goods_flavour.65.b
		add_treasury = {
			value = has_monthly_income
			multiply = 3
		}
	}
}

trade_goods_flavour.66 = { # Vegetables - Onions Surplus
	type = country_event 
	title = "trade_goods_flavour.66.t"
	desc = "trade_goods_flavour.66.desc"
	picture = farming
	left_portrait = current_ruler

	trigger = {
		NOT = {
			has_variable = pop_health_var
		}
		any_owned_province = {
			trade_goods = vegetables
		}
	}

	immediate = {
		set_variable = {
			name = pop_health_var
			days = 3650 # 10 years
		}
	}

	option = { # 
		name = trade_goods_flavour.66.a
		add_country_modifier = {
			name = onions_surplus
			duration = 1825 # 5 years
		}
	}

	option = { #
		name = trade_goods_flavour.66.b
		add_treasury = {
			value = has_monthly_income
			multiply = 3
		}
	}
}

trade_goods_flavour.67 = { # Vegetables - Onion harvest too small
	type = country_event 
	title = "trade_goods_flavour.67.t"
	desc = "trade_goods_flavour.67.desc"
	picture = farming
	left_portrait = current_ruler

	trigger = {
		any_owned_province = {
			trade_goods = vegetables
		}
		NOT = {
			has_variable = pop_health_var
		}
	}

	immediate = {
		set_variable = {
			name = pop_health_var
			days = 3650 # 10 years
		}
		add_country_modifier = {
			name = onions_lack
			duration = 1825 # 5 years
		}
	}

	option = { # try to find replacements from abroad
		name = trade_goods_flavour.67.a
		add_treasury = rank_scaled_treasury_svalue
		remove_country_modifier = onions_lack
	}

	option = { # forgo the consumption
		name = trade_goods_flavour.67.b
	}
}

trade_goods_flavour.68 = { #Cattle - Escape
	type = country_event 
	title = "trade_goods_flavour.68.t"
	desc = "trade_goods_flavour.68.desc"
	picture = slaves_working
	left_portrait = current_ruler

	goto_location = scope:cattle_farm_scope

	trigger = {
		any_owned_province = {
			trade_goods = cattle
			NOT = {
				has_province_modifier = cattle_escaped
			}
		}
		NOT = {
			has_variable = cattle_flavour_cooldown
		}
	}

	immediate = {
		set_variable = {
			name = cattle_flavour_cooldown
			days = 7300 # 20 years
		}
		random_owned_province = {
			limit = {
				trade_goods = cattle
				NOT = {
					has_province_modifier = cattle_escaped
				}
			}
			save_scope_as = cattle_farm_scope
			add_province_modifier = {
				name = cattle_escaped
				duration = 3650 # 10 years
			}
		}
	}

	option = { # Try to find them again
		name = trade_goods_flavour.68.a
		add_treasury = -300
		custom_tooltip = cattle_capture_again_tt
	}

	option = { # Lost is lost
		name = trade_goods_flavour.68.b
		custom_tooltip = cattle_escaped_tt
		hidden_effect = {
			scope:cattle_farm_scope = {
				add_province_modifier = {
					name = cattle_escaped
					mode = add
					duration = 3650 # 10 years
				}
			}
		}
	}
}

trade_goods_flavour.73 = { # Dye - Shipwreck
	type = country_event 
	title = "trade_goods_flavour.73.t"
	desc = "trade_goods_flavour.73.desc"
	picture = ship_in_storm
	left_portrait = current_ruler

	goto_location = scope:dye_shipwreck

	trigger = {
		dye_in_country_port_trigger = yes
		NOT = {
			has_variable = dye_flav_cooldown
		}
	}

	immediate = {
		set_variable = {
			name = dye_flav_cooldown
			days = 7300 # 20 years
		}
		random_owned_province = {
			limit = {
				num_of_port_building >= 1
				trade_goods = dye
			}
			save_scope_as = dye_shipwreck
		}
	}

	option = {
		name = trade_goods_flavour.73.a
		scope:dye_shipwreck = {
			add_province_modifier = {
				name = dye_shipwreck_pmod
				duration = 1825 # 5 years
			}
		}
		add_treasury = {
			value = has_monthly_income
			multiply = -2
		}
	}
}

trade_goods_flavour.74 = { # Dye - Trade Going well
	type = country_event 
	title = "trade_goods_flavour.74.t"
	desc = "trade_goods_flavour.74.desc"
	picture = hellenic_marketplace
	left_portrait = current_ruler

	goto_location = scope:dye_shipwreck

	trigger = {
		any_owned_province = {
			trade_goods = dye
			count >= 10 
		}
		NOT = {
			has_variable = dye_flav_cooldown
		}
	}

	immediate = {
		set_variable = {
			name = dye_flav_cooldown
			days = 7300 # 20 years
		}
	}

	option = {
		name = trade_goods_flavour.74.a
		add_country_modifier = {
			name = dye_trade_well
			duration = 7300 # 20 years
		}
		add_treasury = 400
	}
}

trade_goods_flavour.75 = { # Dye - Dyeing accident
	type = country_event 
	title = "trade_goods_flavour.75.t"
	desc = "trade_goods_flavour.75.desc"
	picture = ship_in_storm
	left_portrait = current_ruler

	goto_location = scope:dye_accident_scope

	trigger = {
		any_owned_province = {
			trade_goods = dye
		}
		NOT = {
			has_variable = dye_flav_cooldown
		}
	}

	immediate = {
		set_variable = {
			name = dye_flav_cooldown
			days = 7300 # 20 years
		}
		random_owned_province = {
			limit = {
				trade_goods = dye
			}
			save_scope_as = dye_accident_scope
		}
	}

	option = {
		name = trade_goods_flavour.75.a
		scope:dye_accident_scope = {
			add_province_modifier = {
				name = dye_accident_pmod
				duration = 1825
			}
		}
	}

	option = {
		name = trade_goods_flavour.75.b
		add_treasury = {
			value = has_monthly_income
			multiply = -1.5
		}
	}
}

trade_goods_flavour.76 = { # Spices - Growing Abroad
	type = country_event 
	title = "trade_goods_flavour.76.t"
	desc = "trade_goods_flavour.76.desc"
	picture = farming
	left_portrait = current_ruler

	goto_location = scope:spice_target

	trigger = {
		any_owned_province = {
			trade_goods = spices
		}
		NOT = {
			has_variable = spice_flav_cooldown
		}
	}

	immediate = {
		set_variable = {
			name = spice_flav_cooldown
			days = 7300 # 20 years
		}
		random_owned_province = {
			limit = {
				NOR = { 
					trade_goods = spices 
					trade_goods = lapis 
					#trade_goods = tin
				}
			}
			save_scope_as = spice_target
		}
	}

	option = {
		name = trade_goods_flavour.76.a
		add_treasury = -250
		trigger_event = {
			id = trade_goods_flavour.77
			days = { 15 30 }
		}
	}

	option = {
		name = trade_goods_flavour.76.b
	}
}

trade_goods_flavour.77 = {
	type = country_event 
	title = "trade_goods_flavour.77.t"
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { has_variable = spice_grew }
				desc = "trade_goods_flavour.77.desc_1"
			}
			triggered_desc = {
				trigger = { always = yes }
				desc = "trade_goods_flavour.77.desc_2"
			}
		}
	}
	picture = slaves_working
	left_portrait = current_ruler

	goto_location = scope:spice_target

	immediate = {
		hidden_effect = {
			random_list = {
				1 = {
					modifier = {
						add = 3
						scope:spice_target = {
							OR = {
								terrain = farmland
								terrain = flood_plain
								terrain = plains
								terrain = oasis
							}
						}
					}
					set_variable = spice_grew
				}
				1 = {}
			}
		}
	}

	option = {
		name = trade_goods_flavour.77.a

		trigger = {
			has_variable = spice_grew
		}
				
		scope:spice_target = {
			set_trade_goods = spices
		}
		remove_variable = spice_grew
	}

	option = {
		name = trade_goods_flavour.77.b

		trigger = {
			NOT = { has_variable = spice_grew }
		}
	}
}

trade_goods_flavour.78 = { # Myrrh - Growing
	type = country_event 
	title = "trade_goods_flavour.78.t"
	desc = "trade_goods_flavour.78.desc"
	picture = slaves_working
	left_portrait = current_ruler

	goto_location = scope:spice_target

	trigger = {
		any_owned_province = {
			trade_goods = myrrh
		}
		NOT = {
			has_variable = has_incense_flavour_var
		}
	}

	immediate = {
		set_variable = {
			name = has_incense_flavour_var
			days = 7300 # 20 years
		}
		random_owned_province = {
			limit = {
				NOR = { 
					trade_goods = incense 
					trade_goods = myrrh
					#trade_goods = lapis 
					#trade_goods = tin
				}
				any_neighbor_province = {
					owner = root
					trade_goods = myrrh
				}
			}
			save_scope_as = spice_target
		}
	}

	option = {
		name = trade_goods_flavour.78.a
		add_treasury = -300
		scope:spice_target = {
			set_trade_goods = myrrh
		}
	}

	option = {
		name = trade_goods_flavour.78.b
	}
}

trade_goods_flavour.79 = { # Incense - Growing
	type = country_event 
	title = "trade_goods_flavour.79.t"
	desc = "trade_goods_flavour.79.desc"
	picture = farming
	left_portrait = current_ruler

	goto_location = scope:spice_target

	trigger = {
		any_owned_province = {
			trade_goods = incense
		}
		NOT = {
			has_variable = has_incense_flavour_var
		}
	}

	immediate = {
		set_variable = {
			name = has_incense_flavour_var
			days = 7300 # 20 years
		}
		random_owned_province = {
			limit = {
				NOR = { 
					trade_goods = incense 
					trade_goods = myrrh
					#trade_goods = lapis 
					#trade_goods = tin
				}
				any_neighbor_province = {
					owner = root
					trade_goods = incense
				}
			}
			save_scope_as = spice_target
		}
	}

	option = {
		name = trade_goods_flavour.79.a
		add_treasury = -300
		scope:spice_target = {
			set_trade_goods = incense
		}
	}

	option = {
		name = trade_goods_flavour.79.b
	}
}

trade_goods_flavour.80 = { # Spices are rare in the country; merchants complain
	type = country_event 
	title = "trade_goods_flavour.80.t"
	desc = "trade_goods_flavour.80.desc"
	picture = bakery
	left_portrait = current_ruler

	trigger = {
		spices_in_country_trigger = yes
		NOT = {
			has_variable = spice_flav_cooldown
		}
	}

	immediate = {
		set_variable = {
			name = spice_flav_cooldown
			days = 7300 # 20 years
		}
	}

	option = { # do not care
		name = trade_goods_flavour.80.a
		add_country_modifier = {
			name = merchant_spices_rare
			duration = 3650
		}
	}

	option = { # buy abroad
		name = trade_goods_flavour.80.b
		add_treasury = rank_scaled_treasury_svalue
	}
}

trade_goods_flavour.81 = { # Salt Shortage
	type = country_event 
	title = "trade_goods_flavour.81.t"
	desc = "trade_goods_flavour.81.desc"
	picture = hellenic_marketplace
	left_portrait = current_ruler

	trigger = {
		salt_in_country_trigger = no
		NOT = {
			has_variable = salt_flav_cooldown
		}
	}

	immediate = {
		set_variable = {
			name = salt_flav_cooldown
			days = 7300 # 20 years
		}
	}

	option = { # do not care
		name = trade_goods_flavour.81.a
		add_country_modifier = {
			name = salt_rare_in_realm
			duration = 3650
		}
	}

	option = { # buy abroad
		name = trade_goods_flavour.81.b
		add_treasury = rank_scaled_treasury_svalue
	}
}

trade_goods_flavour.82 = { # Hemp: be Assyrian, trade with them or have one of them integrated; Cannabis
	type = country_event 
	title = "trade_goods_flavour.82.t"
	desc = "trade_goods_flavour.82.desc"
	picture = religious_rite
	left_portrait = current_ruler

	fire_only_once = yes

	trigger = {
		hemp_in_country_trigger = yes
		NOT = {
			has_variable = has_incense_flavour_var
		}
		OR = {
			country_culture_group = east_levantine
			any_country = {
				country_culture_group = east_levantine
				OR = {
					exports_to = root
					imports_from = root
				}
			}
			any_integrated_culture = {
				this.culture.culture_group = culture_group:east_levantine
			}
		}
	}

	immediate = {
		set_variable = {
			name = has_incense_flavour_var
			days = 7300 # 20 years
		}
	}

	option = { # Cannabis Smells Good
		name = trade_goods_flavour.82.a
		add_country_modifier = {
			name = cannabis_accepted
			duration = 3650
		}
	}

	option = { # I don't like this development...
		name = trade_goods_flavour.82.b
		add_country_modifier = {
			name = cannabis_refused
			duration = 3650
		}
	}
}

trade_goods_flavour.83 = { # Copper, Base Metals, Precious Metals, Gems - New Seam
	type = country_event 
	title = "trade_goods_flavour.83.t"
	desc = "trade_goods_flavour.83.desc"
	picture = quarry
	left_portrait = current_ruler

	goto_location = scope:mining_target

	trigger = {
		any_owned_province = {
			NOR = {
				trade_goods = gems
				trade_goods = base_metals
				trade_goods = precious_metals
				#trade_goods = copper
				has_unminable_trade_good_trigger = yes
			}
			NOR = {
				terrain = plains 
				terrain = farmland
				terrain = oasis
				terrain = flood_plain
			}
			any_neighbor_province = {
				owner = root
				OR = {
					trade_goods = gems
					trade_goods = base_metals
					trade_goods = precious_metals
					#trade_goods = copper
				}
			}
		}
		NOT = {
			has_variable = mining_flav_var
		}
	}

	immediate = {
		set_variable = {
			name = mining_flav_var
			days = 3650 # 10 years
		}
		random_owned_province = {
			limit = {
				NOR = {
					trade_goods = gems
					trade_goods = base_metals
					trade_goods = precious_metals
					#trade_goods = copper
					has_unminable_trade_good_trigger = yes
				}
				NOR = {
					terrain = plains 
					terrain = farmland
					terrain = oasis
					terrain = flood_plain
				}
				any_neighbor_province = {
					owner = root
					OR = {
						trade_goods = gems
						trade_goods = base_metals
						trade_goods = precious_metals
						#trade_goods = copper
					}
				}
			}
			save_scope_as = mining_target
		}
	}

	option = { # Continue Mine
		name = trade_goods_flavour.83.a
		add_treasury = -400
		if = {
			limit = {
				scope:mining_target = {
					any_neighbor_province = {
						trade_goods = gems
					}
				}
			}
			scope:mining_target = {
				set_trade_goods = gems
			}
		}
		# else_if = {
		# 	limit = {
		# 		scope:mining_target = {
		# 			any_neighbor_province = {
		# 				trade_goods = copper
		# 			}
		# 		}
		# 	}
		# 	scope:mining_target = {
		# 		set_trade_goods = copper
		# 	}
		# }
		else_if = {
			limit = {
				scope:mining_target = {
					any_neighbor_province = {
						trade_goods = precious_metals
					}
				}
			}
			scope:mining_target = {
				set_trade_goods = precious_metals
			}
		}
		else_if = {
			limit = {
				scope:mining_target = {
					any_neighbor_province = {
						trade_goods = base_metals
					}
				}
			}
			scope:mining_target = {
				set_trade_goods = base_metals
			}
		}
	}

	option = { # It is not worth it
		name = trade_goods_flavour.83.b
	}
}

trade_goods_flavour.84 = { # Copper, Base Metals, Precious Metals, Gems - Seam depleted
	type = country_event 
	title = "trade_goods_flavour.84.t"
	desc = "trade_goods_flavour.84.desc"
	picture = road_construction
	left_portrait = current_ruler

	goto_location = scope:mining_target

	trigger = {
		always = no
		any_owned_province = {
			OR = {
				#trade_goods = gems
				trade_goods = base_metals
				trade_goods = precious_metals
				trade_goods = iron
			}
		}
		NOT = {
			has_variable = mining_flav_var
		}
	}

	immediate = {
		set_variable = {
			name = mining_flav_var
			days = 3650 # 10 years
		}
		random_owned_province = {
			limit = {
				OR = {
					#trade_goods = gems
					trade_goods = base_metals
					trade_goods = precious_metals
					trade_goods = iron
				}
			}
			save_scope_as = mining_target
		}
	}

	# option = { # Focus on Farming
	# 	name = trade_goods_flavour.84.a
	# 	trigger = {
	# 		scope:mining_target = {
	# 			has_city_status = no
	# 		}
	# 	}
	# 	scope:mining_target = {
	# 		set_trade_goods = vegetables
	# 	}
	# }

	# option = { # Rear Horses
	# 	name = trade_goods_flavour.84.b
	# 	trigger = {
	# 		scope:mining_target = {
	# 			OR = {
	# 				terrain = plains
	# 				terrain = farmland
	# 				terrain = flood_plain
	# 				terrain = hills
	# 			}
	# 		}
	# 		OR = {
	# 			scope:mining_target.region = {
	# 				any_region_province = {
	# 					trade_goods = horses
	# 				}
	# 			}
	# 			scope:mining_target = {
	# 				province_dominant_culture_group = anatolian
	# 			}
	# 			country_culture_group = anatolian
	# 		}
	# 	}
	# 	scope:mining_target = {
	# 		set_trade_goods = horses
	# 	}
	# }

	# option = { # Logging
	# 	name = trade_goods_flavour.84.c
	# 	scope:mining_target = {
	# 		set_trade_goods = wood
	# 	}
	# }

	# option = { # Textiles
	# 	name = trade_goods_flavour.84.d
	# 	trigger = {
	# 		scope:mining_target = {
	# 			has_city_status = yes
	# 		}
	# 	}
	# 	scope:mining_target = {
	# 		set_trade_goods = cloth
	# 	}
	# }

	# option = { # Dye if Phoenician
	# 	name = trade_goods_flavour.84.e
	# 	trigger = {
	# 		OR = {
	# 			country_culture_group = west_levantine
	# 		}
	# 	}
	# 	scope:mining_target = {
	# 		set_trade_goods = dye
	# 	}
	# }

	option = {
		name = trade_goods_flavour.84.f
		scope:mining_target = {
			set_trade_goods = stone # this will not break missions that require a mine to be built...
		}
	}
}

### These have no events associated with them
### honey
### leather, reeds, papyrus 
### stone, marble, limestone
### cloth, earthenware, brick
### fish, dates, olives