namespace = firstborn_traits

##Monarchy Ruler Families get traits
##Not ready for 2 spartan kings yet

firstborn_traits.1 = {
	hidden = yes
	type = country_event
	
	trigger = {
		is_monarchy = yes
		exists = current_ruler
	}
	
	immediate = {
		##Use this to get the true ruler scope
        #get_my_ruler_effect = yes
		current_ruler = {
			save_scope_as = the_true_ruler
			ordered_child = {
				limit = {
					has_same_family = scope:the_true_ruler
				}
				order_by = age
				min = 0
				check_range_bounds = no
				max = 15
				if = {
					limit = {
						NOT = {
							exists = scope:first_born_scope
						}
					}
					save_temporary_scope_as = first_born_scope
					add_trait = first_born
				}
				else_if = {
					limit = {
						NOT = {
							exists = scope:second_born_scope
						}
					}
					save_temporary_scope_as = second_born_scope
					add_trait = second_born
				}
				else_if = {
					limit = {
						NOT = {
							exists = scope:third_born_scope
						}
					}
					save_temporary_scope_as = third_born_scope
					add_trait = third_born
				}
				else_if = {
					limit = {
						NOT = {
							exists = scope:fourth_born_scope
						}
					}
					save_temporary_scope_as = fourth_born_scope
					add_trait = fourth_born
				}
				else_if = {
					limit = {
						NOT = {
							exists = scope:fifth_born_scope
						}
					}
					save_temporary_scope_as = fifth_born_scope
					add_trait = fifth_born
				}
				else_if = {
					limit = {
						NOT = {
							exists = scope:sixth_born_scope
						}
					}
					save_temporary_scope_as = sixth_born_scope
					add_trait = sixth_born
				}
				else_if = {
					limit = {
						NOT = {
							exists = scope:seventh_born_scope
						}
					}
					save_temporary_scope_as = seventh_born_scope
					add_trait = seventh_born
				}
				else_if = {
					limit = {
						NOT = {
							exists = scope:eighth_born_scope
						}
					}
					save_temporary_scope_as = eighth_born_scope
					add_trait = eighth_born
				}
				else_if = {
					limit = {
						NOT = {
							exists = scope:ninth_born_scope
						}
					}
					save_temporary_scope_as = ninth_born_scope
					add_trait = ninth_born
				}
				else_if = {
					limit = {
						NOT = {
							exists = scope:tenth_born_scope
						}
					}
					save_temporary_scope_as = tenth_born_scope
					add_trait = tenth_born
				}
				else_if = {
					limit = {
						NOT = {
							exists = scope:eleventh_born_scope
						}
					}
					save_temporary_scope_as = eleventh_born_scope
					add_trait = eleventh_born
				}
				else_if = {
					limit = {
						NOT = {
							exists = scope:twelfth_born_scope
						}
					}
					save_temporary_scope_as = twelfth_born_scope
					add_trait = twelfth_born
				}
				else_if = {
					limit = {
						NOT = {
							exists = scope:thirteenth_born_scope
						}
					}
					save_temporary_scope_as = thirteenth_born_scope
					add_trait = thirteenth_born
				}
				else_if = {
					limit = {
						NOT = {
							exists = scope:fourteenth_born_scope
						}
					}
					save_temporary_scope_as = fourteenth_born_scope
					add_trait = fourteenth_born
				}
				else_if = {
					limit = {
						NOT = {
							exists = scope:fifteenth_born_scope
						}
					}
					save_temporary_scope_as = fifteenth_born_scope
					add_trait = fifteenth_born
				}
			}
		}
		
		if = {
			limit = {
				OR = {
					government = spartan_monarchy
					government = spartan_imperium
					government = spartan_imperial_cult
					government = judean_empire
				}
				any_character = {
					is_co_ruler = yes
				}
			}
			random_character = {
				limit = {
					is_co_ruler = yes
				}
				save_scope_as = the_co_king
				ordered_child = {
					limit = {
						has_same_family = scope:the_co_king
					}
					order_by = age
					min = 0
					check_range_bounds = no
					max = 15
					if = {
						limit = {
							NOT = {
								exists = scope:first_born_scope
							}
						}
						save_temporary_scope_as = first_born_scope
						add_trait = first_born
					}
					else_if = {
						limit = {
							NOT = {
								exists = scope:second_born_scope
							}
						}
						save_temporary_scope_as = second_born_scope
						add_trait = second_born
					}
					else_if = {
						limit = {
							NOT = {
								exists = scope:third_born_scope
							}
						}
						save_temporary_scope_as = third_born_scope
						add_trait = third_born
					}
					else_if = {
						limit = {
							NOT = {
								exists = scope:fourth_born_scope
							}
						}
						save_temporary_scope_as = fourth_born_scope
						add_trait = fourth_born
					}
					else_if = {
						limit = {
							NOT = {
								exists = scope:fifth_born_scope
							}
						}
						save_temporary_scope_as = fifth_born_scope
						add_trait = fifth_born
					}
					else_if = {
						limit = {
							NOT = {
								exists = scope:sixth_born_scope
							}
						}
						save_temporary_scope_as = sixth_born_scope
						add_trait = sixth_born
					}
					else_if = {
						limit = {
							NOT = {
								exists = scope:seventh_born_scope
							}
						}
						save_temporary_scope_as = seventh_born_scope
						add_trait = seventh_born
					}
					else_if = {
						limit = {
							NOT = {
								exists = scope:eighth_born_scope
							}
						}
						save_temporary_scope_as = eighth_born_scope
						add_trait = eighth_born
					}
					else_if = {
						limit = {
							NOT = {
								exists = scope:ninth_born_scope
							}
						}
						save_temporary_scope_as = ninth_born_scope
						add_trait = ninth_born
					}
					else_if = {
						limit = {
							NOT = {
								exists = scope:tenth_born_scope
							}
						}
						save_temporary_scope_as = tenth_born_scope
						add_trait = tenth_born
					}
					else_if = {
						limit = {
							NOT = {
								exists = scope:eleventh_born_scope
							}
						}
						save_temporary_scope_as = eleventh_born_scope
						add_trait = eleventh_born
					}
					else_if = {
						limit = {
							NOT = {
								exists = scope:twelfth_born_scope
							}
						}
						save_temporary_scope_as = twelfth_born_scope
						add_trait = twelfth_born
					}
					else_if = {
						limit = {
							NOT = {
								exists = scope:thirteenth_born_scope
							}
						}
						save_temporary_scope_as = thirteenth_born_scope
						add_trait = thirteenth_born
					}
					else_if = {
						limit = {
							NOT = {
								exists = scope:fourteenth_born_scope
							}
						}
						save_temporary_scope_as = fourteenth_born_scope
						add_trait = fourteenth_born
					}
					else_if = {
						limit = {
							NOT = {
								exists = scope:fifteenth_born_scope
							}
						}
						save_temporary_scope_as = fifteenth_born_scope
						add_trait = fifteenth_born
					}
				}
			}
		}
	}
}

firstborn_traits.2 = {
	type = character_event
	hidden = yes
	
	trigger = {
		save_temporary_scope_as = new_born
		OR = {
			AND = {
				exists = father
				father = {
					OR = {
						AND = {
							is_ruler = yes
							employer = {
								is_monarchy = yes
							}
						}
						AND = {
							is_co_ruler = yes
							employer = {
								OR = {
									government = spartan_monarchy
									government = spartan_imperium
									government = spartan_imperial_cult
									government = judean_empire
								}
							}
						}
					}
				}
				exists = mother
				mother = {
					is_spouse_of = scope:new_born.father
				}
			}
			AND = {
				exists = mother
				mother = {
					OR = {
						AND = {
							is_ruler = yes
							employer = {
								is_monarchy = yes
							}
						}
						AND = {
							is_co_ruler = yes
							employer = {
								OR = {
									government = spartan_monarchy
									government = spartan_imperium
									government = spartan_imperial_cult
									government = judean_empire
								}
							}
						}
					}
				}
				exists = father
				father = {
					is_spouse_of = scope:new_born.mother
				}
			}
		}
	}
	
	immediate = {
		save_scope_as = new_born
		####Highest first is easiest
		if = {
			limit = {
				exists = father
				father = {
					OR = {
						AND = {
							is_ruler = yes
							employer = {
								is_monarchy = yes
							}
						}
						AND = {
							is_co_ruler = yes
							employer = {
								OR = {
									government = spartan_monarchy
									government = spartan_imperium
									government = spartan_imperial_cult
									government = judean_empire
								}
							}
						}
					}
				}
				exists = mother
				mother = {
					is_spouse_of = scope:new_born.father
				}
			}
			if = {
				limit = {
					father = {
						any_child = {
							has_trait = fourteenth_born
						}
					}
				}
				add_trait = fifteenth_born
			}
			else_if = {
				limit = {
					father = {
						any_child = {
							has_trait = thirteenth_born
						}
					}
				}
				add_trait = fourteenth_born	
			}
			else_if = {
				limit = {
					father = {
						any_child = {
							has_trait = twelfth_born
						}
					}
				}
				add_trait = thirteenth_born	
			}
			else_if = {
				limit = {
					father = {
						any_child = {
							has_trait = eleventh_born
						}
					}
				}
				add_trait = twelfth_born	
			}
			else_if = {
				limit = {
					father = {
						any_child = {
							has_trait = tenth_born
						}
					}
				}
				add_trait = eleventh_born	
			}
			else_if = {
				limit = {
					father = {
						any_child = {
							has_trait = ninth_born
						}
					}
				}
				add_trait = tenth_born	
			}
			else_if = {
				limit = {
					father = {
						any_child = {
							has_trait = eighth_born
						}
					}
				}
				add_trait = ninth_born	
			}
			else_if = {
				limit = {
					father = {
						any_child = {
							has_trait = seventh_born
						}
					}
				}
				add_trait = eighth_born		
			}
			else_if = {
				limit = {
					father = {
						any_child = {
							has_trait = sixth_born
						}
					}
				}
				add_trait = seventh_born		
			}
			else_if = {
				limit = {
					father = {
						any_child = {
							has_trait = fifth_born
						}
					}
				}
				add_trait = sixth_born
			}
			else_if = {
				limit = {
					father = {
						any_child = {
							has_trait = fourth_born
						}
					}
				}
				add_trait = fifth_born
			}
			else_if = {
				limit = {
					father = {
						any_child = {
							has_trait = third_born
						}
					}
				}
				add_trait = fourth_born
			}
			else_if = {
				limit = {
					father = {
						any_child = {
							has_trait = second_born
						}
					}
				}
				add_trait = third_born
			}
			else_if = {
				limit = {
					father = {
						any_child = {
							has_trait = first_born
						}
					}
				}
				add_trait = second_born
			}
			else = {
				add_trait = first_born
			}
		}
		### Add Traits for female rulers children
		else_if = {
			limit = {
				exists = mother
				mother = {
					OR = {
						AND = {
							is_ruler = yes
							employer = {
								is_monarchy = yes
							}
						}
						AND = {
							is_co_ruler = yes
							employer = {
								OR = {
									government = spartan_monarchy
									government = spartan_imperium
									government = spartan_imperial_cult
									government = judean_empire
								}
							}
						}
					}
				}
				exists = father
				father = {
					is_spouse_of = scope:new_born.mother
				}
			}
			if = {
				limit = {
					mother = {
						any_child = {
							has_trait = fourteenth_born
						}
					}
				}
				add_trait = fifteenth_born
			}
			else_if = {
				limit = {
					mother = {
						any_child = {
							has_trait = thirteenth_born
						}
					}
				}
				add_trait = fourteenth_born	
			}
			else_if = {
				limit = {
					mother = {
						any_child = {
							has_trait = twelfth_born
						}
					}
				}
				add_trait = thirteenth_born	
			}
			else_if = {
				limit = {
					mother = {
						any_child = {
							has_trait = eleventh_born
						}
					}
				}
				add_trait = twelfth_born	
			}
			else_if = {
				limit = {
					mother = {
						any_child = {
							has_trait = tenth_born
						}
					}
				}
				add_trait = eleventh_born	
			}
			else_if = {
				limit = {
					mother = {
						any_child = {
							has_trait = ninth_born
						}
					}
				}
				add_trait = tenth_born	
			}
			else_if = {
				limit = {
					mother = {
						any_child = {
							has_trait = eighth_born
						}
					}
				}
				add_trait = ninth_born	
			}
			else_if = {
				limit = {
					mother = {
						any_child = {
							has_trait = seventh_born
						}
					}
				}
				add_trait = eighth_born		
			}
			else_if = {
				limit = {
					mother = {
						any_child = {
							has_trait = sixth_born
						}
					}
				}
				add_trait = seventh_born		
			}
			else_if = {
				limit = {
					mother = {
						any_child = {
							has_trait = fifth_born
						}
					}
				}
				add_trait = sixth_born
			}
			else_if = {
				limit = {
					mother = {
						any_child = {
							has_trait = fourth_born
						}
					}
				}
				add_trait = fifth_born
			}
			else_if = {
				limit = {
					mother = {
						any_child = {
							has_trait = third_born
						}
					}
				}
				add_trait = fourth_born
			}
			else_if = {
				limit = {
					mother = {
						any_child = {
							has_trait = second_born
						}
					}
				}
				add_trait = third_born
			}
			else_if = {
				limit = {
					mother = {
						any_child = {
							has_trait = first_born
						}
					}
				}
				add_trait = second_born
			}
			else = {
				add_trait = first_born
			}
		}

		##Recalc succession
		employer = {
			calculate_succession_effect = yes
		}
	}
}
