namespace = calculate_succession_events 

### Law 1 Agnatic - Primogeniture

calculate_succession_events.1 = {
	type = country_event
	hidden = yes
	
	immediate = {
		calculate_succession_effect = yes
	}
}

###Law 2 - Agnatic-Cognatic, girls can become heir if no brothers/sons/grandsons

calculate_succession_events.2 = {
	type = country_event
	hidden = yes
	
	immediate = {	
		### Identify True King
		random_character = {
			limit = {
				is_ruler = yes
			}
			save_scope_as = true_king
		}

		### Identify the characters
		
		##Children
		ordered_character = {
			limit = {
				is_child_of = scope:true_king
				has_same_family = scope:true_king
				is_male = yes		
			}
			check_range_bounds = no
			order_by = age
			max = 2
			if = {
				limit = {
					NOT = {
						exists = scope:first_child
					}
				}
				save_scope_as = first_child
			}
			else_if = {
				limit = {
					NOT = {
						exists = scope:second_child
					}
				}
				save_scope_as = second_child	
			}
		}	
		
		##Female Children
		
		ordered_character = {
			limit = {
				is_child_of = scope:true_king
				has_same_family = scope:true_king
				is_male = no		
			}
			check_range_bounds = no
			order_by = age
			max = 2
			if = {
				limit = {
					NOT = {
						exists = scope:first_daughter
					}
				}
				save_scope_as = first_daughter
			}
			else_if = {
				limit = {
					NOT = {
						exists = scope:second_daughter
					}
				}
				save_scope_as = second_daughter
			}
		}
		
		##Grand Children
		ordered_character = {
			limit = {
				exists = father
				father = {
					is_child_of = scope:true_king
					has_trait = first_born
				}
				is_male = yes
				has_same_family = scope:true_king
			}
			check_range_bounds = no
			order_by = age
			max = 2
			if = {
				limit = {
					NOT = {
						exists = scope:one_first_grandchild
					}
				}
				save_scope_as = one_first_grandchild
			}
			else_if = {
				limit = {
					NOT = {
						exists = scope:two_first_grandchild
					}
				}
				save_scope_as = two_first_grandchild
			}
		}

		ordered_character = {
			limit = {
				exists = father
				father = {
					is_child_of = scope:true_king
					has_trait = second_born
				}
				is_male = yes
				has_same_family = scope:true_king
			}
			check_range_bounds = no
			order_by = age
			max = 2
			if = {
				limit = {
					NOT = {
						exists = scope:one_second_grandchild
					}
				}
				save_scope_as = one_second_grandchild
			}
			else_if = {
				limit = {
					NOT = {
						exists = scope:two_second_grandchild
					}
				}
				save_scope_as = two_second_grandchild	
			}
		}	

		##Brothers
		ordered_character = {
			limit = {
				is_alive = yes
				is_sibling_of = scope:true_king
				has_same_family = scope:true_king
				is_male = yes
				is_ruler = no	
			}
			check_range_bounds = no
			order_by = age
			max = 2
			if = {
				limit = {
					NOT = {
						exists = scope:first_brother
					}
				}
				save_scope_as = first_brother
			}
			else_if = {
				limit = {
					NOT = {
						exists = scope:second_brother
					}
				}
				save_scope_as = second_brother	
			}
		}	

		##Prominent Family Members
		ordered_character = {
			limit = {
				is_alive = yes
				family = scope:true_king.family
				is_male = yes
				trigger_if = {
					limit = { 
						exists = father
					}
					NOT = {
						father = {
							is_child_of = scope:true_king
						}
					}
				}
				NOT = { is_child_of = scope:true_king }
				NOT = { is_sibling_of = scope:true_king }
			}
			check_range_bounds = no
			order_by = prominence
			max = 2
			if = {
				limit = {
					NOT = {
						exists = scope:first_family_member
					}
				}
				save_scope_as = first_family_member
			}
			else_if = {
				limit = {
					NOT = {
						exists = scope:second_family_member
					}
				}
				save_scope_as = second_family_member
			}
		}		
	
	### Now Set Succession Values for primary heir and secondary heir
		##Must Check that first child has the first_born trait
		if = {
			limit = {
				exists = scope:first_child
				scope:first_child = {
					has_trait = first_born
				}
			}
			scope:first_child = {
				add_character_modifier = {
					name = primary_heir_succession_value
				}
			}
			if = {
				limit = {
					exists = scope:one_first_grandchild
				}
				scope:one_first_grandchild = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:second_child
				}
				scope:second_child = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_brother
				}
				scope:first_brother = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_daughter
				}
				scope:first_daughter = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_family_member
				}
				scope:first_family_member = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
		}
		##Maybe firstborn kid is dead but had kids
		else_if = {
			limit = {
				exists = scope:one_first_grandchild
			}
			scope:one_first_grandchild = {
				add_character_modifier = {
					name = primary_heir_succession_value
				}
			}
			if = {
				limit = {
					exists = scope:two_first_grandchild
				}
				scope:two_first_grandchild = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_child
					scope:first_child = {
						NOT = { has_trait = first_born }
					}
				}
				scope:first_child = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_brother
				}
				scope:first_brother = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_daughter
				}
				scope:first_daughter = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_family_member
				}
				scope:first_family_member = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
		}
		##first child with 2nd born trait is heir then if wasnt first born or firstborn kids
		else_if = {
			limit = {
				exists = scope:first_child
				scope:first_child = {
					has_trait = second_born
				}
			}
			scope:first_child = {
				add_character_modifier = {
					name = primary_heir_succession_value
				}
			}
			if = {
				limit = {
					exists = scope:one_second_grandchild
				}
				scope:one_second_grandchild = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:second_child
				}
				scope:second_child = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_brother
				}
				scope:first_brother = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_daughter
				}
				scope:first_daughter = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_family_member
				}
				scope:first_family_member = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
		}
		## Not very likely case of 2nd born's kids
		else_if = {
			limit = {
				exists = scope:one_second_grandchild
			}
			scope:one_second_grandchild = {
				add_character_modifier = {
					name = primary_heir_succession_value
				}
			}
			if = {
				limit = {
					exists = scope:two_second_grandchild
				}
				scope:two_second_grandchild = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:second_child
				}
				scope:second_child = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_brother
				}
				scope:first_brother = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_daughter
				}
				scope:first_daughter = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_family_member
				}
				scope:first_family_member = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
		}
		###first child but 3rd born or higher
		else_if = {
			limit = {
				exists = scope:first_child
			}
			scope:first_child = {
				add_character_modifier = {
					name = primary_heir_succession_value
				}
			}
			if = {
				limit = {
					exists = scope:second_child
				}
				scope:second_child = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_brother
				}
				scope:first_brother = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_daughter
				}
				scope:first_daughter = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_family_member
				}
				scope:first_family_member = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
		}
		###first brother then 
		else_if = {
			limit = {
				exists = scope:first_brother
			}
			scope:first_brother = {
				add_character_modifier = {
					name = primary_heir_succession_value
				}
			}
			if = {
				limit = {
					exists = scope:second_brother
				}
				scope:second_brother = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_daughter
				}
				scope:first_daughter = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_family_member
				}
				scope:first_family_member = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
		}
		###Daughters then 
		else_if = {
			limit = {
				exists = scope:first_daughter
			}
			scope:first_daughter = {
				add_character_modifier = {
					name = primary_heir_succession_value
				}
			}
			if = {
				limit = {
					exists = scope:second_daughter
				}
				scope:second_daughter = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_family_member
				}
				scope:first_family_member = {
					add_character_modifier = {
						name = primary_heir_succession_value
					}		
				}
			}
		}
		##Prominent Family Members then 
		else_if = {
			limit = {
				exists = scope:first_family_member
			}
			scope:first_family_member = {
				add_character_modifier = {
					name = primary_heir_succession_value
				}
			}
			if = {
				limit = {
					exists = scope:second_family_member
				}
				scope:second_family_member = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
		}
	}
}

###Law 3 - Agnatic-Seniority, oldest dudes in the family

### Need 4 so as to keep the king out of the line of succession xD 

calculate_succession_events.3 = {
	type = country_event
	hidden = yes
	
	immediate = {
		### Identify True King
		random_character = {
			limit = {
				is_ruler = yes
			}
			save_scope_as = true_king
		}
			
		###Close relatives first
		
		ordered_character = {
			limit = {
				is_close_relative = scope:true_king
				has_same_family = scope:true_king
				is_ruler = no
			}
			check_range_bounds = no
			order_by = age
			max = 4
			if = {
				limit = {
					NOT = {
						exists = scope:first_close_relative
					}
				}
				save_scope_as = first_close_relative
			}
			else_if = {
				limit = {
					NOT = {
						exists = scope:second_close_relative
					}
				}
				save_scope_as = second_close_relative	
			}
			else_if = {
				limit = {
					NOT = {
						exists = scope:third_close_relative
					}
				}
				save_scope_as = third_close_relative
			}
			else_if = {
				limit = {
					NOT = {
						exists = scope:fourth_close_relative
					}
				}
				save_scope_as = fourth_close_relative	
			}
		}
		ordered_character = {
			limit = {
				has_same_family = scope:true_king
				NOT = { is_close_relative = scope:true_king }
				is_ruler = no
			}
			check_range_bounds = no
			order_by = age
			max = 4
			if = {
				limit = {
					NOT = {
						exists = scope:first_family_member
					}
				}
				save_scope_as = first_family_member
			}
			else_if = {
				limit = {
					NOT = {
						exists = scope:second_family_member
					}
				}
				save_scope_as = second_family_member
			}
			else_if = {
				limit = {
					NOT = {
						exists = scope:third_family_member
					}
				}
				save_scope_as = third_family_member	
			}
			else_if = {
				limit = {
					NOT = {
						exists = scope:fourth_family_member
					}
				}
				save_scope_as = fourth_family_member
			}
		}
		
		if = {
			limit = {
				exists = scope:first_close_relative
			}
			scope:first_close_relative = {
				add_character_modifier = {
					name = primary_heir_succession_value
				}
			}
			if = {
				limit = {
					exists = scope:second_close_relative
				}
				scope:second_close_relative = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
				if = {
					limit = {
						exists = scope:third_close_relative
					}
					scope:third_close_relative = {
						add_character_modifier = {
							name = pretender_succession_value_2
						}
					}
					if = {
						limit = {
							exists = scope:fourth_close_relative
						}
						scope:fourth_close_relative = {
							add_character_modifier = {
								name = pretender_succession_value_3
							}
						}
					}
					else_if = {
						limit = {
							exists = scope:first_family_member
						}
						scope:first_family_member = {
							add_character_modifier = {
								name = pretender_succession_value_3
							}
						}
					}
				}
				else_if = {
					limit = {
						exists = scope:first_family_member
					}
					scope:first_family_member = {
						add_character_modifier = {
							name = pretender_succession_value_2
						}
					}	
					if = {
						limit = {
							exists = scope:second_family_member
						}
						scope:second_family_member = {
							add_character_modifier = {
								name = pretender_succession_value_3
							}
						}						
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_family_member
				}
				scope:first_family_member = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
				if = {
					limit = {
						exists = scope:second_family_member
					}
					scope:second_family_member = {
						add_character_modifier = {
							name = pretender_succession_value_2
						}
					}
				}
				if = {
					limit = {
						exists = scope:third_family_member
					}
					scope:third_family_member = {
						add_character_modifier = {
							name = pretender_succession_value_3
						}
					}
				}
			
			}
		}
		else_if = {
			limit = {
				exists = scope:first_family_member
			}
			scope:first_family_member = {
				add_character_modifier = {
					name = primary_heir_succession_value
				}
			}
			if = {
				limit = {
					exists = scope:second_family_member
				}
				scope:second_family_member = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			if = {
				limit = {
					exists = scope:third_family_member
				}
				scope:third_family_member = {
					add_character_modifier = {
						name = pretender_succession_value_2
					}
				}
			}
			if = {
				limit = {
					exists = scope:fourth_family_member
				}
				scope:fourth_family_member = {
					add_character_modifier = {
						name = pretender_succession_value_3
					}
				}
			}
		}
	}
}

###Law 4 - Elective Succession

### Give everyone 50 succession value so that they have more than the true king thanks game for awesome coderino

calculate_succession_events.4 = {
	type = country_event
	hidden = yes
	
	immediate = {

		every_character = {
			limit = {
				is_male = yes
				is_minor_character = no
				is_ruler = no
				age > 25
				
			}
			add_character_modifier = {
				name = contender_succession_value
			}
		}	
	}
}

###Law 5 - Incest

calculate_succession_events.5 = {
	type = country_event
	hidden = yes
	
	immediate = {

		### Identify True King
		random_character = {
			limit = {
				is_ruler = yes
			}
			save_scope_as = true_king
		}
		
		ordered_character = {
			limit = {
				is_child_of = scope:true_king
				has_same_family = scope:true_king
			}
			check_range_bounds = no
			order_by = age
			max = 2
			if = {
				limit = {
					NOT = {
						exists = scope:first_child
					}
				}
				save_scope_as = first_child
			}
			else_if = {
				limit = {
					NOT = {
						exists = scope:second_child
					}
				}
				save_scope_as = second_child	
			}
		}	
		
		##Grand Children
		ordered_character = {
			limit = {
				OR = {
					AND = {
						exists = father
						father = {
							is_child_of = scope:true_king
							has_trait = first_born
						}		
					}
					AND = {
						exists = mother
						mother = {
							is_child_of = scope:true_king
							has_trait = first_born
						}		
					}
				}
				has_same_family = scope:true_king
			}
			check_range_bounds = no
			order_by = age
			max = 2
			if = {
				limit = {
					NOT = {
						exists = scope:one_first_grandchild
					}
				}
				save_scope_as = one_first_grandchild
			}
			else_if = {
				limit = {
					NOT = {
						exists = scope:two_first_grandchild
					}
				}
				save_scope_as = two_first_grandchild
			}
		}
		### May need to change this if it doesnt work 
		ordered_character = {
			limit = {
				OR = {
					AND = {
						exists = father
						father = {
							is_child_of = scope:true_king
							has_trait = second_born
						}
						exists = mother
						mother = {
							NOT = { has_trait = first_born }
						}
					}
					AND = {
						exists = mother
						mother = {
							is_child_of = scope:true_king
							has_trait = second_born
						}	
						exists = father
						father = {
							NOT = { has_trait = first_born }
						}						
					}
				}
				has_same_family = scope:true_king
			}
			check_range_bounds = no
			order_by = age
			max = 2
			if = {
				limit = {
					NOT = {
						exists = scope:one_second_grandchild
					}
				}
				save_scope_as = one_second_grandchild
			}
			else_if = {
				limit = {
					NOT = {
						exists = scope:two_second_grandchild
					}
				}
				save_scope_as = two_second_grandchild	
			}
		}	

		##Brothers/sisters
		ordered_character = {
			limit = {
				is_alive = yes
				is_sibling_of = scope:true_king
				has_same_family = scope:true_king
				is_ruler = no	
			}
			check_range_bounds = no
			order_by = age
			max = 2
			if = {
				limit = {
					NOT = {
						exists = scope:first_brother
					}
				}
				save_scope_as = first_brother
			}
			else_if = {
				limit = {
					NOT = {
						exists = scope:second_brother
					}
				}
				save_scope_as = second_brother	
			}
		}	

		##Prominent Family Members - need to be male
		ordered_character = {
			limit = {
				is_alive = yes
				has_same_family = scope:true_king
				is_male = yes
				AND = {
					exists = father
					father = {
						NOT = { is_child_of = scope:true_king }
					}
				}
				NOT = { is_child_of = scope:true_king }
				NOT = { is_sibling_of = scope:true_king }
			}
			check_range_bounds = no
			order_by = prominence
			max = 2
			if = {
				limit = {
					NOT = {
						exists = scope:first_family_member
					}
				}
				save_scope_as = first_family_member
			}
			else_if = {
				limit = {
					NOT = {
						exists = scope:second_family_member
					}
				}
				save_scope_as = second_family_member
			}
		}	

	### Now Set Succession Values for primary heir and secondary heir
		##Must Check that first child has the first_born trait
		if = {
			limit = {
				exists = scope:first_child
				scope:first_child = {
					has_trait = first_born
				}
			}
			scope:first_child = {
				add_character_modifier = {
					name = primary_heir_succession_value
				}
			}
			if = {
				limit = {
					exists = scope:one_first_grandchild
				}
				scope:one_first_grandchild = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:second_child
				}
				scope:second_child = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_brother
				}
				scope:first_brother = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_family_member
				}
				scope:first_family_member = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
		}
		##Maybe firstborn kid is dead but had kids
		else_if = {
			limit = {
				exists = scope:one_first_grandchild
			}
			scope:one_first_grandchild = {
				add_character_modifier = {
					name = primary_heir_succession_value
				}
			}
			if = {
				limit = {
					exists = scope:two_first_grandchild
				}
				scope:two_first_grandchild = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_child
					scope:first_child = {
						NOT = { has_trait = first_born }
					}
				}
				scope:first_child = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_brother
				}
				scope:first_brother = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_family_member
				}
				scope:first_family_member = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
		}
		##first child with 2nd born trait is heir then if wasnt first born or firstborn kids
		else_if = {
			limit = {
				exists = scope:first_child
				scope:first_child = {
					has_trait = second_born
				}
			}
			scope:first_child = {
				add_character_modifier = {
					name = primary_heir_succession_value
				}
			}
			if = {
				limit = {
					exists = scope:one_second_grandchild
				}
				scope:one_second_grandchild = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:second_child
				}
				scope:second_child = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_brother
				}
				scope:first_brother = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_family_member
				}
				scope:first_family_member = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
		}
		## Not very likely case of 2nd born's kids
		else_if = {
			limit = {
				exists = scope:one_second_grandchild
			}
			scope:one_second_grandchild = {
				add_character_modifier = {
					name = primary_heir_succession_value
				}
			}
			if = {
				limit = {
					exists = scope:two_second_grandchild
				}
				scope:two_second_grandchild = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:second_child
				}
				scope:second_child = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_brother
				}
				scope:first_brother = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_family_member
				}
				scope:first_family_member = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
		}
		###first child but 3rd born or higher
		else_if = {
			limit = {
				exists = scope:first_child
			}
			scope:first_child = {
				add_character_modifier = {
					name = primary_heir_succession_value
				}
			}
			if = {
				limit = {
					exists = scope:second_child
				}
				scope:second_child = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_brother
				}
				scope:first_brother = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_family_member
				}
				scope:first_family_member = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
		}
		###first brother then 
		else_if = {
			limit = {
				exists = scope:first_brother
			}
			scope:first_brother = {
				add_character_modifier = {
					name = primary_heir_succession_value
				}
			}
			if = {
				limit = {
					exists = scope:second_brother
				}
				scope:second_brother = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:first_family_member
				}
				scope:first_family_member = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
		}
		##Prominent Family Members then 
		else_if = {
			limit = {
				exists = scope:first_family_member
			}
			scope:first_family_member = {
				add_character_modifier = {
					name = primary_heir_succession_value
				}
			}
			if = {
				limit = {
					exists = scope:second_family_member
				}
				scope:second_family_member = {
					add_character_modifier = {
						name = pretender_succession_value_1
					}
				}
			}
		}
	}
}
