namespace = character_events


character_events.1 = {
	type = character_event
	hidden = yes
	
	trigger = {
		exists = employer
		country = employer
		prisoner = no
		wealth > 1000
		is_head_of_family = no
		NOT = {
			employer = {
				has_variable = character_events_1_flag
			}
		}
	}
	
	weight_multiplier = {
		modifier = {
			factor = 3
			wealth > 2000
		}
	}
	
	immediate = { 
		save_scope_as = target
		employer = {
			set_variable = {
				name = character_events_1_flag
				value = 1
			}
			trigger_event = {
				id = character_events.2
				days = 90
			}
		}
	}
}

character_events.2 = {
	type = country_event
	title = "character_events.2.t"
	desc = "character_events.2.desc"
	picture = war_chest
	
	left_portrait = scope:target
	right_portrait = scope:antagonist
	
	trigger = {
		exists = current_ruler
		any_character = {
			is_ruler = no
			popularity < 60
			prisoner = no
			country = employer
		}
	}
	
	immediate = { 
		random_character = {
			limit = {
				is_ruler = no
				popularity < 60
				prisoner = no
				country = employer
			}
			weight = {
				title_importance_modifier = yes
			}
			save_scope_as = antagonist
		}
	}
	
	option = {
		name = "character_events.2.a"
		hidden_effect = { 
			remove_variable = character_events_1_flag
		}
		scope:antagonist = {
			add_gold = 1000
		}
	}
	
	option = {  
		name = "character_events.2.b"
		trigger = {
			scope:target = {
				num_of_children >= 1
			}
		}
		hidden_effect = { 
			remove_variable = character_events_1_flag
		}
		scope:antagonist = {
			add_loyalty = loyalty_inheritance_divided
		}
		custom_tooltip = character_events.2.b.tooltip
		hidden_effect = {	
			scope:target = {
				while = {
					limit = {
						any_child = {
							NOT = { 
								has_variable = inheritance_ftw
							}
						}
					}
					random_child = {
						weight = {
							title_importance_modifier = yes
						}
						add_gold = {
							value = 1000
							divide = {
								value = scope:target.num_of_children
							}
						}
						add_loyalty = loyalty_inheritance_defended
						set_variable = {
							name = inheritance_ftw
							value = 1
						}
					}
				}
			}
		}
	}
	
	option = {
		name = "character_events.2.c"
		hidden_effect = { 
			remove_variable = character_events_1_flag
		}
		scope:antagonist = {
			add_gold = 100
			add_loyalty = loyalty_inheritance_divided
		}
		add_treasury = 100
	}
}

character_events.3 = {
	type = country_event
	title = "character_events.3.t"
	desc = "character_events.3.desc"
	picture = roman_trial
	
	left_portrait = scope:character_events_3_spouse
	right_portrait = scope:character_events_3_target
	right_portrait = scope:character_events_3_lover
	
	trigger = {
		NOT = {
			has_variable = character_3_toggle
		}
		any_character = {
			has_any_office = yes
			is_adult = yes
			is_ruler = no
			is_married = yes
			is_female = no
			prisoner = no
			exists = spouse
			spouse = {
				char_valid_for_country_events_trigger = yes
				is_alive = yes
			}
		}
		any_character = {
			is_female = yes
			is_ruler = no
			is_married = no
			is_adult = yes
			prisoner = no
		}
	}
	
	immediate = {
		set_variable = {
			name = character_3_toggle
			days = 1825
		}
		random_character = {
			limit = {
				has_any_office = yes
				is_adult = yes
				is_ruler = no
				is_married = yes
				is_female = no
				prisoner = no
				exists = spouse
				spouse = {
					char_valid_for_country_events_trigger = yes
					is_alive = yes
				}
			}
			weight = {
				title_importance_modifier = yes
			}
			save_scope_as = character_events_3_target
			set_variable = {
				name = character_events_3_target_var
				days = 1
			}
			spouse = {
				save_scope_as = character_events_3_spouse
			}
		}
		hidden_effect = {
			random_list = {
				25 = {
					trigger = {
						any_character = {
							is_female = no
							is_ruler = no
							is_married = no
							is_adult = yes
							prisoner = no
						}
					}
					random_character = {
						limit = {
							is_female = no
							is_ruler = no
							is_married = no
							is_adult = yes
							prisoner = no
							NOT = { 
								has_variable = character_events_3_target_var
							}
						}
						weight = {
							title_importance_modifier = yes
						}
						save_scope_as = character_events_3_lover
					}
				}
				75 = {
					trigger = {
						any_character = {
							is_female = yes
							is_married = no
							is_ruler = no
							is_adult = yes
							prisoner = no
						}
					}
					random_character = {
						limit = {
							is_female = yes
							is_married = no
							is_ruler = no
							is_adult = yes
							prisoner = no
							NOT = { 
								has_variable = character_events_3_target_var
							}
						}
						weight = {
							title_importance_modifier = yes
						}
						save_scope_as = character_events_3_lover
					}
				}
			}
		}
	}
	
	option = {
		name = "character_events.3.a"
		if = {
			limit = {
				country_has_democratic_party_trigger = yes
			}
			democratic_approval_effect = {
				VALUE = party_approval_medium
			}
		}
		current_ruler = {
			add_popularity = subtract_popularity_small
		}
		scope:character_events_3_spouse = {
			add_loyalty = loyalty_scandal_ignored
			add_rival = scope:character_events_3_lover
		}
	}
	option = {
		name = "character_events.3.b"
		scope:character_events_3_target = {
			add_prominence = -10
			remove_all_offices = yes
		}
	}
	option = {
		name = "character_events.3.c"
		scope:character_events_3_spouse = {
			add_loyalty = loyalty_scandal_placated
		}
		random_list = {
			75 = {
				scope:character_events_3_target = {
					add_loyalty = loyalty_scandal_flogged
				}
			}
			25 = {
				trigger = {
					NOT = {
						scope:character_events_3_target = {
							has_trait = wounded
						}
					}
				}
				scope:character_events_3_target = {
					add_trait = wounded
				}
			}
			25 = {
				trigger = {
					scope:character_events_3_target = {
						OR = {
							has_trait = wounded
							has_trait = maimed
						}
					}
				}
				scope:character_events_3_target = {
					death = {
						death_reason = death_flogging
					}
				}
			}
		}
	}
}

character_events.4 = {
	type = character_event
	hidden = yes
	
	immediate = {
		if = {
			limit = {
				is_governor = no
				is_mercenary = no
				trigger_if = {
					limit = {
						has_variable = came_from
					}
					NOT = { employer = { civil_war_with = root.var:came_from } }
				}
				NOT = { has_character_modifier = foreign_citizen }
			}
			add_character_modifier = {
				name = foreign_citizen
				duration = -1
			}
		}
	}

}

character_events.5 = {
	type = character_event
	hidden = yes
	
	trigger = {
		OR = {
			AND = {
				exists = spouse
				spouse = {
					is_alive = yes
					employer = root.employer
					has_character_modifier = foreign_citizen
				}
			}
			AND = {
				exists = spouse
				spouse = {
					NOR = {
						is_alive = yes
						employer = root.employer
						has_character_modifier = foreign_citizen
					}
				}
				has_character_modifier = foreign_citizen
			}
			AND = {
				NOT = {
					exists = spouse
				}
				has_character_modifier = foreign_citizen
			}
		}
	}
	
	immediate = {
		scope:newborn = {
			add_character_modifier = {
				name = foreign_citizen
				duration = -1
			}
		}
	}

}

character_events.6 = {
	type = country_event
	title = "character_events.6.t"
	desc = "character_events.6.desc"
	picture = dagger_behind_back
	
	left_portrait = current_ruler
	right_portrait = scope:angry_ex_general
	right_portrait = scope:swayed_friend
	
	trigger = {
		NOT = {
			has_variable = character_6_toggle
		}
		current_ruler = {
			num_of_friends >= 1
			any_friend = {
				employer = root
			}
		}
		any_character = {
			is_ruler = no
			is_general = no
			loyalty < 50
			num_loyal_cohorts >= 10
			NOT = {
				is_friend = root.current_ruler
			}
		}
	}
	
	immediate = {
		set_variable = {
			name = character_6_toggle
			days = 3650
		}
		random_character = {
			limit = {
				is_ruler = no
				is_general = no
				loyalty < 50
				num_loyal_cohorts >= 10
				NOT = {
					is_friend = root.current_ruler
				}
			}
			weight = {
				title_importance_modifier = yes
			}
			save_scope_as = angry_ex_general
		}
		random_character = {
			limit = {
				is_friend = root.current_ruler
				employer = root
			}
			weight = {
				title_importance_modifier = yes
			}
			save_scope_as = swayed_friend
		}
	}
	
	option = {
		name = "character_events.6.a"
		scope:swayed_friend = {
			remove_friend = root.current_ruler
			if = {
				limit = {
					can_get_friends = yes
					NOT = {
						is_friend = scope:angry_ex_general
					}
				}
				if = {
					limit = {
						is_rival = scope:angry_ex_general
					}
					remove_rival = scope:angry_ex_general
				}
				add_friend = scope:angry_ex_general
			}
			add_loyalty = loyalty_swayed_friend
		}
	}

}

character_events.7 = {
	type = country_event
	title = "character_events.7.t"
	desc = "character_events.7.desc"
	picture = scribe_tools
	
	left_portrait = current_ruler
	right_portrait = scope:angry_ex_general
	
	trigger = {
		any_character = {
			is_ruler = no
			is_general = no
			has_tech_office = yes
			num_loyal_cohorts >= 10
		}
		NOT = {
			has_variable = character_7_toggle
		}
	}
	
	immediate = {
		set_variable = {
			name = character_7_toggle
			days = 3650
		}
		random_character = {
			limit = {
				is_ruler = no
				is_general = no
				has_tech_office = yes
				num_loyal_cohorts >= 10
			}
			weight = {
				title_importance_modifier = yes
			}
			save_scope_as = angry_ex_general
		}
	}
	
	option = {
		name = "character_events.7.a"
		add_treasury = {
			value = root.has_monthly_income
			multiply = -6
		}
		scope:angry_ex_general = {
			add_gold = {
				value = root.has_monthly_income
				multiply = 6
			}
		}
	}
	
	option = {
		name = "character_events.7.b"
		add_country_modifier = {
			name = bad_research_general_modifier
			duration = 1825
		}
	}

}

character_events.8 = {
	type = country_event
	hidden = yes
	
	trigger = {
		current_ruler = {
			has_character_modifier = foreign_citizen
		}
	}
	
	immediate = {
		current_ruler = {
			remove_character_modifier = foreign_citizen
		}
	}
}

#Personal Debt Events

character_events.10 = {
	type = character_event
	hidden = yes
	
	trigger = {
		wealth <= -100
		is_ruler = no
		is_general = no
		is_adult = yes
		NOT = {
			has_variable = prison_refused
		}
		NOR = {
			has_office = office_magistrate
			has_office = office_praetor
			has_office = office_steward
		}
		employer = {
			any_character = {
				OR = {
					has_office = office_magistrate
					has_office = office_praetor
					has_office = office_steward
				}
			}
			NOT = {
				has_variable = ongoing_trial
			}
		}
		
	}
	
	immediate = {
		save_scope_as = debtor
		employer = {
			random_character = {
				limit = {
					OR = {
						has_office = office_magistrate
						has_office = office_praetor
						has_office = office_steward
					}
				}
				weight = {
					title_importance_modifier = yes
				}
				save_scope_as = chief_justice
			}
			trigger_event = {
				id = character_events.11
			}
		}
	}
	
}

character_events.11 = {
	type = country_event
	title = "character_events.11.t"
	desc = "character_events.11.desc"
	picture = roman_trial
	
	left_portrait = scope:chief_justice
	right_portrait = scope:debtor
	
	trigger = {
		exists = scope:chief_justice
		exists = scope:debtor
		scope:debtor = {
			is_alive = yes
		}
	}
	
	immediate = {
		set_variable = {
			name = ongoing_trial
			days = 365
		}
	}
	
	option = {
		name = "character_events.11.a"
		imprison = {
			target = scope:debtor
		}
		custom_tooltip = "working_towards_release_tooltip"
		scope:chief_justice = {
			add_prominence = prominence_small
		}
		hidden_effect = {
			scope:debtor = {
				add_character_modifier = {
					name = debt_payoff_toggle
				}
			}
		}
	}
	
	option = {
		name = "character_events.11.b"
		trigger = {
			scope:debtor = {
				num_loyal_cohorts >= 10
			}
		}
		custom_tooltip = "loyal_cohorts_say_no"
		exclusive = yes
		highlight = yes
		scope:debtor = {
			add_prominence = 10
			hidden_effect = {
				set_variable = {
					name = prison_refused
				}
			}
		}
		scope:chief_justice = {
			add_popularity = -5
			add_prominence = -5
		}
	}
	
}

character_events.12 = {
	type = character_event
	hidden = yes
	
	trigger = {
		is_general = no
		martial >= 6
		trigger_if = {
			limit = {
				employer = {
					gender_equality = no
				}
			}
			is_female = no
		}
		NOT = {
			has_character_modifier = secret_pit_fighter
		}
	}
	
	immediate = {
		add_gold = 600
		add_character_modifier = {
			name = secret_pit_fighter
			duration = 3650
		}
	}
	
}

character_events.13 = {
	type = character_event
	hidden = yes
	
	trigger = {
		NOR = {
			has_character_modifier = secret_gambler
			has_character_modifier = reformed_gambler
		}
	}
	
	immediate = {
		add_character_modifier = {
			name = secret_gambler
		}
	}
}

character_events.14 = {
	type = character_event
	hidden = yes
	
	trigger = {
		has_character_modifier = secret_gambler
	}
	
	immediate = {
		remove_character_modifier = secret_gambler
		add_character_modifier = {
			name = reformed_gambler
		}
	}
}

character_events.15 = {
	type = country_event
	hidden = yes
	
	immediate = {
		if = {
			limit = {
				current_ruler = {
					has_character_modifier = debt_payoff_toggle
				}
			}
			current_ruler = {
				remove_character_modifier = debt_payoff_toggle
			}
		}
		if = {
			limit = {
				current_ruler = {
					has_character_modifier = secret_pit_fighter
				}
			}
			current_ruler = {
				remove_character_modifier = secret_pit_fighter
			}
		}
		if = {
			limit = {
				current_ruler = {
					has_character_modifier = secret_gambler
				}
			}
			current_ruler = {
				remove_character_modifier = secret_gambler
				add_character_modifier = {
					name = reformed_gambler
				}
			}
		}
	}
}

character_events.16 = {
	type = character_event
	hidden = yes
	
	immediate = {
		if = {
			limit = {
				has_character_modifier = debt_payoff_toggle
			}
			remove_character_modifier = debt_payoff_toggle
		}
		if = {
			limit = {
				has_character_modifier = secret_pit_fighter
			}
			remove_character_modifier = secret_pit_fighter
		}
		if = {
			limit = {
				has_character_modifier = secret_gambler
			}
			remove_character_modifier = secret_gambler
			add_character_modifier = {
				name = reformed_gambler
			}
		}
		if = {
			limit = {
				has_character_modifier = foreign_royalty
			}
			remove_character_modifier = foreign_royalty
		}
	}
}

character_events.17 = {
	type = character_event
	hidden = yes
	
	immediate = {
		if = {
			limit = {
				has_character_modifier = secret_gambler
			}
			remove_character_modifier = secret_gambler
		}
	}
}

character_events.18 = {
	type = character_event
	hidden = yes
	
	trigger = {
		has_character_modifier = secret_gambler
		wealth <= -500
	}
	
	immediate = {
		remove_character_modifier = secret_gambler
		add_character_modifier = {
			name = reformed_gambler
		}
	}
}

character_events.19 = {
	type = character_event
	hidden = yes
	
	trigger = {
		employer = {
			is_republic = yes
			any_character = {
				is_party_leader = yes
				wealth >= 500
				NOR = {
					is_same_party_as = root.employer.current_ruler
					is_same_party_as = root
				}
			}
		}
		wealth < -100
		wealth > -500
		is_general = no
		NOR = {
			has_character_modifier = debt_payoff_toggle
			has_character_modifier = secret_pit_fighter
		}
		is_party_leader = no
	}
	
	immediate = {
		save_scope_as = debtor
		employer = {
			random_character = {
				limit = {
					is_party_leader = yes
					NOR = {
						is_same_party_as = root.employer.current_ruler
						is_same_party_as = root
					}
					wealth >= 500
				}
				weight = {
					title_importance_modifier = yes
				}
				save_scope_as = randomized_party_leader
			}
		}
		employer = {
			trigger_event = {
				id = character_events.20
			}
		}
	}
	
}

character_events.20 = { 
	type = country_event
	title = "character_events.20.t"
	desc = "character_events.20.desc"
	picture = war_chest
	
	left_portrait = current_ruler
	right_portrait = scope:debtor
	right_portrait = scope:randomized_party_leader
	
	trigger = {
		is_republic = yes
		exists = scope:debtor
		exists = scope:randomized_party_leader
	}
	
	immediate = {
	
	}
	
	option = {
		name = "character_events.20.a"
		scope:randomized_party_leader = {
			add_gold = {
				value = 0
				add = scope:debtor.wealth
			}
		}
		scope:debtor = {
			add_gold = {
				value = 0
				subtract = wealth
			}
			if = {
				limit = {
					is_minor_character = no
				}
				family = {
					add_prestige = -100
				}
			}
			add_party_conviction = {
				party = scope:randomized_party_leader.character_party
				value = 20
			}
		}
	}
	
	option = {
		name = "character_events.20.b"
		add_treasury = {
			value = 0
			add = scope:debtor.wealth
		}
		scope:debtor = {
			add_gold = {
				value = 0
				subtract = wealth
			}
			if = {
				limit = {
					is_minor_character = no
				}
				family = {
					add_prestige = -100
				}
			}
			add_party_conviction = {
				party = root.current_ruler.character_party
				value = 50
			}
		}
	}
	
}

character_events.21 = {
	type = character_event
	hidden = yes
	
	trigger = {
		is_governor = yes
		is_ruler = no
		is_primary_heir = no
		NOT = {
			has_character_modifier = switched_char_religion
		}
		location = {
			NOR = {
				dominant_province_religion = root.religion
				governor_policy = religious_conversion
			}
		}
	}
	
	weight_multiplier = {
		modifier = {
			factor = 1.5
			has_trait = tolerant
		}
		modifier = {
			factor = 1.5
			has_trait = lapsed
		}
		modifier = {
			factor = 0.75
			has_trait = devout
		}
		modifier = {
			factor = 0.75
			has_trait = sceptical
		}
		modifier = {
			factor = 0.75
			has_trait = abrasive
		}
		modifier = {
			factor = 0.75
			has_trait = pious
		}
		modifier = {
			factor = 0.75
			has_trait = zealous
		}
		
	}
	
	immediate = {
		location = {
			save_scope_as = religion_switch_province
		}
		set_character_religion = scope:religion_switch_province.religion
		add_character_modifier = {
			name = switched_char_religion
			duration = 1825
		}
		if = {
			limit = {
				has_trait = lapsed
			}
			remove_trait = lapsed
		}
	}
}

character_events.22 = {
	type = character_event
	hidden = yes
	
	trigger = {
		is_governor = yes
		is_ruler = no
		is_primary_heir = no
		NOT = {
			has_character_modifier = switched_char_culture
		}
		location = {
			NOR = {
				dominant_province_culture = root.culture
				governor_policy = cultural_assimilation
			}
		}
	}
	
	weight_multiplier = {
		modifier = {
			factor = 1.5
			has_trait = tolerant
		}
		modifier = {
			factor = 1.5
			has_trait = lapsed
		}
		modifier = {
			factor = 0.75
			has_trait = devout
		}
		modifier = {
			factor = 0.75
			has_trait = sceptical
		}
		modifier = {
			factor = 0.75
			has_trait = abrasive
		}
		modifier = {
			factor = 0.75
			has_trait = pious
		}
		modifier = {
			factor = 0.75
			has_trait = zealous
		}
		
	}
	
	immediate = {
		location = {
			save_scope_as = culture_switch_province
		}
		set_culture = scope:culture_switch_province.culture
		add_character_modifier = {
			name = switched_char_culture
			duration = 1825
		}
	}
}

character_events.23 = {
	type = character_event
	hidden = yes
	
	trigger = {
		has_any_office = yes
		is_ruler = no
		employer = {
			NOR = {
				tag = REB
				tag = PIR
				tag = BAR
				tag = MER
			}
		}
		is_primary_heir = no
		NOT = {
			has_character_modifier = switched_char_religion
		}
		NOT = {
			has_religion = root.employer.religion
		}
	}
	
	weight_multiplier = {
		modifier = {
			factor = 2
			has_trait = ambitious
		}
		modifier = {
			factor = 0.75
			has_trait = devout
		}
		modifier = {
			factor = 0.75
			has_trait = sceptical
		}
		modifier = {
			factor = 0.75
			has_trait = pious
		}
		modifier = {
			factor = 0.75
			has_trait = abrasive
		}
		modifier = {
			factor = 0.75
			has_trait = zealous
		}
	}
	
	immediate = {
		set_character_religion = root.employer.religion
		add_character_modifier = {
			name = switched_char_religion
			duration = 1825
		}
	}
	
}

character_events.24 = {
	type = character_event
	hidden = yes
	
	trigger = {
		has_any_office = yes
		is_ruler = no
		is_primary_heir = no
		NOT = {
			has_character_modifier = switched_char_culture
		}
		NOT = {
			has_culture = root.employer.culture
		}
	}
	
	weight_multiplier = {
		modifier = {
			factor = 2
			has_trait = ambitious
		}
		modifier = {
			factor = 0.75
			has_trait = devout
		}
		modifier = {
			factor = 0.75
			has_trait = sceptical
		}
		modifier = {
			factor = 0.75
			has_trait = pious
		}
		modifier = {
			factor = 0.75
			has_trait = abrasive
		}
		modifier = {
			factor = 0.75
			has_trait = zealous
		}
	}
	
	immediate = {
		set_culture = root.employer.culture
		add_character_modifier = {
			name = switched_char_culture
			duration = 1825
		}
	}
	
}

character_events.25 = { #Switch heir religion to tutor
	type = country_event
	title = "character_events.25.t"
	desc = {
		first_valid = {
			triggered_desc = {		# Tutor is foreign
				trigger = {
					NOT = { scope:royal_tutor.religion = root.religion }
				}
				desc = "character_events.25.desc_1"
			}
			triggered_desc = {		# Child is foreign
				trigger = { scope:royal_tutor.religion = root.religion }
				desc = "character_events.25.desc_2"
			}
		}
	}
	
	left_portrait = scope:religion_switch_heir
	right_portrait = scope:royal_tutor
	
	picture = greek_court
	
	trigger = {
		is_monarchy = yes
		any_character = {
			has_office = office_royal_tutor
			save_temporary_scope_as = royal_tutor
		}
		has_primary_heir = yes
		any_character = {
			is_primary_heir = yes
			is_adult = no
			NOT = {
				has_same_religion_as = scope:royal_tutor
			}
			NOT = {
				has_character_modifier = switched_char_religion
			}
		}
	}
	
	immediate = {
		random_character = {
			limit = {
				is_primary_heir = yes
			}
			save_scope_as = religion_switch_heir
		}
		random_character = {
			limit = {
				has_office = office_royal_tutor
			}
			save_scope_as = royal_tutor
		}
	}
	
	option = {
		name = "character_events.25.a"
		trigger = {
			NOT = { scope:royal_tutor.religion = root.religion }
		}
		scope:religion_switch_heir = {
			set_character_religion = scope:royal_tutor.religion
			add_character_modifier = {
				name = switched_char_religion
				duration = 1825
			}
		}
	}
	
	option = {
		name = "character_events.25.b"
		trigger = { scope:royal_tutor.religion = root.religion }
		scope:religion_switch_heir = {
			set_character_religion = scope:royal_tutor.religion
			add_character_modifier = {
				name = switched_char_religion
				duration = 1825
			}
		}
	}

	option = {
		name = "character_events.25.c"
		scope:royal_tutor = {
			remove_office = office_royal_tutor
			hidden_effect = { remove_all_positions = yes }
		}
	}
	
}

character_events.26 = { #Switch heir culture to tutor
	type = country_event
	title = "character_events.26.t"
	desc = {
		first_valid = {
			triggered_desc = {		# Tutor is foreign
				trigger = {
					NOT = { scope:royal_tutor.culture = root.culture }
				}
				desc = "character_events.26.desc_1"
			}
			triggered_desc = {		# Child is foreign
				trigger = { scope:royal_tutor.culture = root.culture }
				desc = "character_events.26.desc_2"
			}
		}
	}
	picture = greek_court
	
	left_portrait = scope:culture_switch_heir
	right_portrait = scope:royal_tutor
	
	trigger = {
		is_monarchy = yes
		any_character = {
			has_office = office_royal_tutor
			save_temporary_scope_as = royal_tutor
		}
		has_primary_heir = yes
		any_character = {
			is_primary_heir = yes
			is_adult = no
			NOT = {
				has_same_culture_as = scope:royal_tutor 
			}
			NOT = {
				has_character_modifier = switched_char_culture
			}
		}
	}
	
	immediate = {
		random_character = {
			limit = {
				is_primary_heir = yes
			}
			save_scope_as = culture_switch_heir
		}
		random_character = {
			limit = {
				has_office = office_royal_tutor
			}
			save_scope_as = royal_tutor
		}
	}
	
	option = {
		name = "character_events.26.a"
		trigger = {
			NOT = { scope:royal_tutor.culture = root.culture }
		}
		scope:culture_switch_heir = {
			set_culture = scope:royal_tutor.culture
			add_character_modifier = {
				name = switched_char_culture
				duration = 1825
			}
		}
	}
	
	option = {
		name = "character_events.26.b"
		trigger = { scope:royal_tutor.culture = root.culture }
		scope:culture_switch_heir = {
			set_culture = scope:royal_tutor.culture
			add_character_modifier = {
				name = switched_char_culture
				duration = 1825
			}
		}
	}

	option = {
		name = "character_events.26.c"
		scope:royal_tutor = {
			remove_office = office_royal_tutor
			hidden_effect = { remove_all_positions = yes }
		}
	}
	
}

character_events.27 = { #Switch Ruler religion to country
	type = country_event
	title = "character_events.27.t"
	desc = "character_events.27.desc"
	picture = greek_court
	
	left_portrait = current_ruler
	right_portrait = current_ruler
	
	trigger = {
		current_ruler = {
			NOT = {
				has_religion = root.religion
			}
			NOT = {
				has_variable = will_not_convert
			}
			NOT = {
				has_character_modifier = switched_char_religion
			}
			NOT = {
				has_variable = ruler_rel_switch_toggle
			}
		}
	}
	
	immediate = {
		current_ruler = {
			set_variable = {
				name = ruler_rel_switch_toggle
				days = 3650
			}
		}
	}
	
	option = {
		name = "character_events.27.a"
		current_ruler = {
			set_character_religion = root.religion
			add_character_modifier = {
				name = switched_char_religion
				duration = 1825
			}
		}
		
	}
	
	option = {
		name = "character_events.27.b"
		current_ruler = {
			add_popularity = 20
		}
		add_stability = -20
	}
	
	option = {
		name = "character_events.27.c"
		custom_tooltip = "character_too_devout_tooltip"
		trigger = {
			current_ruler = {
				OR = {
					has_trait = pious
					has_trait = devout
				}
			}
		}
		highlight = yes
		exclusive = yes
		current_ruler = {
			add_zeal = 1
			hidden_effect = {
				set_variable = {
					name = will_not_convert
				}
			}
		}
		add_stability = -25
	}
	
	option = {
		name = "character_events.27.d"
		custom_tooltip = "sceptical_bad_tooltip"
		trigger = {
			current_ruler = {
				has_trait = sceptical
			}
		}
		exclusive = yes
		highlight = yes
		if = {
			limit = {
				current_ruler = {
					zeal >= 1
				}
			}
			current_ruler = {
				add_zeal = -1
			}
		}
		else = {
			add_stability_effect = yes
		}
	}
}

character_events.29 = {
	type = country_event
	title = "character_events.29.t"
	desc = "character_events.29.desc"
	picture = roman_trial
	
	option = { #Deprecated
	
	}
	
	
	
}

character_events.30 = {
	type = country_event
	hidden = yes
	
	trigger = {
		is_monarchy = yes
		any_character = {
			is_sibling_of = root.current_ruler
			is_adult = yes
			employer = root
			NOT = {
				has_character_modifier = disloyal_successor_cmod
			}
			OR = {
				is_pretender = yes
				AND = {
					is_primary_heir = yes
					loyalty < 60
				}
			}
		}
	}
	
	immediate = {
		random_character = {
			limit = {
				is_sibling_of = root.current_ruler
				is_adult = yes
				employer = root
				NOT = {
					has_character_modifier = disloyal_successor_cmod
				}
				OR = {
					is_pretender = yes
					AND = {
						is_primary_heir = yes
						loyalty < 60
					}
				}
			}
			weight = {
				title_importance_modifier = yes
			}
			save_scope_as = fleeing_sibling
		}
		random_neighbour_country = {
			weight = {
				modifier = {
					factor = 10
					NOT = {
						alliance_with = ROOT
					}
				}
				modifier = {
					factor = 3
					this.num_of_cities >= root.num_of_cities
				}
				modifier = {
					factor = 20
					OR = {
						tag = PRY
						tag = MAC
						tag = EGY
						tag = TRE
						tag = SEL
					}
				}
			}
			save_scope_as = flight_target
		}
		trigger_event = {
			id = character_events.31
			days = { 20 70 }
		}
	}
	
}

character_events.31 = {
	type = country_event
	title = "character_events.31.t"
	desc = "character_events.31.desc"
	picture = throneroom
	
	left_portrait = current_ruler
	right_portrait = scope:fleeing_sibling
	
	trigger = {
		scope:fleeing_sibling = {
			is_alive = yes
			is_ruler = no
		}
	}
	
	immediate = {
		save_scope_as = flight_home_country
		if = {
			limit = {
				NOT = {
					exists = scope:flight_target
				}
			}
			random_country = {
				weight = {
					modifier = {
						factor = 10
						NOR = {
							alliance_with = ROOT
							has_civil_war = yes
							any_current_war = {
								any_war_participant = {
									THIS = ROOT
								}
							}
						}
					}
					modifier = {
						factor = 3
						this.num_of_cities >= root.num_of_cities
					}
					modifier = {
						factor = 10
						is_monarchy = yes
					}
					modifier = {
						factor = 20
						OR = {
							tag = PRY
							tag = MAC
							tag = EGY
							tag = TRE
							tag = SEL
						}
					}
				}
				save_scope_as = flight_target
			}
		}
		scope:fleeing_sibling = {
			remove_all_positions = yes
			move_country = scope:flight_target
			set_as_minor_character = this
		}
		hidden_effect = {
			scope:flight_target = {
				trigger_event = {
					id = character_events.32
				}
			}
		}
	}
	
	option = {
		name = "character_events.31.a"
		add_legitimacy = subtract_legitimacy_large
	}
	
	option = {
		name = "character_events.31.b"
		scope:flight_target = {
			add_opinion = {
				modifier = harboring_fugitive
				target = root
			}
		}
		add_opinion = {
			modifier = harbored_fugitive
			target = scope:flight_target
		}
	}
	
	option = {
		name = "character_events.31.c"
		custom_tooltip = character_events_31_tooltip
		trigger = {
			scope:fleeing_sibling = {
				OR = {
					is_general = yes
					is_admiral = yes
				}
			}
		}
		exclusive = yes
		current_ruler = {
			add_popularity = subtract_popularity_small
		}
		add_legitimacy = subtract_legitimacy_large
	}
	
}

character_events.32 = {
	type = country_event
	title = "character_events.32.t"
	desc = "character_events.32.desc"
	picture = throneroom
	
	left_portrait = current_ruler
	left_portrait = scope:fleeing_sibling
	right_portrait = scope:flight_home_country.current_ruler
	
	trigger = {
		exists = scope:flight_home_country
		exists = scope:fleeing_sibling
		scope:fleeing_sibling = {
			is_alive = yes 
		}
	}
	
	option = {
		name = "character_events.32.b"
		current_ruler = {
			add_popularity = popularity_medium
		}
		scope:fleeing_sibling = {
			death = {
				death_reason = death_crucified
			}
		}
		custom_tooltip = character_events_32_tooltip
		show_as_tooltip = {
			scope:flight_home_country = {
				add_opinion = {
					modifier = executed_relative
					target = scope:flight_target
				}
			}
		}
		hidden_effect = {
			scope:flight_home_country = {
				trigger_event = {
					id = character_events.33
				}
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				war_with = scope:flight_home_country
			}
			modifier = {
				factor = 2
				current_ruler = {
					is_rival = scope:flight_home_country.current_ruler
				}
			}
		}
	}
	
	option = {
		name = "character_events.32.c"
		if = {
			limit = { is_monarchy = yes }
			add_legitimacy = legitimacy_large
		}
		scope:fleeing_sibling = {
			add_loyalty = loyalty_pretender_protected
			add_character_modifier = {
				name = foreign_royalty
			}
		}
		ai_chance = {
			factor = 2
		}
	}
	
}

character_events.33 = {
	type = country_event
	title = "character_events.33.t"
	desc = "character_events.33.desc"
	picture = crucifixion
	
	left_portrait = root.current_ruler
	right_portrait = scope:flight_target.current_ruler
	right_portrait = scope:fleeing_sibling
	
	trigger = {
		exists = scope:flight_target
		exists = scope:fleeing_sibling
	}
	
	option = {
		name = "character_events.33.a"
		current_ruler = {
			add_popularity = popularity_small
		}
		add_opinion = {
			target = scope:flight_target
			modifier = executed_relative
		}
	}
	
	option = {
		name = "character_events.33.b"
		current_ruler = {
			add_popularity = subtract_popularity_small
		}
	}
	
}

character_events.34 = {
	type = country_event
	title = "character_events.34.t"
	desc = "character_events.34.desc"
	picture = crucifixion
	
	left_portrait = root.current_ruler
	right_portrait = scope:cancelled_target
	
	option = {
	
	}
	
}

## Notes 06_2_22 Paulus
## Inheritance for both mother & father are now beside each other so that its easier to add more in future
## Remember pass down traits effect in scripted effects


character_events.35 = { #add bloodline traits. this has to be an event, don't put it in OA effects.
	type = character_event
	hidden = yes
	
	immediate = {
		bloodline_on_born_effect = yes
	}	
}

character_events.36 = { #For wealthy characters to start supporting heirs
	type = character_event
	hidden = yes
	
	trigger = {
		employer = {
			is_monarchy = yes
		}
		is_ruler = no
		is_pretender = no
		is_general = no
		is_admiral = no
		loyalty <= 50
		wealth >= 1000
		any_friend = {
			employer = root.employer
			is_pretender = yes
			loyalty <= 50
			NOT = {
				has_character_modifier = being_financially_supported
			}
		}
	}
	
	immediate = {
		random_friend = {
			limit = {
				employer = root.employer
				is_pretender = yes
				loyalty <= 50
				NOT = {
					has_character_modifier = being_financially_supported
				}
			}
			weight = {
				title_importance_modifier = yes
			}
			save_scope_as = support_target
			set_variable = {
				name = being_financially_supported_var
				value = root
				days = 1826
			}
			add_triggered_character_modifier = {
				name = being_financially_supported
				duration = 1825
			}
		}
		set_variable = {
			name = financially_supporting_var
			value = scope:support_target
			days = 1826
		}
		add_triggered_character_modifier = {
			name = financially_supporting
			duration = 1825
		}
	}
}

character_events.37 = {
	type = character_event
	hidden = yes
	
	trigger = {
		employer = {
			is_monarchy = yes
		}
		is_ruler = no
		is_primary_heir = no
		is_general = no
		is_admiral = no
		loyalty <= 50
		wealth >= 1000
		employer = {
			any_successor = {
				is_pretender = yes
				loyalty < 50
				is_adult = yes
				can_get_friends = yes
				NOT = { # Invictus fix, prevents error.log error about befriending yourself
					this = root
				}
			}
		}
	}
	
	immediate = {
		employer = {
			random_successor = {
				limit = {
					is_pretender = yes
					loyalty < 50
					is_adult = yes
					can_get_friends = yes
					NOT = { # Invictus fix, prevents error.log error about befriending yourself
						this = root
					}
				}
				weight = {
					modifier = {
						factor = 100
						this = root.preferred_heir
					}
				}
				save_scope_as = disloyal_friend_target
			}
		}
		if = {
			limit = {
				can_get_friends = no
				num_of_friends >= 1
			}
			random_friend = {
				weight = {
					modifier = {
						factor = 100
						is_pretender = no
					}
				}
				remove_friend = root
			}
		}
		add_friend = scope:disloyal_friend_target
	}
}

character_events.38 = {
	type = country_event
	title = "character_events.38.t"
	desc = "character_events.38.desc"
	left_portrait = scope:recipient
	right_portrait = scope:target 
	
	picture = great_library
	
	option = {
		name = "character_events.38.a" #Military
		trigger = {
			scope:recipient = {
				NOT = {
					has_ambition = ambition_become_great_warrior
				}
			}
		}
		scope:recipient = {
			hidden_effect = { clear_ambition_effect = yes }
			add_loyalty = loyalty_education_diverted
			custom_tooltip = military_ambition_tutor
			hidden_effect = {
				random_list = {
					90 = { set_ambition = ambition_become_great_warrior }
					10 = {
						modifier = {
							factor = 2
							scope:target = {
								has_trait = prominent
							}
						}
						modifier = {
							factor = 2
							scope:target = {
								has_trait = ambitious
							}
						}
						modifier = {
							factor = 2
							scope:target = {
								has_trait = cruel
							}
						}
						set_ambition = ambition_become_despot 
					}
				}
			}	
		}
	}
	
	option = {
		name = "character_events.38.b" #Oratory
		trigger = {
			scope:recipient = {
				NOT = {
					has_ambition = ambition_become_politician
				}
			}
		}
		scope:recipient = {
			hidden_effect = { clear_ambition_effect = yes }
			add_loyalty = loyalty_education_diverted
			custom_tooltip = oratory_ambition_tutor
			hidden_effect = {
				random_list = {
					90 = { set_ambition = ambition_become_politician }
					10 = {
						modifier = {
							factor = 2
							scope:target = {
								has_trait = harsh
							}
						}
						modifier = {
							factor = 2
							scope:target = {
								has_trait = vengeful
							}
						}
						modifier = {
							factor = 2
							scope:target = {
								has_trait = suspicious
							}
						}
						set_ambition = ambition_become_demagogue 
					}
				}
			}	
		}
	}

	option = {
		name = "character_events.38.c" #Finesse
		trigger = {
			scope:recipient = {
				NOT = {
					has_ambition = ambition_become_bureacrat
				}
			}
		}
		scope:recipient = {
			hidden_effect = { clear_ambition_effect = yes }
			add_loyalty = loyalty_education_diverted
			custom_tooltip = finesse_ambition_tutor
			hidden_effect = {
				random_list = {
					90 = { set_ambition = ambition_become_bureacrat }
					10 = {
						modifier = {
							factor = 2
							scope:target = {
								has_trait = gluttonous
							}
						}
						modifier = {
							factor = 2
							scope:target = {
								has_trait = crafty
							}
						}
						modifier = {
							factor = 2
							scope:target = {
								has_trait = shrewd
							}
						}
						set_ambition = ambition_become_rich 
					}
				}
			}	
		}
	}
	
	option = {
		name = "character_events.38.d" #Religious
		trigger = {
			scope:recipient = {
				NOT = {
					has_ambition = ambition_become_holy
				}
			}
		}
		scope:recipient = {
			hidden_effect = { clear_ambition_effect = yes }
			add_loyalty = loyalty_education_diverted
			custom_tooltip = religious_ambition_tutor
			hidden_effect = {
				set_ambition = ambition_become_holy
			}
		}
	}
	
	option = {
		name = "character_events.38.e" #none
		custom_tooltip = no_effect_tooltip
		scope:recipient = { remove_variable = tutored_already }
		#refund_price = price_tutor_heir
	}
	
}

character_events.39 = {
	type = character_event
	hidden = yes
	
	trigger = {
		OR = {
			this = char:178
			this = char:180
		}
		num_of_children >= 1
	}
	
	immediate = {
		death = {
			death_reason = death_books_stairs
		}
	}
	
}

character_events.40 = { #Generals spend cash on buying unit loyalty while at peace
	type = character_event
	hidden = yes #Deprecated
	
	
}

character_events.41 = {
	type = character_event
	hidden = yes
	
	trigger = {
		is_mercenary = yes
		employer = {
			this = c:MER
		}
		has_variable = adventuring_from
		var:adventuring_from = {
			has_land = yes
		}
		NOT = {
			has_variable = wont_go_home
		}
		NOT = {
			has_variable = next_in_succession
		}
	}
	
	immediate = {
		save_scope_as = returning_merc
		var:adventuring_from = {
			save_scope_as = origin_country
		}
		change_mercenary_employer = scope:origin_country
		remove_as_mercenary = yes
		add_martial = 5
		if = {
			limit = {
				in_command = yes
			}
			every_character_unit = {
				destroy_unit = yes
			}
		}
		scope:origin_country = {
			trigger_event = {
				id = character_events.43
			}
		}
		remove_variable = adventuring_from
	}
	
}

character_events.42 = {
	type = character_event
	hidden = yes
	
	trigger = {
		is_mercenary = yes
		employer = {
			this = c:MER
		}
		has_variable = adventuring_from
		var:adventuring_from = {
			has_land = yes
			is_monarchy = yes
		}
		NOT = {
			has_variable = wont_go_home
		}
		NOT = {
			has_variable = next_in_succession
		}
	}
	
	immediate = {
		save_scope_as = returning_merc
		var:adventuring_from = {
			save_scope_as = origin_country
		}
		change_mercenary_employer = scope:origin_country
		remove_as_mercenary = yes
		add_martial = 5
		add_loyalty = loyalty_returning_mercenary
		add_gold = 500
		scope:origin_country = {
			trigger_event = {
				id = character_events.44
			}
		}
		remove_variable = adventuring_from
	}
	
}

character_events.43 = {
	type = country_event 
	title = "character_events.43.t"
	desc = {
		desc = "returning_merc_first"
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:returning_merc = {
						has_variable = adventuring_mercenary_siege
					}
				}
				desc = "returning_merc_siege_yes"
			}
			triggered_desc = {
				trigger = {
					always = yes
				}
				desc = "returning_merc_siege_no"
			}
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					local_var:last_par = 1
				}
				desc = "returning_merc_success"
			}
			triggered_desc = {
				trigger = {
					local_var:last_par = 2
				}
				desc = "returning_merc_failure"
			}
		}
	}
	
	left_portrait = current_ruler
	right_portrait = scope:returning_merc
	
	picture = persia_marching 
	
	immediate = {
		if = {
			limit = {
				scope:returning_merc = {
					has_variable = adventuring_mercenary_siege
				}
			}
			scope:returning_merc.var:adventuring_mercenary_siege = {
				save_scope_as = siege_loc
			}
			scope:returning_merc = {
				add_finesse = 1
			}
		}
		set_local_variable = {
			name = last_par
			value = {
				integer_range = { min = 1 max = 2 }
			}
		}
		if = {
			limit = {
				local_var:last_par = 1
			}
			scope:returning_merc = {
				add_martial = 1
			}
			hidden_effect = {
				scope:returning_merc = {
					add_gold = 1000
				}	
			}
		}
	}
	
	option = {
		name = "character_events.43.a"
		if = {
			limit = {
				local_var:last_par = 1
			}
			scope:returning_merc = {
				add_loyalty = renowned_adventurer_general_cmod
				add_character_modifier = {
					name = renowned_adventurer_general_cmod
					duration = -1
				}
			}
		}
		else = {
			scope:returning_merc = {
				add_character_modifier = {
					name = terrible_adventurer_general_cmod
					duration = -1
				}
			}
		}
	}
}

character_events.44 = {
	type = country_event 
	title = "character_events.44.t"
	desc = "character_events.44.desc"
	
	
	left_portrait = current_ruler
	right_portrait = scope:returning_merc
	right_portrait = scope:supported_pretender
	
	picture = romans_marching
	
	immediate = {
		random_character = {
			limit = {
				is_pretender = yes
			}
			save_scope_as = supported_pretender
		}
		random_owned_province = {
			save_scope_as = target_loc
		}
		hidden_effect = {
			scope:returning_merc = {
				add_loyal_veterans = 20
				add_popularity = 50
			}
		}

	}
	
	option = {
		name = "character_events.44.a"
		scope:returning_merc = {
			add_loyalty = renowned_adventurer_general_cmod
			add_character_modifier = {
				name = renowned_adventurer_general_cmod
				duration = -1
			}
		}
		scope:supported_pretender = {
			add_loyalty = loyalty_mercenary_support
		}
		remove_stability_effect = yes
	}
}

character_events.45 = {
	type = character_event
	hidden = yes
	
	trigger = {
		is_mercenary = yes
		employer = {
			this = c:MER
		}
		has_variable = adventuring_from
		var:adventuring_from = {
			has_land = yes
			is_monarchy = yes
		}
		NOT = {
			has_variable = wont_go_home
		}
		has_variable = next_in_succession
		var:next_in_succession = {
			is_alive = yes
			is_ruler = yes
		}
	}
	
	immediate = {
		save_scope_as = returning_merc
		var:adventuring_from = {
			save_scope_as = origin_country
		}
		change_mercenary_employer = scope:origin_country
		remove_as_mercenary = yes
		if = {
			limit = {
				in_command = yes
			}
			every_character_unit = {
				destroy_unit = yes
			}
		}
		add_gold = 500
		scope:origin_country = {
			trigger_event = {
				id = character_events.43
			}
		}
		remove_variable = adventuring_from
	}
	
}

character_events.46 = {
	type = character_event
	hidden = yes
	
	trigger = {
		is_mercenary = yes
		employer = {
			this = c:MER
		}
		has_variable = adventuring_from
		var:adventuring_from = {
			has_land = yes
			is_monarchy = yes
		}
		NOT = {
			has_variable = wont_go_home
		}
		has_variable = next_in_succession
		var:next_in_succession = {
			OR = {
				is_alive = no
				is_ruler = no
			}
		}
	}
	
	immediate = {
		save_scope_as = returning_merc
		var:adventuring_from = {
			save_scope_as = origin_country
		}
		change_mercenary_employer = scope:origin_country
		remove_as_mercenary = yes
		add_gold = 500
		add_loyal_veterans = 20
		employer = {
			random_owned_province = { save_scope_as = target_loc }
		}
		scope:origin_country = {
			trigger_event = {
				id = character_events.47
			}
		}
		remove_variable = adventuring_from
	}
	
}

character_events.47 = {
	type = country_event
	title = "character_events.47.t"
	desc = "character_events.47.desc"
	
	trigger = {}
	
	left_portrait = current_ruler
	right_portrait = scope:returning_merc
	right_portrait = scope:outraged_commander
	
	picture = throneroom
	
	immediate = {
		if = {
			limit = {
				any_character = {
					NOT = {
						this = scope:returning_merc
					}
					is_general = yes
				}
			}
			random_character = {
				limit = {
					NOT = {
						this = scope:returning_merc
					}
					is_general = yes
				}
				save_scope_as = outraged_commander
			}
		}
		if = {
			limit = {
				scope:returning_merc = {
					has_variable = next_in_succession
				}
			}
			scope:returning_merc.var:next_in_succession = {
				save_scope_as = old_king
			}
		}
		scope:returning_merc = {
			add_loyalty = loyalty_returning_mercenary
		}
	}
	
	option = {
		name = "character_events.47.a"
		add_stability = -40
		if = {
			limit = {
				exists = scope:outraged_commander
			}
			scope:outraged_commander = {
				add_loyalty = loyalty_outraged_commander
			}
		}
	}
}

character_events.48 = {
	type = country_event
	title = "character_events.48.t"
	desc = {
		desc = "character_events.48.desc"
		triggered_desc = {
			trigger = {
				has_local_variable = next_in_succession
			}
			desc = "character_events.48.desc_successor"
		}
	}
	
	
	left_portrait = current_ruler
	right_portrait = scope:dead_merc
	
	picture = greek_court
	
	immediate = {}
	
	option = {
		name = "character_events.48.a"
		current_ruler = {
			add_popularity = subtract_popularity_medium
		}
		if = {
			limit = {
				has_local_variable = next_in_succession
				is_monarchy = yes
			}
			add_legitimacy = subtract_legitimacy_huge
			remove_stability_effect = yes
		}
	}
}

# Baldness
character_events.49 = {
	type = character_event
	hidden = yes

	trigger = {
		NOT = { has_variable = bald }
		age >= 30
	}

	immediate = {
		random_list = {
			50 = {
				# Do nothing
			}
			1 = {
				set_variable = bald
			}
			5 = {
				modifier = {
					factor = 0
					age <= 30
				}
				set_variable = bald
			}
			5 = {
				modifier = {
					factor = 0
					age <= 40
				}
				set_variable = bald
			}
			5 = {
				modifier = {
					factor = 0
					age <= 50
				}
				set_variable = bald
			}
			5 = {
				modifier = {
					factor = 0
					age <= 55
				}
				set_variable = bald
			}
			5 = {
				modifier = {
					factor = 0
					age <= 60
				}
				set_variable = bald
			}
		}
	}
}

character_events.50 = {
	type = country_event
	title = "character_events.50.t"
	desc = "character_events.50.desc"
	
	left_portrait = current_ruler
	right_portrait = scope:random_target.current_ruler
	right_portrait = scope:target
	
	picture = greek_marketplace
	
	option = {
		name = "character_events.50.a"
		custom_tooltip = "ostracism_flees_to"
		scope:random_target = {
			add_opinion = {
				target = root
				modifier = mg_ostra
			}
		}
	}
	
}

character_events.51 = {
	type = character_event
	hidden = yes
	
	trigger = {
		is_alive = yes
		employer = {
			is_ai = yes
			OR = {
				is_monarchy = yes
				is_tribal = yes
			}
			num_of_cities <= 100
			NOR = {
				is_diadochi_trigger = yes
			}
		}
		has_variable = ostracized_from
		var:ostracized_from = {
			has_land = yes
		}
	}
	
	immediate = {
		save_scope_as = coup_leader
		set_as_minor_character = this
		employer = {
			set_as_ruler = root
			create_family = scope:coup_leader
			save_scope_as = coup_target
		}
		var:ostracized_from = {
			save_scope_as = from_over_here
		}
		scope:from_over_here = {
			trigger_event = {
				id = character_events.52
			}
		}
	}
	
}

character_events.52 = {
	type = country_event
	title = "character_events.52.t"
	desc = "character_events.52.desc"
	
	left_portrait = current_ruler
	right_portrait = scope:coup_target.current_ruler
	
	picture = throneroom
	
	option = {
		name = "character_events.52.a"
		current_ruler = {
			add_popularity = subtract_popularity_large
		}
		scope:coup_target = {
			add_opinion = {
				target = root
				modifier = mg_ostra_oops
			}
		}
	}
	
}

character_events.53 = {
	type = character_event
	hidden = yes
	
	trigger = { has_variable = betrothed_flag }

	immediate = {
		if = {
			limit = {
				var:betrothed_flag = {
					betrothed_trigger = yes
					var:betrothed_flag = ROOT
					is_adult = yes
				}
			}
			save_scope_as = target
			var:betrothed_flag = { save_scope_as = recipient }
			scope:recipient.employer = {
				set_variable = {
					name = marriage_proposal_ongoing
					days = 60
				}
			}
			scope:target.employer = {
				set_variable = {
					name = marriage_proposal_ongoing
					days = 60
				}
				trigger_event = { id = royal_marriage.2 }
			}
		}
		else = {
			if = {
				limit = {
					OR = {
						var:betrothed_flag = { is_adult = yes }
						var:betrothed_flag = { betrothed_trigger = no }
					}
				}
				var:betrothed_flag = { remove_variable = betrothed_flag }
				remove_variable = betrothed_flag
			}
		}
	}
}

character_events.54 = { # Generic new character appears event
	type = minor_country_event
	title = character_events.54.t
	desc = character_events.54.desc
	left_portrait = scope:new_character
	interface_lock = no
	
	option = {
		name = character_events.54.a
		custom_tooltip = character_events.54.at
	}
}