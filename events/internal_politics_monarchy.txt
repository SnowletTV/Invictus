namespace = ip_monarchy

ip_monarchy.1 = {
	type = country_event
	title = "ip_monarchy.1.t"
	desc = "ip_monarchy.1.desc"
	picture = successors
	
	left_portrait = scope:successor_target_1
	right_portrait = scope:successor_target_2
	
	trigger = {
		exists = current_ruler
		is_monarchy = yes
		has_land = yes
		any_character = {
			is_alive = yes
			is_successor = yes
			is_adult = yes
			can_get_rivals = yes
			save_temporary_scope_as = primary_heir_scope
		}
		any_character = {
			is_alive = yes
			is_successor = yes
			char_valid_for_country_events_trigger = yes
			is_adult = yes
			can_get_rivals = yes
			NOR = {
				this = scope:primary_heir_scope
				is_rival = scope:primary_heir_scope
				is_friend = scope:primary_heir_scope
			}
		}
	}
	
	immediate = {
		random_character = {
			limit = {
				is_alive = yes
				is_successor = yes
				is_adult = yes
				can_get_rivals = yes
			}
			weight = {
				title_importance_modifier = yes
			}
			save_scope_as = successor_target_1
		}
		random_character = {
			limit = {
				is_alive = yes
				is_successor = yes
				is_adult = yes
				char_valid_for_country_events_trigger = yes
				can_get_rivals = yes
				NOR = {
					this = scope:successor_target_1
					is_rival = scope:successor_target_1
					is_friend = scope:successor_target_1
				}
			}
			weight = {
				modifier = {
					factor = 100
					NOT = {
						has_same_family = scope:successor_target_1
					}
				}
				title_importance_modifier = yes
			}
			save_scope_as = successor_target_2
		}
	}
	
	option = {
		name = "ip_monarchy.1.a"
		scope:successor_target_1 = {
			add_rival = scope:successor_target_2
		}
	}
	
	option = {
		name = "ip_monarchy.1.b"
		scope:successor_target_1 = {
			add_loyalty = loyalty_scolded_rivals
		}
		scope:successor_target_2 = {
			add_loyalty = loyalty_scolded_rivals
		}
	}
	
	option = {
		name = "ip_monarchy.1.c"
		trigger = {
			scope:successor_target_1 = {
				is_primary_heir = yes
			}
		}
		scope:successor_target_1 = {
			add_rival = scope:successor_target_2
		}
		scope:successor_target_1 = {
			add_loyalty = loyalty_supported_heir
		}
		scope:successor_target_2 = {
			add_loyalty = loyalty_unsupported_heir
		}
	}
	
	option = {
		trigger = {
			scope:successor_target_2 = {
				is_primary_heir = yes
			}
		}
		name = "ip_monarchy.1.d"
		scope:successor_target_1 = {
			add_loyalty = loyalty_unsupported_heir
		}
		scope:successor_target_2 = {
			add_rival = scope:successor_target_1
		}
		scope:successor_target_2 = {
			add_loyalty = loyalty_supported_heir
		}
	}
}

ip_monarchy.2 = { #Pretender plot 1 chain 
	type = country_event
	title = "ip_monarchy.2.t"
	desc = "ip_monarchy.2.desc"
	picture = dagger_behind_back
	
	left_portrait = root.current_ruler
	right_portrait = scope:plotting_pretender
	
	trigger = {
		exists = current_ruler
		is_monarchy = yes
		has_land = yes
		any_character = {
			is_pretender = yes
			is_adult = yes
			loyalty <= 70
		}
		NOR = { 
			has_variable = ongoing_plot
			has_variable = ip_mon_2_cooldown
		}
	}
	
	immediate = {
		set_variable = {
			name = ip_mon_2_cooldown
			days = 7300 # 20 years
		}
		set_variable = {
			name = ongoing_plot
		}
		random_character = {
			limit = {
				is_pretender = yes 
				is_adult = yes
			}
			weight = {
				modifier = {
					factor = 10
					is_adult = yes
				}
				title_importance_modifier = yes
			}
			save_scope_as = plotting_pretender
		}
	}

	option = {
		name = "ip_monarchy.2.a"
		custom_tooltip = "plot_event_chain_tooltip"
		scope:plotting_pretender = {
			add_loyalty = loyalty_trusted_servant
		}
		hidden_effect = {
			trigger_event = {
				on_action = plot_events_early
				days = { 30 60 }
			}
		}
	}
	
	option = {
		name = "ip_monarchy.2.b"
		custom_tooltip = "plot_event_chain_tooltip"
		set_variable = {
			name = surveillance
			value = 1
		}
		add_treasury = {
			value = 0
			subtract = root.has_monthly_income
			multiply = 3
		}
		hidden_effect = {
			trigger_event = {
				on_action = plot_events_early
				days = { 30 60 }
			}
		}
		custom_tooltip = "surveillance_tooltip"
	}
}

ip_monarchy.3 = { #Early 1
	type = country_event
	title = "ip_monarchy.3.t"
	desc = "ip_monarchy.3.desc"
	picture = greek_philosophers
	
	left_portrait = scope:plotting_pretender
	right_portrait = scope:plotting_pretender_2
	
	trigger = { 
		exists = current_ruler
		has_land = yes
		scope:plotting_pretender = {
			is_valid_plotter = yes
			is_ruler = no
		}
		any_character = {
			is_successor = yes
			is_adult = yes
			NOT = {
				this = scope:plotting_pretender
			}
			save_temporary_scope_as = plotting_pretender_2_temp
		}
		any_character = {
			is_successor = yes
			is_adult = yes
			NOR = {
				this = scope:plotting_pretender
			this = scope:plotting_pretender_2_temp 
			}
		}
		
	}
	
	immediate = {
		set_variable = {
			name = plot_type
			value = flag:successor_murder
		}
		random_character = {
			limit = {
				is_successor = yes
				is_adult = yes
				NOT = {
					this = scope:plotting_pretender
				}
			}
			weight = {
				modifier = {
					factor = 10
					is_adult = yes
				}
				modifier = {
					factor = 0.1
					is_rival = scope:plotting_pretender
				}
				title_importance_modifier = yes
			}
			save_scope_as = plotting_pretender_2
		}
		random_character = {
			limit = {
				is_successor = yes
				is_adult = yes
				NOR = {
					this = scope:plotting_pretender 
					this = scope:plotting_pretender_2 
				} 
			}
			weight = {
				modifier = { 
					factor = 10
					is_adult = yes
				} 
				modifier = {  
					factor = 10
					OR = { 
						is_rival = scope:plotting_pretender
						is_rival = scope:plotting_pretender_2
					}
				}
				title_importance_modifier = yes
			}
			save_scope_as = plot_target
		}
	}
	 
	option = {
		name = "ip_monarchy.3.a"
		custom_tooltip = "no_action_taken_tooltip"
		hidden_effect = {
			trigger_event = {
				on_action = plot_events_intermediary
				days = { 30 60 }
			}
		}
	}
	
	option = {
		name = "ip_monarchy.3.b"
		highlight = yes
		trigger = {
			current_ruler = {
				has_trait = crafty
			}
		}
		custom_tooltip = "crafty_tooltip"
		scope:plotting_pretender = {
			add_prominence = prominence_huge
		}
		scope:plotting_pretender_2 = {
			add_prominence = prominence_huge
		}
		end_plot_event_chain_effect = yes
	}
	
	option = {
		name = "ip_monarchy.3.c"
		add_treasury = {
			value = 0
			subtract = root.has_monthly_income
			multiply = 3 
		}
		scope:plotting_pretender_2 = {
			add_gold = {
				value = root.has_monthly_income
				multiply = 3
			}
		}
		custom_tooltip = "pretender_2_leaves_plot"
		hidden_effect = {
			trigger_event = {
				on_action = plot_events_intermediary
				days = { 30 60 }
			}
		}
		clear_saved_scope = plotting_pretender_2
	} 
	
	option = {
		name = "ip_monarchy.3.d"
		trigger = {
			has_variable = surveillance
			var:surveillance >= 1
			NOT = {
				has_variable = surveillance_discovered
			}
		}
		if = {
			limit = {
				scope:plot_target = {
					is_alive = yes
				}
			}
			scope:plot_target = {
				add_loyalty = loyalty_forewarned_plot
			}
			set_variable = {
				name = successor_warned
				value = 1
			}
			custom_tooltip = "successor_warned_tooltip" 
			hidden_effect = {
				trigger_event = {
					on_action = plot_events_intermediary
					days = { 30 60 }
				}
			}
		}
	}
	
}

ip_monarchy.5 = { #Fallback
	type = country_event
	title = "ip_monarchy.5.t"
	desc = "ip_monarchy.5.desc"
	picture = throneroom
	
	left_portrait = root.current_ruler
	
	trigger = {
		exists = current_ruler
		has_land = yes
	}
	
	immediate = {
		
	}
	
	option = {
		name = "ip_monarchy.5.a"
		end_plot_event_chain_effect = yes
	}
	
}

ip_monarchy.6 = { #Early 3
	type = country_event
	title = "ip_monarchy.6.t"
	desc = "ip_monarchy.6.desc"
	picture = proscription
	
	left_portrait = root.current_ruler
	right_portrait = scope:plotting_pretender 
	
	trigger = { 
		exists = current_ruler
		exists = scope:plotting_pretender
		scope:plotting_pretender = {
			is_valid_plotter = yes
			is_ruler = no
			OR = {
				finesse > 6
				has_trait = suspicious
			}
		}
		has_land = yes
		has_variable = surveillance
		NOT = {
			has_variable = surveillance_discovered
		}
	}
	
	immediate = {
		set_variable = {
			name = surveillance_discovered
		}
	}
	
	option = {
		name = "ip_monarchy.6.a"
		current_ruler = {
			add_popularity = subtract_popularity_medium
		}
		scope:plotting_pretender = {
			add_loyalty = loyalty_surveillance_discovered
		}
		trigger_event = {
			on_action = plot_events_early
			days = { 30 60 }
		}
	}
	
}

ip_monarchy.7 = { #Intermediary 1
	type = country_event
	title = "ip_monarchy.7.t"
	desc = "ip_monarchy.7.desc"
	picture = looting
	
	left_portrait = root.current_ruler
	left_portrait = scope:plot_target
	right_portrait = scope:plotting_pretender_2
	right_portrait = scope:plotting_pretender
	
	trigger = {
		exists = current_ruler
		exists = scope:plotting_pretender_2
		exists = scope:plot_target
		exists = scope:plotting_pretender
		scope:plotting_pretender_2 = {
			is_valid_plotter = yes
		}
		scope:plotting_pretender = {
			is_valid_plotter = yes
		}
		scope:plot_target = {
			is_alive = yes
			employer = root
			prisoner = no
		}
		has_land = yes
	}
	
	immediate = {
		
	}
	
	option = {
		name = "ip_monarchy.7.a"
		trigger = {
			has_variable = successor_warned
		}
		scope:plotting_pretender_2 = {
			add_popularity = subtract_popularity_medium
		}
		scope:plotting_pretender = {
			add_popularity = subtract_popularity_medium
		}
		if = {
			limit = {
				scope:plot_target = {
					can_get_rivals = yes
					NOT = {
						is_rival = scope:plotting_pretender_2
					}
				}
				scope:plotting_pretender_2 = {
					can_get_rivals = yes
				}
			}
			scope:plot_target = {
				add_rival = scope:plotting_pretender_2
			}
		}
	}
	
	option = { 
		name = "ip_monarchy.7.b" 
		trigger = { 
			exists = current_ruler
			NOT = {
				has_variable = successor_warned 
			}
		} 
		scope:plot_target = { 
			add_gold = {
				value = 0
				subtract = scope:plot_target.wealth
				divide = 2
			}
			add_prominence = subtract_prominence_large
		}
		scope:plotting_pretender_2 = {
			add_gold = {
				value = 0
				add = scope:plot_target.wealth
				divide = 2
			}
		}
		if = {
			limit = {
				scope:plot_target = {
					can_get_rivals = yes
					NOT = {
						is_rival = scope:plotting_pretender_2
					}
				}
				scope:plotting_pretender_2 = {
					can_get_rivals = yes
				}
			}
			scope:plot_target = {
				add_rival = scope:plotting_pretender_2
			}
		}
	}
}

ip_monarchy.8 = { #Intermediary 2 - fight breaks out
	type = country_event
	title = "ip_monarchy.8.t"
	desc = "ip_monarchy.8.desc"
	picture = dagger_behind_back
	
	left_portrait = root.current_ruler
	left_portrait = scope:plot_target
	right_portrait = scope:plotting_pretender
	
	trigger = {
		exists = current_ruler
		exists = scope:plot_target
		exists = scope:plotting_pretender
		scope:plotting_pretender = {
			is_valid_plotter = yes
		}
		has_variable = plot_type
		var:plot_type = flag:successor_murder
		has_land = yes
	} 
	
	immediate = { 
		 
	}
	
	option = {
		name = "ip_monarchy.8.a"
		trigger = {
			scope:plot_target.martial >= scope:plotting_pretender.martial
		}
		exclusive = yes
		scope:plotting_pretender = {
			if = {
				limit = {
					NOT = {
						has_trait = wounded
					}
				}
				add_trait = wounded
			}
			else_if = {
				limit = {
					NOT = {
						has_trait = maimed
					}
				}
				add_trait = maimed
			}
			else = {
				add_health = -25
			}
		}
		hidden_effect = {
			trigger_event = {
				on_action = plot_events_final
				days = { 30 60 }
			}
		}
	}
	
	option = {
		name = "ip_monarchy.8.b"
		scope:plot_target = {
			if = {
				limit = {
					NOT = {
						has_trait = wounded
					}
				}
				add_trait = wounded
			}
			else_if = {
				limit = { 
					NOT = {
						has_trait = maimed
					}
				}
				add_trait = maimed
			}
			else = {
				add_health = -25
			}
			hidden_effect = {
				trigger_event = {
					on_action = plot_events_final
					days = { 30 60 }
				}
			}
		}
	}
}

ip_monarchy.9 = { #Intermediary 3 - Appeals to the king for recognition
	type = country_event
	title = "ip_monarchy.9.t"
	desc = "ip_monarchy.9.desc"
	picture = senator_conversing
	
	left_portrait = root.current_ruler
	left_portrait = scope:plot_target
	right_portrait = scope:plotting_pretender
	
	trigger = {
		exists = current_ruler
		exists = scope:plot_target
		exists = scope:plotting_pretender
		scope:plotting_pretender = {
			is_valid_plotter = yes
		}
		has_land = yes
	}

	immediate = {
		
	}
	
	option = {
		name = "ip_monarchy.9.a"
		if = {
			limit = {
				any_owned_province = {
					NOT = {
						has_province_modifier = plot_palace_gift
					}
				}
			}
			add_treasury = {
				value = 0
				subtract = root.has_monthly_income
				multiply = 3
			}
			random_owned_province = {
				add_province_modifier = {
					name = plot_palace_gift
					duration = -1
				}
			}
			scope:plotting_pretender = {
				add_loyalty = loyalty_plot_appeal_granted
			}
			scope:plot_target = {
				add_loyalty = loyalty_plot_appeal_jealousy
			}
		}
		end_plot_event_chain_effect = yes
	}
	
	option = {
		name = "ip_monarchy.9.b"
		add_treasury = {
			value = 0
			subtract = root.has_monthly_income
			multiply = 3
		}
		scope:plotting_pretender = {
			add_loyalty = loyalty_plot_appeal_token
		}
		hidden_effect = {
			trigger_event = {
				on_action = plot_events_final
				days = { 30 60 }
			}
		}
	}
	
	option = {
		name = "ip_monarchy.9.c"
		highlight = yes
		exclusive = yes
		trigger = {
			current_ruler = {
				has_trait = arbitrary
			}
		}
		custom_tooltip = "arbitrary_bad_tooltip"
		if = {
			limit = {
				any_owned_province = {
					NOT = {
						has_province_modifier = plot_palace_gift
					}
				}
			}
			add_treasury = {
				value = 0
				subtract = root.has_monthly_income
				multiply = 3
			}
			random_owned_province = {
				add_province_modifier = {
					name = plot_palace_gift
					duration = -1
				}
			}
			scope:plotting_pretender = {
				add_loyalty = loyalty_plot_appeal_granted
			}
			scope:plot_target = {
				add_loyalty = loyalty_plot_appeal_jealousy
			}
		}
		end_plot_event_chain_effect = yes
	}
	
	option = {
		name = "ip_monarchy.9.d"
		scope:plotting_pretender = {
			add_loyalty = loyalty_plot_appeal_insulted
		}
		set_variable = {
			name = plot_insult
		}
		hidden_effect = {
			trigger_event = {
				on_action = plot_events_final
				days = { 30 60 }
			}
		}
	}
	
}

ip_monarchy.10 = { #Intermediary 4 - Plotters disagree
	type = country_event
	title = "ip_monarchy.10.t"
	desc = "ip_monarchy.10.desc"
	picture = revolt
	
	left_portrait = scope:plotting_pretender
	right_portrait = scope:plotting_pretender_2
	
	trigger = {
		exists = current_ruler
		exists = scope:plotting_pretender
		exists = scope:plotting_pretender_2
		scope:plotting_pretender = {
			is_valid_plotter = yes
		}
		scope:plotting_pretender_2 = {
			is_valid_plotter = yes
		}
		has_land = yes
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			factor = 2
			scope:plotting_pretender_2 = {
				is_rival = scope:plotting_pretender
			}
		}
	}
	
	immediate = {
		
	}
	
	option = {
		name = "ip_monarchy.10.a"
		add_political_influence = subtract_influence_medium
		scope:plotting_pretender = {
			add_loyalty = loyalty_infighting_stopped
		}
		scope:plotting_pretender_2 = {
			add_loyalty = loyalty_infighting_stopped
		}
		hidden_effect = {
			trigger_event = {
				on_action = plot_events_final
				days = { 30 60 }
			}
		}
	}
	
	option = {
		name = "ip_monarchy.10.b"
		custom_tooltip = "ip_monarchy_10_b_tooltip"
		trigger_event = {
			on_action = pretenders_battling
			days = { 30 600 }
		}
	}
	
	option = {
		name = "ip_monarchy.10.c"
		highlight = yes
		trigger = {
			current_ruler = {
				has_trait = orator
			}
		}
		custom_tooltip = "orator_tooltip"
		scope:plotting_pretender = {
			add_loyalty = loyalty_infighting_stopped
		}
		scope:plotting_pretender_2 = {
			add_loyalty = loyalty_infighting_stopped
		}
		hidden_effect = {
			trigger_event = {
				on_action = plot_events_final
				days = { 30 60 }
			}
		}
	}
	
}

ip_monarchy.11 = { #Intermediary 4 - Plotters disagree
	type = country_event
	title = "ip_monarchy.11.t"
	desc = "ip_monarchy.11.desc"
	picture = throneroom
	
	left_portrait = scope:plotting_pretender
	right_portrait = scope:plotting_pretender_2
	
	trigger = {
		exists = current_ruler
		exists = scope:plotting_pretender
		exists = scope:plotting_pretender_2
		scope:plotting_pretender = {
			is_valid_plotter = yes
		}
		scope:plotting_pretender_2 = {
			is_valid_plotter = yes
		}
		has_land = yes
	}
	
	immediate = {
		if = {
			limit = {
				scope:plotting_pretender.martial > scope:plotting_pretender_2.martial
			}
			scope:plotting_pretender = {
				save_scope_as = ip_11_victor
			}
			scope:plotting_pretender_2 = {
				save_scope_as = ip_11_loser
			}
			clear_saved_scope = plotting_pretender_2
		}
		else_if = {
			limit = {
				scope:plotting_pretender.martial < scope:plotting_pretender_2.martial
			}
			scope:plotting_pretender_2 = {
				save_scope_as = ip_11_victor
			}
			scope:plotting_pretender = {
				save_scope_as = ip_11_loser
			}
			clear_saved_scope = plotting_pretender
		}
		else_if = {
			limit = {
				scope:plotting_pretender.finesse > scope:plotting_pretender_2.finesse
			}
			scope:plotting_pretender = {
				save_scope_as = ip_11_victor
			}
			scope:plotting_pretender_2 = {
				save_scope_as = ip_11_loser
			}
			clear_saved_scope = plotting_pretender_2
		}
		else = {
			scope:plotting_pretender_2 = {
				save_scope_as = ip_11_victor
			}
			scope:plotting_pretender = {
				save_scope_as = ip_11_loser
			}
			clear_saved_scope = plotting_pretender
		}
		hidden_effect = {
			random_list = {
				20 = {
					trigger = {
						3 < {
							value = 0
							add = scope:ip_11_victor.martial
							subtract = scope:ip_11_loser.martial
						}
					}
					set_variable = {
						name = temp_variable_ip_11
						value = 1
						days = 100
					}
				}
				20 = {
					trigger = {
						scope:ip_11_loser = {
							NOT = {
								has_trait = wounded
							}
						}
					}
					set_variable = {
						name = temp_variable_ip_11
						value = 2
						days = 100
					}
				}
				20 = {
					trigger = {
						scope:ip_11_loser = {
							NOT = {
								has_trait = maimed
							}
						}
					}
					set_variable = {
						name = temp_variable_ip_11
						value = 3
						days = 100
					}
				}
				20 = {
					trigger = {
						scope:ip_11_loser = {
							NOT = {
								has_trait = blind
							}
						}
					}
					set_variable = {
						name = temp_variable_ip_11
						value = 4
						days = 100
					}
				}
				20 = {
					trigger = {
						scope:ip_11_loser = {
							NOT = {
								has_trait = brain_damaged
							}
						}
					}
					set_variable = {
						name = temp_variable_ip_11
						value = 5
						days = 100
					}
				}
				20 = {
					trigger = {
						always = yes
					}
					set_variable = {
						name = temp_variable_ip_11
						value = 6
						days = 100
					}
				}
			}
		}	
	}
	
	option = {
		name = "ip_monarchy.11.a"
		if = {
			limit = {
				var:temp_variable_ip_11 = 1
			}
			scope:ip_11_loser = {
				death = {
					death_reason = death_successor_murder
				}
			}
		}
		else_if = {
			limit = {
				var:temp_variable_ip_11 = 2
			}
			scope:ip_11_loser = {
				add_trait = wounded
			}
		}
		else_if = {
			limit = {
				var:temp_variable_ip_11 = 3
			}
			scope:ip_11_loser = {
				add_trait = maimed
			}
		}
		else_if = {
			limit = {
				var:temp_variable_ip_11 = 4
			}
			scope:ip_11_loser = {
				if = {
					limit = { has_trait = one_eyed }
					remove_trait = one_eyed
					add_trait = blind
				}
				else = {
					add_trait = one_eyed
				}
			}
		}
		else_if = {
			limit = {
				var:temp_variable_ip_11 = 5
			}
			scope:ip_11_loser = {
				add_trait = brain_damaged
			}
		}
		else_if = {
			limit = {
				var:temp_variable_ip_11 = 6
			}
			scope:ip_11_loser = {
				if = {
					limit = { has_trait = one_eyed }
					remove_trait = one_eyed
					add_trait = blind
				}
				else_if = {
					limit = {
						has_trait = blind
					}
					add_health = -25
				}
				else = { add_trait = blind }
			}
		}
		scope:ip_11_victor = {
			add_popularity = popularity_medium
		}
		end_plot_event_chain_effect = yes
	}
	
}

ip_monarchy.12 = { #Final 1 - Poison!
	type = country_event
	title = "ip_monarchy.12.t"
	desc = "ip_monarchy.12.desc"
	picture = greek_court
	
	left_portrait = root.current_ruler
	left_portrait = scope:plot_target
	right_portrait = scope:plotting_pretender
	right_portrait = scope:plotting_pretender_2
	
	trigger = {
		exists = current_ruler
		exists = scope:plotting_pretender
		exists = scope:plot_target
		scope:plot_target = {
			is_alive = yes
			employer = root
		}
		scope:plotting_pretender = {
			is_valid_plotter = yes
		}
		has_variable = plot_type
		var:plot_type = flag:successor_murder
		has_land = yes
	}
	
	immediate = {
		if = {
			limit = {
				any_character = {
					has_office = office_physician
				}
			}
			random_character = {
				limit = {
					has_office = office_physician
				}
				save_scope_as = physician_in_waiting
			}
		}
	}
	
	option = {
		name = "ip_monarchy.12.a"
		trigger = {
			exists = scope:physician_in_waiting
		}
		scope:plot_target = {
			if = {
				limit = {
					NOT = {
						has_trait = brain_damaged
					}
				}
				add_trait = brain_damaged
			}
			else = {
				add_health = -10
			}
		}
		end_plot_event_chain_effect = yes
	}
	
	option = { 
		name = "ip_monarchy.12.b"
		add_stability_effect_small = yes
		random_list = {
			50 = { 
				scope:plot_target = {
					death = {
						death_reason = death_poisoning
					}
				}
			}
			50 = {}
		}
		end_plot_event_chain_effect = yes
	}
	
	option = {
		name = "ip_monarchy.12.c"
		current_ruler = {
			add_popularity = subtract_popularity_small
		}
		scope:plotting_pretender = {
			add_popularity = popularity_medium
			add_loyalty = loyalty_poisoner_vindicated
		}
		if = {
			limit = {
				exists = scope:plotting_pretender_2
			}
			scope:plotting_pretender_2 = {
				add_popularity = popularity_medium
				add_loyalty = loyalty_poisoned_abandoned
			}
		}
		scope:plot_target = {
			death = {
				death_reason = death_poisoning
			}
		}
		end_plot_event_chain_effect = yes
	}
	
}

# Asleep at the Wheel
ip_monarchy.13 = {
	type = country_event
	title = "ip_monarchy.13.t"
	desc = "ip_monarchy.13.desc"
	picture = greek_court
	
	left_portrait = current_ruler
	
	trigger = { # Is monarchy
		is_monarchy = yes
		has_land = yes
		NOT = { has_variable = mon_13_toggle }
		any_character = { # Pick slanderer, low loyalty rival or officer who is not rulers friend
			is_alive = yes
			loyalty <= 60
			OR = {
				is_rival = root.current_ruler
				OR = {
					has_any_office = yes
					is_general = yes
					is_admiral = yes
				}					
			}
			NOT = {
				is_friend = root.current_ruler
			}
		}
	}
	
	weight_multiplier = { # Current ruler actually lazy
		modifier = {
			factor = 10
			current_ruler = {
				char_is_bad_leader_trigger = yes
			}
		}
	}
	
	immediate = {
		set_variable = { # Toggle
			name = mon_13_toggle
			days = 5475 # 15 years
		}
		current_ruler = {
			save_scope_as = mon_13_ruler
		}
	}
	
	option = { # Laugh it off
		name = "ip_monarchy.13.a"
		trigger = { 
			current_ruler = { # Not lazy
				OR = {
					NOR = {
						char_is_bad_leader_trigger = yes
						has_trait = vengeful
					}
					has_trait = forgiving
				}
			}
		}
		current_ruler = { # Add popularity
			add_popularity = subtract_popularity_large
		}
		if = {
			limit = {
				NOT = {
					current_ruler = {
						has_trait = forgiving
					}
				}
				current_ruler = {
					number_of_personality_traits < max_number_of_traits_svalue
				}
			}
			random_list = { #
				50 = { 
					current_ruler = {
						add_trait = forgiving
					}
				}
				50 = {
				}
			}
		}
		if = {
			limit = {
				current_ruler = {
					has_trait = forgiving
				}
			}
			custom_tooltip = forgiving_bad_tooltip
		}
		ai_chance = { factor = 50 }
	}
	
	option = { # Find the slanderer
		name = "ip_monarchy.13.b"
		trigger = {
			current_ruler = { # Not lazy
				OR = {
					NOR = {
						char_is_bad_leader_trigger = yes
						has_trait = forgiving
					}
					has_trait = vengeful
				}
			}
		}
		current_ruler = {
			add_popularity = popularity_large
		}
		if = {
			limit = {
				NOT = {
					current_ruler = {
						has_trait = vengeful
					}
				}
				current_ruler = {
					number_of_personality_traits < max_number_of_traits_svalue
				}
			}
			random_list = {
				50 = { 
					current_ruler = {
						add_trait = vengeful
					}
				}
				50 = {
				}
			}
		}
		if = {
			limit = {
				current_ruler = {
					has_trait = vengeful
				}
			}
			custom_tooltip = vengeful_bad_tooltip
		}
		hidden_effect = {
			random_character = { # Pick slanderer and save scope
				limit = {
					loyalty <= 60
					OR = {
						is_rival = root.current_ruler
						OR = {
							has_any_office = yes
							is_general = yes
							is_admiral = yes
						}
					}
					NOT = {
						is_friend = root.current_ruler
					}
				}
				weight = {
					modifier = {
						factor = 10
						prominence >= 70
					}
					title_importance_modifier = yes
				}
				save_scope_as = ip_monarchy_14_antagonist
			}
		}
		ROOT = {
			trigger_event = { # Next event
				id = ip_monarchy.14
				days = { 30 90 } # 1 - 3 months
			}
		}
		custom_tooltip = ip_monarchy.13.bt
		ai_chance = { factor = 50 }
	}
	
	option = { # Lazy - chance of existential crisis
		name = "ip_monarchy.13.c"
		highlight = yes
		exclusive = yes
		trigger = { # Ruler lazy
			current_ruler = {
				OR = { 
					char_is_decent_trigger = yes
					char_is_clever_trigger = yes
				}
				OR = {
					char_is_bad_leader_trigger = yes
				}
			}
		}
		random_list = { # Ruler looks silly or bucks his ideas up
			50 = { 
				current_ruler = {
					add_popularity = subtract_popularity_large
				}
			}
			50 = {
				hidden_effect = {
					current_ruler = {
						set_variable = {
							name = ip_mon_13_trait_counter
							value = 1
						}
						ip_mon_13_negative_trait_effect = yes
					}	
				}
				custom_tooltip = "ip_monarchy.13.ct"
			}
		}
		ai_chance = { factor = 1 }
	} 
	
	option = { # Lazy - do nothing
		name = "ip_monarchy.13.d"
		highlight = yes
		exclusive = yes
		trigger = { # Ruler lazy
			current_ruler = {
				char_is_bad_leader_trigger = yes
				NOR = {
					char_is_decent_trigger = yes
					char_is_clever_trigger = yes
				}
			}
		}
		current_ruler = {
			add_popularity = subtract_popularity_large
		}
		ai_chance = { factor = 1 }
	}
	
	
}

# Asleep at the Wheel - Slanderer outcome
ip_monarchy.14 = {
	type = country_event
	title = "ip_monarchy.14.t"
	desc = "ip_monarchy.14.desc"
	picture = greek_court
	
	left_portrait = current_ruler
	right_portrait = scope:ip_monarchy_14_antagonist
	
	trigger = { # Picked find slanderer in previous event
		exists = scope:ip_monarchy_14_antagonist
		scope:ip_monarchy_14_antagonist = {
			is_alive = yes
			prisoner = no
			employer = root
		}
		exists = scope:mon_13_ruler
		scope:mon_13_ruler = {
			is_alive = yes
			employer = root
			is_ruler = yes
		}
		has_land = yes
	}
	
	option = { # Leave it at revealing slanderer's identity
		name = "ip_monarchy.14.a"
		scope:ip_monarchy_14_antagonist = {
			add_prominence = subtract_prominence_huge
			add_popularity = subtract_popularity_huge
			add_loyalty = loyalty_ruined_reputation
		}
	}
	
	option = { # Forgive slanderer
		name = "ip_monarchy.14.b"
		custom_tooltip = "forgiving_tooltip"
		trigger = { # If not rivals
			current_ruler = {
				has_trait = forgiving
				NOT = { is_rival = scope:ip_monarchy_14_antagonist }
			}
		}
		if = { # If can befriend, befriend
			limit = {
				current_ruler = {
					can_get_friends = yes
				}
				scope:ip_monarchy_14_antagonist = { can_get_friends = yes }
			}
			current_ruler = {
				add_friend = scope:ip_monarchy_14_antagonist 
			}
		}
		else = { # Ruler praised for his magnanimity
			current_ruler = {
				add_popularity = popularity_small
			}
		}
	}
	
	option = { # Execute slanderer
		name = "ip_monarchy.14.c"
		trigger = { # Already a bit of tyrant?
			OR = {
				tyranny >= 10
				current_ruler = {
					has_trait = vengeful
				}
			}
		}
		add_tyranny = tyranny_medium # Become even more of a tyrant
		hidden_effect = { # Slanderer is executed
			scope:ip_monarchy_14_antagonist = {
				death = { killer = root.current_ruler death_reason = death_execution }
			}
		}
		custom_tooltip = ip_monarchy.14.ct
		ai_chance = { factor = 50 }
	}
	
	option = { # Bribe slanderer
		name = "ip_monarchy.14.d"
		current_ruler = {
			add_corruption = corruption_medium
		}
		scope:ip_monarchy_14_antagonist = {
			add_loyalty = loyalty_schemer_corrupted
			add_corruption = corruption_large
		}
		add_treasury  = {
			value = root.has_monthly_income
			multiply = 0.5
		}
		ai_chance = { factor = 50 }
	}
}

# A Pragmatic Accession
ip_monarchy.15 = {
	type = country_event
	title = "ip_monarchy.15.t"
	picture = greek_court
	
	left_portrait = root.current_ruler
	right_portrait = scope:mon_15_plotter
	
	desc = {
		first_valid = {
			triggered_desc = { # Faltering ruler
				trigger = {
					current_ruler = {
						char_is_ill_trigger = yes
					}
				}
				desc = "ip_monarchy.15.desc_1"
			}
			triggered_desc = { # Healthy ruler
				trigger = {
					always = yes
				}
				desc = "ip_monarchy.15.desc_2"
			}
		}
	}
	
	trigger = { # Monarchy has bad/ill ruler, low legitimacy, and a wily disloyal successor
		is_monarchy = yes
		has_land = yes
		NOT = {
			has_variable = mon_15_toggle
		}
		current_ruler = {
			OR = {
				char_is_bad_leader_trigger = yes
				char_is_ill_trigger = yes
			}
		}
		legitimacy <= 80
		any_successor = {
			age >= 16
			loyalty <= 60
			prisoner = no
			char_is_clever_trigger = yes
			NOT = { has_any_illness_trigger = yes }
		}
	}
	
	immediate = {
		set_variable = {
			name = mon_15_toggle
			days = 3650 # 10 years
		}
		current_ruler = { # Save old ruler scope
			save_scope_as = old_ruler_mon_15
		}
		ordered_successor = { # Save relevant successor 
			limit = {
				#age >= 20
				loyalty <= 60
				prisoner = no
				char_is_clever_trigger = yes
				NOT = { has_any_illness_trigger = yes }
			}
			order_by = prominence
			max = 1
			check_range_bounds = no
			save_scope_as = mon_15_plotter
		}
		if = { # If chosen successor is not primary heir save primary heir scope for abdication
			limit = {
				scope:mon_15_plotter = {
					is_primary_heir = no
				}
			}
			root.primary_heir = {
				save_scope_as = mon_15_preferred_heir
			}
		}
	}
	
	option = { # Imprison plotter
		name = "ip_monarchy.15.a"
		hidden_effect = {
			scope:mon_15_plotter = {
				remove_all_offices = yes
			}
		}
		imprison = {
			target = scope:mon_15_plotter
		}
		remove_stability_effect = yes # Stability hit
	}
	
	option = { # Allow plotter to... plot
		name = "ip_monarchy.15.b"
		custom_tooltip = "ip_monarchy.15.bt"
		hidden_effect = { # Onaction Outcome decider
			root = {
				trigger_event = {
					on_action = plot_outcome_mon_15
					days = { 30 90 } # 1 - 3 months
				}
			}
		}
		add_legitimacy = subtract_legitimacy_medium # Gov allowing plots
	}
	
	option = { # Abdicate to primary heir
		name = "ip_monarchy.15.c"
		custom_tooltip = "ip_monarchy.15.ct"
		trigger = { # Current ruler nice guy or fatal illness
			current_ruler = {
				OR = {
					char_is_decent_trigger = yes
					char_is_good_leader_trigger = yes
				}
				OR = {
					has_any_fatal_ailment = yes
					has_any_plague_trigger = yes
				}
			}
		}
		if = { # If primary heir become ruler
			limit = {
				scope:mon_15_plotter = {
					is_primary_heir = yes
				}
			}
			set_as_ruler = scope:mon_15_plotter
		}
		else = { # Else primary heir become ruler
			set_as_ruler = scope:mon_15_preferred_heir
		}
		add_legitimacy = subtract_legitimacy_medium # King swapping
	}
}

# A Pragmatic Accession - Plotter Succeeds
ip_monarchy.16 = { 
	type = country_event
	title = "ip_monarchy.16.t"
	desc = "ip_monarchy.16.desc"
	picture = proscription
	
	left_portrait = scope:old_ruler_mon_15
	right_portrait = scope:mon_15_plotter
	
	trigger = { # Relevant characters still exist
		exists = scope:mon_15_plotter
		exists = current_ruler.preferred_heir
		scope:mon_15_plotter = {
			is_alive = yes
			employer = root
			prisoner = no
		}
		exists = scope:old_ruler_mon_15
		scope:old_ruler_mon_15 = {
			is_alive = yes
			is_ruler = yes
			employer = root
			prisoner = no
		}
		has_land = yes
	}

	immediate = {
		if = { # If chosen successor is not primary heir save primary heir scope for abdication
			limit = {
				scope:mon_15_plotter = {
					is_primary_heir = no
				}
				exists = current_ruler.preferred_heir
			}
			current_ruler = {
				preferred_heir = {
					save_scope_as = mon_15_preferred_heir
				}
			}
		}
	}
	
	option = { # To the dungeons
		name = "ip_monarchy.16.a" 
		set_as_ruler = scope:mon_15_plotter # Crown plotter
		imprison = { # Imprison old ruler
			target = scope:old_ruler_mon_15
		}
		add_legitimacy = subtract_legitimacy_huge # Legitimacy damaged
		add_tyranny = tyranny_small # Tyranny you don't say
	}
	
	option = { # CLean break with the past
		name = "ip_monarchy.16.b"
		set_as_ruler = scope:mon_15_plotter # Crown plotter
		scope:old_ruler_mon_15 = { # Old ruler executed
			death = {
				death_reason = death_execution
				killer = scope:mon_15_plotter
			}
		}
		remove_stability_effect = yes # Stab hit
		add_legitimacy = subtract_legitimacy_large # Legitimacy damaged
		add_tyranny = tyranny_medium # Tyranny gulp
	}
	
	option = { # Plotter is a good man...
		name = "ip_monarchy.16.c"
		custom_tooltip = ip_monarchy.16.ct
		highlight = yes
		trigger = { # Plotter not primary heir and a good guy greg
			scope:mon_15_plotter = {
				is_primary_heir = no
				OR = {
					char_is_decent_trigger = yes
					char_is_good_leader_trigger = yes
				}
			}
			scope:mon_15_preferred_heir = { # Primary heir exists
				exists = yes
				employer = root
				prisoner = no
			}
		}	
		set_as_ruler = scope:mon_15_preferred_heir # Crown primary heir
		remove_stability_effect = yes # stab hit
		add_legitimacy = subtract_legitimacy_medium # Legitimacy damaged less
	}

	option = { # Here ends the old dynasty
		name = "ip_monarchy.16.d"
		custom_tooltip = ip_monarchy.16.dt
		highlight = yes
		exclusive = yes
		trigger = { # Plotter cruel and not ruling family
			scope:mon_15_plotter = {
				trigger_if = {
					limit = {
						employer.current_ruler = {
							is_minor_character = no
						}
					}
					from_ruler_family = no
				}
				has_trait = cruel
			}
		}
		every_character = { # Kill all members of ruling family
			limit = {
				trigger_if = {
					limit = {
						employer.current_ruler = {
							is_minor_character = no
						}
					}
					from_ruler_family = yes
				}
				is_alive = yes
				employer = root
			}
			death = {
				death_reason = death_execution
				killer = scope:mon_15_plotter
			}
		}
		set_as_ruler = scope:mon_15_plotter # Crown plotter
		remove_stability_effect = yes # Stab hit
		add_legitimacy = subtract_legitimacy_huge # Legitimacy hit
		add_tyranny = tyranny_huge # Tyranny much wow
	}
	
	option = { # The plotter fell for it
		name = "ip_monarchy.16.e"
		scope:mon_15_plotter = { # Kill plotter
			death = {
				death_reason = death_execution
				killer = root.current_ruler
			}
		}
		add_tyranny = tyranny_medium # Tyranny better watch ourselves
	}
}

# A Pragmatic Accession - Resolution II
ip_monarchy.17 = { # Plot Discovered
	type = country_event
	title = "ip_monarchy.17.t"
	desc = "ip_monarchy.17.desc"
	picture = crucifixion
	
	left_portrait = current_ruler
	right_portrait = scope:mon_15_plotter
	
	trigger = { # Relevant scopes still exist
		exists = scope:mon_15_plotter
		scope:mon_15_plotter = {
			is_alive = yes
			employer = root
			prisoner = no
		}
		exists = scope:old_ruler_mon_15
		scope:old_ruler_mon_15 = {
			is_alive = yes
			is_ruler = yes
			employer = root
			prisoner = no
		}
		has_land = yes
	}
	
	option = { # Ever thus to plotters
		name = "ip_monarchy.17.a"
		scope:mon_15_plotter = { # Plotter executed
			death = {
				death_reason = death_execution
				killer = root.current_ruler
			}
		}
	}
		
	option = { # Fools deserve mercy
		name = "ip_monarchy.17.b"
		highlight = yes
		trigger = { # Ruler not twisted
			current_ruler = {
				OR = {
					char_is_decent_trigger = yes
					char_is_good_leader_trigger = yes
				}
			}
		}
		imprison = { # Imprison plotter
			target = scope:mon_15_plotter
		}
		add_tyranny = subtract_tyranny_large # Clemency 
	}
	
	option = { # Ha let the scamp go
		name = "ip_monarchy.17.c"
		current_ruler = { # Ruler popularity damaged
			add_popularity = subtract_popularity_small
		}
		scope:mon_15_plotter = { # Plotter very impressed
			add_loyalty = loyalty_plot_laughed_off
		}
		add_legitimacy = subtract_legitimacy_small # Legitimacy you let a plotter go?
	}
}

# Of Tyrant Kings
ip_monarchy.18 = {
	type = country_event
	title = "ip_monarchy.18.t"
	picture = greek_court
	
	left_portrait = root.current_ruler
	right_portrait = scope:mon_18_plotter
	
	desc = {
		first_valid = {
			triggered_desc = { # Plotter is successor
				trigger = {
					scope:mon_18_plotter = {
						is_successor = yes
					}
				}
				desc = "ip_monarchy.18.desc_1"
			}
			triggered_desc = { # Plotter not successor
				trigger = {
					always = yes
				}
				desc = "ip_monarchy.18.desc_2"
			}
		}
	}
	
	trigger = { # Monarchy has tyranny and low legitimacy, low loyalty successor or officer with good traits exists, at least 3 characters with low loyalty
		NOT = {
			has_variable = mon_18_toggle
		}
		tyranny >= 15
		is_monarchy = yes
		has_land = yes
		legitimacy <= 80
		any_character = {
			is_alive = yes
			prisoner = no
			is_adult = yes
			OR = {
				is_successor = yes
				OR = {
					has_any_office = yes
					is_general = yes
					is_admiral = yes
				}
			}
			loyalty <= 60
			OR = {
				char_is_decent_trigger = yes
				char_is_good_leader_trigger = yes
				char_is_clever_trigger = yes
			}
			NOT = { has_any_illness_trigger = yes }
		}
	}
	
	immediate = {
		set_variable = { # Toggle
			name = mon_18_toggle
			days = 3650 # 10 years
		}
		current_ruler = { # save ruler scope
			save_scope_as = old_ruler_mon_18
		}
		random_character = { # Save plotter
            limit = {
				is_alive = yes
                is_adult = yes
                prisoner = no
                OR = {
                    is_successor = yes
                    OR = {
                        has_any_office = yes
                        is_general = yes
                        is_admiral = yes
                    }
                }
                loyalty <= 60
                OR = {
                    char_is_decent_trigger = yes
                    char_is_good_leader_trigger = yes
                    char_is_clever_trigger = yes
                }
                NOT = { has_any_illness_trigger = yes }
            }
            weight = {
                modifier = {
                    factor = 10
                    prominence >= 70
                }
                title_importance_modifier = yes
				 modifier = {
                    factor = 100
                    NOT = { is_primary_heir = yes }
                }
            }
            save_scope_as = mon_18_plotter
        }
	}
	
	option = { # Treason won't be contemplated
		name = "ip_monarchy.18.a"
		hidden_effect = { # Fire plotter
			scope:mon_18_plotter = {
				remove_all_offices = yes
			}
		}
		imprison = { # Imprison plotter
			target = scope:mon_18_plotter
		}
		add_tyranny = tyranny_medium # Tyranny didn't want to fight tyranny
		remove_stability_effect = yes # Stab hit
	}
	
	option = { # Desperate times...
		name = "ip_monarchy.18.b"
		custom_tooltip = ip_monarchy.18.bt
		hidden_effect = { # Plot goes forward onaction
			trigger_event = {
				on_action = plot_outcome_mon_18
				days = { 20 40 } # ~1 month
			}
		}
	}
}

# Of Tyrant Kings - Ultimatum
ip_monarchy.19 = { # Plot Succeeds...
	type = country_event
	title = "ip_monarchy.19.t"
	desc = "ip_monarchy.19.desc"
	picture = proscription
	
	left_portrait = scope:old_ruler_mon_18
	right_portrait = scope:mon_18_plotter
	right_portrait = scope:mon_18_plotter_2
	right_portrait = scope:mon_18_plotter_3
	
	trigger = { # Relevant scopes still exist
		has_land = yes
		exists = scope:old_ruler_mon_18
		exists = scope:mon_18_plotter
		scope:old_ruler_mon_18 = {
			is_alive = yes
			employer = root
			is_ruler = yes
			prisoner = no
		}
		scope:mon_18_plotter = {
			is_alive = yes
			employer = root
			is_ruler = no
			prisoner = no
		}
		any_character = {
			count >= 2
			is_ruler = no
			is_alive = yes
			prisoner = no
			is_adult = yes
			loyalty <= 60
			NOR = {
				is_primary_heir = yes
				this = root.current_ruler.spouse
				has_any_illness_trigger = yes 
			}
		}
	}
	
	immediate = {
		if = {
			limit = {
				any_character = {
					is_ruler = no
					is_alive = yes
					prisoner = no
					is_adult = yes
					loyalty <= 60
					NOR = {
						is_primary_heir = yes
						this = root.current_ruler.spouse
						this = scope:old_ruler_mon_18
						this = scope:mon_18_plotter 
						has_any_illness_trigger = yes 
					}
				}
			}
			random_character = { # Save second plotter
				limit = {
					is_ruler = no
					is_alive = yes
					is_adult = yes
					prisoner = no
					loyalty <= 60
					NOR = {
						is_primary_heir = yes
						this = root.current_ruler.spouse
						this = scope:old_ruler_mon_18
						this = scope:mon_18_plotter 
						has_any_illness_trigger = yes 
					}
				}
				weight = {
					modifier = {
						factor = 10
						prominence >= 70
					}
					modifier = {
						factor = 10
						has_any_office = yes
					}
					title_importance_modifier = yes
				}
				save_scope_as = mon_18_plotter_2
			}
		}
		if = {
			limit = {
				exists = scope:mon_18_plotter_2
				any_character = {
					is_ruler = no
					is_alive = yes
					prisoner = no
					is_adult = yes
					loyalty <= 60
					NOR = {
						is_primary_heir = yes
						this = root.current_ruler.spouse
						this = scope:old_ruler_mon_18
						this = scope:mon_18_plotter 
						this = scope:mon_18_plotter_2 
						has_any_illness_trigger = yes 
					}
				}
			}
			random_character = { # Save third plotter
				limit = {
					is_ruler = no
					is_alive = yes
					is_adult = yes
					prisoner = no
					loyalty <= 60
					NOR = {
						is_primary_heir = yes
						this = root.current_ruler.spouse
						this = scope:old_ruler_mon_18
						this = scope:mon_18_plotter
						this = scope:mon_18_plotter_2
						has_any_illness_trigger = yes 
					}
				}
				weight = {
					modifier = {
						factor = 10
						prominence >= 70
					}
					modifier = {
						factor = 10
						has_any_office = yes
					}
					title_importance_modifier = yes
				}
				save_scope_as = mon_18_plotter_3
			}
		}
		if = { # Save primary heir if plotter is not it
			limit = {
				scope:mon_18_plotter = {
					is_primary_heir = no
				}
			}
			root.primary_heir = {
				save_scope_as = mon_18_preferred_heir
			}
		}
	}
	
	option = { # To the dungeons
		name = "ip_monarchy.19.a"
		set_as_ruler = scope:mon_18_plotter # Plotter crowned
		imprison = { # Imprison old ruler
			target = scope:old_ruler_mon_18
		}
		add_tyranny = subtract_tyranny_medium # Tyrant removed
		add_legitimacy = subtract_legitimacy_large # Swapping kings like socks
	}
	
	option = { # Clean break with past
		name = "ip_monarchy.19.b"
		trigger = {
			scope:mon_18_plotter = {
				NOT = { has_same_family = root.current_ruler }
			}
		}
		set_as_ruler = scope:mon_18_plotter # Plotter crowned
		scope:old_ruler_mon_18 = { # Old ruler executed
			death = {
				death_reason = death_execution
				killer = scope:mon_18_plotter
			}
		}
		hidden_effect = {
			every_character = { # Kill ruler's whole family
				limit = {
					trigger_if = {
						limit = {
							employer.current_ruler = {
								is_minor_character = no
							}
						}
						from_ruler_family = yes
					}
					is_alive = yes
					employer = root
				}
				death = {
					death_reason = death_execution
					killer = scope:mon_18_plotter
				}
			}
		}
		custom_tooltip = ip_monarchy.19.bt
		remove_stability_effect = yes # Stability hit
		add_tyranny = tyranny_large # Tyranny murdered a whole bunch of people
		add_legitimacy = subtract_legitimacy_huge # Legitimacy stole throne and even worse
	}
	
	option = { # Make primary heir ruler
		name = "ip_monarchy.19.c"
		custom_tooltip = ip_monarchy.19.ct
		highlight = yes
		trigger = { # Plotter is not primary heir and primary heir exists
			scope:mon_18_plotter = {
				is_primary_heir = no
				OR = {
					char_is_decent_trigger = yes
					char_is_good_leader_trigger = yes
				}
			}
			exists = scope:mon_18_preferred_heir
		}	
		set_as_ruler = scope:mon_18_preferred_heir # Crown primary heir
		add_stability_effect = yes # stability offset
		add_legitimacy = legitimacy_large # Legitimate heir of tyrant
	}

	option = { # He's got a knife!
		name = "ip_monarchy.19.d"
		custom_tooltip = ip_monarchy.19.dt
		trigger = { # Male ruler is lunatic or reckless and has some martial
			current_ruler = {
				is_female = no
				OR = {
					has_trait = lunatic
					has_trait = reckless
				}
				martial >= 5
			}
		}
		exclusive = yes
		mon_18_mad_melee_effect = yes
		add_tyranny = subtract_tyranny_large # Tyranny got rid of tyrant
		add_legitimacy = legitimacy_medium # Legitimacy tyrant really was a piece of work
	}
	
	option = { # Betray traitors
		name = "ip_monarchy.19.e"
		scope:mon_18_plotter = { # Plotter 1 dies
			death = {
				death_reason = death_execution
				killer = root.current_ruler
			}
		}
		if = {
			limit = { exists = scope:mon_18_plotter_2 }
			scope:mon_18_plotter_2 = { # Plotter 2 dies
				death = {
					death_reason = death_execution
					killer = root.current_ruler
				}
			}
		}
		if = {
			limit = { exists = scope:mon_18_plotter_3 }
			scope:mon_18_plotter_3 = { # Plotter 3 dies
				death = {
					death_reason = death_execution
					killer = root.current_ruler
				}
			}
		}
		add_tyranny = tyranny_medium # Tyranny oh wow		
	}
}

# Of Tyrant Kings - Resolution II
ip_monarchy.20 = { # Plot Discovered
	type = country_event
	title = "ip_monarchy.20.t"
	desc = "ip_monarchy.20.desc"
	picture = crucifixion
	
	left_portrait = scope:old_ruler_mon_18
	right_portrait = scope:mon_18_plotter
	right_portrait = scope:mon_18_plotter_2
	right_portrait = scope:mon_18_plotter_3
	
	trigger = { # Relevant scopes still exist
		has_land = yes
		exists = scope:old_ruler_mon_18
		exists = scope:mon_18_plotter
		scope:old_ruler_mon_18 = {
			is_alive = yes
			employer = root
			is_ruler = yes
			prisoner = no
		}
		scope:mon_18_plotter = {
			is_alive = yes
			is_ruler = no
			employer = root
			prisoner = no
		}
	}
	
	immediate = {
		if = {
			limit = {
				any_character = {
					is_ruler = no
					is_alive = yes
					prisoner = no
					is_adult = yes
					loyalty <= 60
					NOR = {
						is_primary_heir = yes
						this = root.current_ruler.spouse
						this = scope:old_ruler_mon_18
						this = scope:mon_18_plotter 
						has_any_illness_trigger = yes 
					}
				}
			}
			random_character = { # Save second plotter
				limit = {
					is_ruler = no
					is_alive = yes
					is_adult = yes
					prisoner = no
					loyalty <= 60
					NOR = {
						is_primary_heir = yes
						this = root.current_ruler.spouse
						this = scope:old_ruler_mon_18
						this = scope:mon_18_plotter 
						has_any_illness_trigger = yes 
					}
				}
				weight = {
					modifier = {
						factor = 10
						prominence >= 70
					}
					modifier = {
						factor = 10
						has_any_office = yes
					}
					title_importance_modifier = yes
				}
				save_scope_as = mon_18_plotter_2
			}
		}
		if = {
			limit = {
				exists = scope:mon_18_plotter_2
				any_character = {
					is_ruler = no
					is_alive = yes
					prisoner = no
					is_adult = yes
					loyalty <= 60
					NOR = {
						is_primary_heir = yes
						this = root.current_ruler.spouse
						this = scope:old_ruler_mon_18
						this = scope:mon_18_plotter 
						this = scope:mon_18_plotter_2 
						has_any_illness_trigger = yes 
					}
				}
			}
			random_character = { # Save third plotter
				limit = {
					is_ruler = no
					is_alive = yes
					is_adult = yes
					prisoner = no
					loyalty <= 60
					NOR = {
						is_primary_heir = yes
						this = root.current_ruler.spouse
						this = scope:old_ruler_mon_18
						this = scope:mon_18_plotter
						this = scope:mon_18_plotter_2
						has_any_illness_trigger = yes 
					}
				}
				weight = {
					modifier = {
						factor = 10
						prominence >= 70
					}
					modifier = {
						factor = 10
						has_any_office = yes
					}
					title_importance_modifier = yes
				}
				save_scope_as = mon_18_plotter_3
			}
		}
	}
	
	option = { # Treason = death
		name = "ip_monarchy.20.a"
		scope:mon_18_plotter = { # Plotter 1 dies
			death = {
				death_reason = death_execution
				killer = root.current_ruler
			}
		}
		if = {
			limit = { exists = scope:mon_18_plotter_2 }
			scope:mon_18_plotter_2 = { # Plotter 2 dies
				death = {
					death_reason = death_execution
					killer = root.current_ruler
				}
			}
		}
		if = {
			limit = { exists = scope:mon_18_plotter_3 }
			scope:mon_18_plotter_3 = { # Plotter 3 dies
				death = {
					death_reason = death_execution
					killer = root.current_ruler
				}
			}
		}
		add_tyranny = tyranny_medium
	}
	
	option = { # Mercy
		name = "ip_monarchy.20.b"
		highlight = yes
		trigger = {
			current_ruler = { # Ruler not that bad
				OR = {
					char_is_decent_trigger = yes
					char_is_good_leader_trigger = yes
				}
			}
		}
		custom_tooltip = "just_tooltip"
		current_ruler = { # Add popularity
			add_popularity = popularity_small
		}
		imprison = { # Imprison plotters
			target = scope:mon_18_plotter
		}
		if = {
			limit = { exists = scope:mon_18_plotter_2 }
			imprison = { target = scope:mon_18_plotter_2 }
		}
		if = {
			limit = { exists = scope:mon_18_plotter_3 }
			imprison = { target = scope:mon_18_plotter_3 }
		}
		add_tyranny = subtract_tyranny_large # Clemency
	}
}

# Peculating Offical I
ip_monarchy.21 = {
	type = character_event
	hidden = yes
	
	trigger = { # Wealthy subject of monarchy holds office
		employer = { 
			is_monarchy = yes
			has_land = yes
		}
		has_any_office = yes
		wealth >= peculating_cash_svalue
		is_ruler = no
		NOT = {
			has_variable = ip_monarchy_21_embezzler_toggle
		}
	}
	
	weight_multiplier = { # Has corrupt traits
		base = 1
		modifier = {
			factor = 2
			OR = {
				has_trait = miserly
				has_trait = crafty
				has_trait = selfish
				has_trait = deceitful
				has_trait = corrupt
			}
		} 
		modifier = {
			factor = 2
			prominence >= 70
		}
	}
	
	immediate = { # Save scope and trigger next event
		save_scope_as = ip_monarchy_22_embezzler_scope
		employer = {
			trigger_event = {
				id = ip_monarchy.22
				days = { 30 60 }
			}
		}
		set_variable = { # Toggle
			name = ip_monarchy_21_embezzler_toggle
			days = 3600
		}
	}
	
}

# Peculating Offical II
ip_monarchy.22 = {
	type = country_event
	title = "ip_monarchy.22.t"
	desc = "ip_monarchy.22.desc"
	picture = war_chest
	
	left_portrait = current_ruler
	right_portrait = scope:ip_monarchy_22_embezzler_scope
	
	trigger = { # Relevant character hasn't dropped dead
		is_monarchy = yes
		has_land = yes
		scope:ip_monarchy_22_embezzler_scope = {
			is_alive = yes
			employer = root
		}
	}
	
	option = { # They learned their lesson
		name = "ip_monarchy.22.a"
		trigger = {
			NOT = {
				current_ruler = { # is just
					OR = {
						char_is_decent_trigger = yes
						char_is_civic_trigger = yes
						char_is_religious_trigger = yes
					}
				}
			}
		} 
		scope:ip_monarchy_22_embezzler_scope = { # Grateful
			add_corruption = corruption_huge
			add_loyalty = loyalty_embezzler_forgiven
		}
		current_ruler = { # Supported corruption
			add_popularity = subtract_popularity_large
			add_corruption = corruption_large
		}
	}
	
	option = { # Recuperate losses
		name = "ip_monarchy.22.b"
		scope:ip_monarchy_22_embezzler_scope = {
			add_gold = {
				value = 0
				subtract = peculating_cash_svalue
			}
			add_loyalty = loyalty_embezzler_fine
			add_corruption = corruption_huge
		}
		current_ruler = { # Got something back
			add_popularity = subtract_popularity_medium
			add_corruption = corruption_medium
		}
		add_treasury = {
			value = 0
			add = has_monthly_income
			multiply = 6
		}
	}
	
	option = { # Fire officer
		name = "ip_monarchy.22.c"
		scope:ip_monarchy_22_embezzler_scope = { # Unhappy at loss of position
			remove_all_offices = yes
			add_gold = {
				value = 0
				subtract = peculating_cash_svalue
			}
			add_loyalty = loyalty_embezzler_fired
			add_corruption = corruption_huge
		}
		current_ruler = {
			add_popularity = popularity_medium # Punished
		}
		add_treasury = {
			value = 0
			add = has_monthly_income
			multiply = 6
		}
	}
	
	option = { # Imprison
		name = "ip_monarchy.22.d"
		custom_tooltip = "ip_monarchy.22.dt"
		highlight = yes
		trigger = { 
			current_ruler = { # is just
				OR = {
					char_is_decent_trigger = yes
					char_is_civic_trigger = yes
					char_is_religious_trigger = yes
				}
			}
			scope:ip_monarchy_22_embezzler_scope = {
				trigger_if = {
					limit = {
						employer.current_ruler = {
							is_minor_character = no
						}
					}
					from_ruler_family = no
				}
				trigger_else = { always = yes }
			}
		} 
		ai_chance = {
			factor = 0
		}
		imprison = { # Imprison
			target = scope:ip_monarchy_22_embezzler_scope
		}
		scope:ip_monarchy_22_embezzler_scope = {
			add_gold = {
				value = 0
				subtract = peculating_cash_svalue
				multiply = 2
			}
			add_loyalty = loyalty_embezzler_imprisoned
			add_corruption = corruption_huge
		}
		current_ruler = {
			add_popularity = popularity_huge # Punished alot
		}
		add_treasury = {
			value = 0
			add = has_monthly_income
			multiply = 12
		}
		add_tyranny = tyranny_medium # Harsh
		
	}
	
	option = { # What vim!
		name = "ip_monarchy.22.e"
		custom_tooltip = ip_monarchy.22.et
		highlight = yes
		trigger = { # Ruler is bad guy
			current_ruler = {
				OR = {
					has_trait = miserly
					has_trait = crafty
					has_trait = selfish
					has_trait = deceitful
					has_trait = corrupt
				}
				NOT = {
					is_friend = scope:ip_monarchy_22_embezzler_scope
				}
			}
		}
		scope:ip_monarchy_22_embezzler_scope = {
			add_corruption = corruption_huge
			add_loyalty = loyalty_embezzler_congratulated
		}
		current_ruler = { # Learns to embezzle and befriends 
			add_gold = {
				value = 0
				add = peculating_cash_svalue
				multiply = 2.5
			}
			add_corruption = corruption_large
			add_popularity = subtract_popularity_huge
			add_friend = scope:ip_monarchy_22_embezzler_scope
		}
	}
	
	option = { # High fives friend
		name = "ip_monarchy.22.f"
		custom_tooltip = ip_monarchy.22.ft
		highlight = yes
		trigger = { # Is friends
			current_ruler = {
				is_friend = scope:ip_monarchy_22_embezzler_scope
			}
		}
		scope:ip_monarchy_22_embezzler_scope = { # Happy
			add_corruption = corruption_huge
			add_loyalty = loyalty_embezzler_congratulated
		}
		current_ruler = { # Share of money
			add_gold = {
				value = 0
				add = peculating_cash_svalue
				multiply = 3.5
			}
			add_corruption = corruption_large
			add_popularity = subtract_popularity_huge
		}
	}
}

# Man of Action I
ip_monarchy.25 = {
	type = character_event
	hidden = yes
	
	trigger = {
		root.employer = { 
			NOT = { has_variable = mon_25_toggle }
			is_monarchy = yes
			has_land = yes
		}
		is_ruler = no
		OR = {
			is_general = yes
			is_admiral = yes
		}
		OR = {
			has_trait = jealous
			has_trait = coward
			has_trait = suspicious 
			has_trait = sceptical
			has_trait = vengeful
		}
		NOT = {
			is_friend = root.employer.current_ruler
		}
		loyalty <= 60
		martial >= 5
	}
	
	immediate = {
		save_scope_as = ip_monarchy_25_general_scope
		root.employer = {
			set_variable = {
				name = mon_25_toggle
				days = 18250 # 50 years
			}
			trigger_event = {
				id = ip_monarchy.26
			}
		}
	}
}

# Man of Action II
ip_monarchy.26 = {
	type = country_event
	title = "ip_monarchy.26.t"
	desc = "ip_monarchy.26.desc"
	picture = throneroom
	
	left_portrait = root.current_ruler
	right_portrait = scope:ip_monarchy_25_general_scope

	trigger = {
		is_monarchy = yes
		has_land = yes
		scope:ip_monarchy_25_general_scope = {
			is_alive = yes
			employer = root
		}
	}
	
	immediate = {
		if = {
			limit = {
				any_neighbour_country = {
					count >= 1
				}
			}	
			random_neighbour_country = {
				save_scope_as = ip_monarchy_25_neighbor_scope
			}
		}
		else = {
			if = {
				limit = {
					any_country = {
						in_diplomatic_range = root
					}
				}
				random_country = {
					limit = {
						in_diplomatic_range = root
					}
					save_scope_as = ip_monarchy_25_neighbor_scope
				}
			}
		}
	}
		
	option = { # Remove Generalship
		name = "ip_monarchy.26.a"
		trigger = {
			scope:ip_monarchy_25_general_scope = {
				num_loyal_cohorts < 5
			}
		}
		scope:ip_monarchy_25_general_scope = {
			add_loyalty = loyalty_general_relieved
			remove_command = yes
		}
		add_tyranny = tyranny_medium
	}
	
	option = { # Imprison
		name = "ip_monarchy.26.b"
		scope:ip_monarchy_25_general_scope = {
			add_loyalty = loyalty_general_imprisoned
			hidden_effect = {
				remove_command = yes
			}
		}
		if = {
			limit = {
				OR = {
					any_neighbour_country = { count >= 1 }
					any_country = { in_diplomatic_range = root } 
				}
				scope:ip_monarchy_25_general_scope = {
					OR = {
						wealth >= 500
						power_base >= 50
					}
				}
			}
			scope:ip_monarchy_25_general_scope = { banish = scope:ip_monarchy_25_neighbor_scope }
			custom_tooltip = ip_monarchy.26.bt
		}
		else = {
			imprison = { target = scope:ip_monarchy_25_general_scope }
		}
		add_tyranny = tyranny_large
	}
	
	option = { # Do Nothing
		name = "ip_monarchy.26.c"
		if = {
			limit = {
				current_ruler = { can_get_rivals = yes }
				scope:ip_monarchy_25_general_scope = { can_get_rivals = yes }
			}
			current_ruler = {
				add_rival = scope:ip_monarchy_25_general_scope
			}
		}
		scope:ip_monarchy_25_general_scope = {
			add_loyalty = loyalty_general_ignored
		}
		add_legitimacy = subtract_legitimacy_medium
	}
}

# Dynastic Desperation I
ip_monarchy.27 = {
	type = country_event
	title = "ip_monarchy.27.t"
	desc = "ip_monarchy.27.desc"
	picture = greek_court
	
	left_portrait = scope:mon_27_actor_scope
	right_portrait = scope:mon_27_target_scope
	
	trigger = {
		is_monarchy = yes
		has_land = yes
		NOT = { has_variable = mon_27_toggle }
		any_successor = {
			is_child_of = root.current_ruler
			age >= 20
			prisoner = no
			char_is_clever_trigger = yes
			NOT = { has_any_illness_trigger = yes }
			save_temporary_scope_as = half_sibling
			employer = {
				any_character = {
					is_child_of = root.current_ruler
					prisoner = no
					age <= 20
					OR = {
						AND = { 
							exists = this.mother 
							NOT = { this.mother = scope:half_sibling.mother }
						}
						AND = {
							exists = this.father 
							NOT = { this.father = scope:half_sibling.father }
						}
						AND = {
							exists = scope:half_sibling.mother
							NOT = { 
								exists = this.mother
							}
						}
						AND = {
							exists = scope:half_sibling.father
							NOT = { 
								exists = this.father
							}
						}
						AND = {
							exists = this.mother
							NOT = { 
								exists = scope:half_sibling.mother
							}
						}
						AND = {
							exists = this.father
							NOT = { 
								exists = scope:half_sibling.father
							}
						}
					}
				}
			}
		}
		any_neighbour_country = {
			count >= 1
		}
	}
	
	immediate = {
		set_variable = {
			name = mon_27_toggle
			days = 18250
		}
		random_successor = {
			limit = {
				is_child_of = root.current_ruler
				age >= 20
				prisoner = no
				char_is_clever_trigger = yes
				NOT = { has_any_illness_trigger = yes }
				save_temporary_scope_as = half_sibling
				employer = {
					any_character = {
						is_child_of = root.current_ruler
						prisoner = no
						age <= 20
						OR = {
							AND = { 
								exists = this.mother 
								NOT = { this.mother = scope:half_sibling.mother }
							}
							AND = {
								exists = this.father 
								NOT = { this.father = scope:half_sibling.father }
							}
							AND = {
								exists = scope:half_sibling.mother
								NOT = { 
									exists = this.mother
								}
							}
							AND = {
								exists = scope:half_sibling.father
								NOT = { 
									exists = this.father
								}
							}
							AND = {
								exists = this.mother
								NOT = { 
									exists = scope:half_sibling.mother
								}
							}
							AND = {
								exists = this.father
								NOT = { 
									exists = scope:half_sibling.father
								}
							}
						}
					}
				}
			}
			weight = {
				title_importance_modifier = yes
			}
			save_scope_as = mon_27_actor_scope
		}
		random_character = {
			limit = {
				prisoner = no
				age <= 20
				is_child_of = root.current_ruler
				prisoner = no
				OR = {
					AND = { 
						exists = this.mother 
						NOT = { this.mother = scope:mon_27_actor_scope.mother }
					}
					AND = {
						exists = this.father 
						NOT = { this.father = scope:mon_27_actor_scope.father }
					}
					AND = {
						exists = scope:mon_27_actor_scope.mother
						NOT = { 
							exists = this.mother
						}
					}
					AND = {
						exists = scope:mon_27_actor_scope.father
						NOT = { 
							exists = this.father
						}
					}
					AND = {
						exists = this.mother
						NOT = { 
							exists = scope:mon_27_actor_scope.mother
						}
					}
					AND = {
						exists = this.father
						NOT = { 
							exists = scope:mon_27_actor_scope.father
						}
					}
				}
			}
			weight = {
				modifier = {
					factor = 50
					is_male = yes
				}
				modifier = {
					factor = 40
					is_successor = yes
				}
				modifier = {
					factor = 25
					age <= 9
				}
			}
			save_scope_as = mon_27_target_scope
		}
		if = {
			limit = {
				any_neighbour_country = {
					count >= 1
				}
			}
			random_neighbour_country = {
				save_scope_as = ip_monarchy_27_neighbor_scope
			}
		}
		if = {
			limit = {
				scope:mon_27_actor_scope = { can_get_rivals = yes }
				scope:mon_27_target_scope = { can_get_rivals = yes }
			}
			scope:mon_27_actor_scope = {
				add_rival = scope:mon_27_target_scope
			}
		}
	}
	
	option = { # Imprison/Banish Pretender
		name = "ip_monarchy.27.a"
		scope:mon_27_actor_scope = {
			add_loyalty = loyalty_plot_publicized
		}
		if = {
			limit = {
				scope:mon_27_actor_scope = {
					OR = {
						wealth >= 500
						power_base >= 50
					}
				}
			}
			scope:mon_27_actor_scope = {
				remove_all_offices = yes
				banish = scope:ip_monarchy_27_neighbor_scope
			}
			custom_tooltip = ip_monarchy.27.at
		}
		else = {
			imprison = { target = scope:mon_27_actor_scope }
		}
		if = { 
			limit = {
				scope:mon_27_actor_scope.father = root.current_ruler
				exists = scope:mon_27_actor_scope.mother
				scope:mon_27_actor_scope.mother = {
					is_alive = yes
				}
			}
			scope:mon_27_actor_scope.mother = {
				add_loyalty = loyalty_plot_publicized_relative
			}
		}
		else_if = {
			limit = {
				scope:mon_27_actor_scope.mother = root.current_ruler
				exists = scope:mon_27_actor_scope.father
				scope:mon_27_actor_scope.father = {
					is_alive = yes
				}
			}
			scope:mon_27_actor_scope.mother = {
				add_loyalty = loyalty_plot_publicized_relative
			}
		}
		add_legitimacy = subtract_legitimacy_medium
		
	}
		
	option = { # Forbid This to Ever Happen
		name = "ip_monarchy.27.b"
		scope:mon_27_actor_scope = {
			add_loyalty = loyalty_bitter_plotter
		}
		if = { 
			limit = {
				scope:mon_27_actor_scope.father = root.current_ruler
				exists = scope:mon_27_actor_scope.mother
				scope:mon_27_actor_scope.mother = {
					is_alive = yes
					employer = root
				}
			}
			scope:mon_27_actor_scope.mother = {
				add_loyalty = loyalty_bitter_plotter_relative
			}
		}
		else_if = {
			limit = {
				scope:mon_27_actor_scope.mother = root.current_ruler
				exists = scope:mon_27_actor_scope.father
				scope:mon_27_actor_scope.father = {
					is_alive = yes
					employer = root
				}
			}
			scope:mon_27_actor_scope.mother = {
				add_loyalty = loyalty_bitter_plotter_relative
			}
		}
		add_political_influence = subtract_influence_small
	}
	
	option = { # Allow Plot...
		name = "ip_monarchy.27.c"
		custom_tooltip = "ip_monarchy.27.ct"
		hidden_effect = {
			trigger_event = {
				on_action = plot_outcome_mon_27
				days = { 20 40 } # ~1 month
			}
		}
		if = { 
			limit = {
				scope:mon_27_actor_scope.father = root.current_ruler
				exists = scope:mon_27_actor_scope.mother
				scope:mon_27_actor_scope.mother = {
					is_alive = yes
					employer = root
				}
			}
			scope:mon_27_actor_scope.mother = {
				add_loyalty = loyalty_plot_endorsed
			}
		}
		else_if = {
			limit = {
				scope:mon_27_actor_scope.mother = root.current_ruler
				exists = scope:mon_27_actor_scope.father
				scope:mon_27_actor_scope.father = {
					is_alive = yes
					employer = root
				}
			}
			scope:mon_27_actor_scope.mother = {
				add_loyalty = loyalty_plot_endorsed
			}
		}
	}
}

# Dynastic Desperation II
ip_monarchy.28 = { # Assassination goes forward
	type = country_event
	title = "ip_monarchy.28.t"
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					has_variable = botched_assassination_failure
				}
				desc = "ip_monarchy.28.desc_1"
			}
			triggered_desc = {
				trigger = {
					has_variable = botched_assassination_wound
				}
				desc = "ip_monarchy.28.desc_2"
			}
			triggered_desc = {
				trigger = {
					always = yes
				}
				desc = "ip_monarchy.28.desc_3"
			}
		}
	}
	picture = dagger_behind_back
	
	left_portrait = current_ruler
	right_portrait = scope:mon_27_actor_scope
	right_portrait = scope:mon_27_target_scope
	
	trigger = {
		is_monarchy = yes
		has_land = yes
		exists = scope:mon_27_actor_scope
		exists = scope:mon_27_target_scope
		scope:mon_27_actor_scope = {
			is_child_of = root.current_ruler
			is_alive = yes
			prisoner = no
			employer = root
		}
		scope:mon_27_target_scope = {
			is_child_of = root.current_ruler
			is_alive = yes
			prisoner = no
			employer = root
		}
	}
	
	immediate = {
		hidden_effect = {
			random_list = {
				25 = {
					set_variable = botched_assassination_wound
					modifier = {
						factor = 25
						scope:mon_27_target_scope = { finesse <= 6 }
					}
				}
				25 = {
					set_variable = botched_assassination_failure
					modifier = {
						factor = 25
						scope:mon_27_target_scope = { finesse <= 3 }
					}
				}
				50 = {
					set_variable = successful_assassination
					modifier = {
						factor = 25
						scope:mon_27_target_scope = { finesse >= 7 }
					}
				}
			}
		}
	}
	
	option = { # What a shame...
		name = "ip_monarchy.28.a"
		trigger = {
			has_variable = successful_assassination
		}
		scope:mon_27_target_scope = {
			death = {
				death_reason = death_poisoning
				killer = scope:mon_27_actor_scope
			}
		}
		remove_variable = successful_assassination
	}
	
	option = { # Can't he do anything right...
		name = "ip_monarchy.28.b"
		trigger = {
			has_variable = botched_assassination_wound
		}
		scope:mon_27_target_scope = {
			if = {
				limit = {
					NOT = {
						has_trait = wounded
					}
				}
				add_trait = wounded
			}
			else_if = {
				limit = {
					NOT = {
						has_trait = maimed
					}
				}
				add_trait = maimed
			}
			else = {
				add_health = -25
			}
		}
		imprison = {
			target = scope:mon_27_actor_scope
		}
		scope:mon_27_actor_scope = {
			add_popularity = subtract_popularity_huge
			add_corruption = corruption_huge
			add_loyalty = loyalty_botched_plotter_imprisoned
		}
		remove_variable = botched_assassination_wound
	}
	
	option = { # You've got to be joking
		name = "ip_monarchy.28.c"
		trigger = {
			has_variable = botched_assassination_failure
		}
		imprison = {
			target = scope:mon_27_actor_scope
		}
		scope:mon_27_actor_scope = {
			add_popularity = subtract_popularity_huge
			add_corruption = corruption_huge
			add_loyalty = loyalty_botched_plotter_imprisoned
		}
		remove_variable = botched_assassination_failure
	}

	option = { # Great, now lock him up
		name = "ip_monarchy.28.d"
		trigger = {
			has_variable = successful_assassination
		}
		scope:mon_27_target_scope = {
			death = {
				death_reason = death_successor_murder
				killer = scope:mon_27_actor_scope
			}
		}
		
		imprison = {
			target = scope:mon_27_actor_scope
		}
		scope:mon_27_actor_scope = {
			add_popularity = subtract_popularity_huge
			add_corruption = corruption_huge
			add_loyalty = loyalty_betrayed_plotter
		}
		remove_variable = successful_assassination
	}
}

# Dynastic Desperation III
ip_monarchy.29 = { # Plot Discovered
	type = country_event
	title = "ip_monarchy.29.t"
	desc = "ip_monarchy.29.desc"
	picture = crucifixion
	
	left_portrait = current_ruler
	right_portrait = scope:mon_27_actor_scope
	right_portrait = scope:mon_27_target_scope
	
	trigger = {
		is_monarchy = yes
		has_land = yes
		exists = scope:mon_27_actor_scope
		exists = scope:mon_27_target_scope
		scope:mon_27_actor_scope = {
			is_child_of = root.current_ruler
			is_alive = yes
			employer = root
			prisoner = no
		}
		scope:mon_27_target_scope = {
			is_child_of = root.current_ruler
			is_alive = yes
			employer = root
			prisoner = no
		}
	}
	
	option = { # Imprison Pretender
		name = "ip_monarchy.29.a"
		scope:mon_27_actor_scope = {
			death = {
				death_reason = death_execution
				killer = root.current_ruler
			}
		}
		add_tyranny = tyranny_medium
	}
		
	option = { # Execute Pretender
		name = "ip_monarchy.29.b"
		imprison = {
			target = scope:mon_27_actor_scope
		}
		scope:mon_27_actor_scope = { add_loyalty = loyalty_imprisoned_plotter }
		add_tyranny = tyranny_small
	}
		
	option = { # Do Nothing 
		name = "ip_monarchy.29.c"
		current_ruler = {
			add_popularity = subtract_popularity_medium
		}
		scope:mon_27_target_scope = { add_loyalty = loyalty_plotter_unpunished }
		add_legitimacy = subtract_legitimacy_small
	}
}

# The Brothers [GetFamily.GetName]
ip_monarchy.30 = {
	type = country_event
	title = "ip_monarchy.30.t"
	desc = "ip_monarchy.30.desc"
	picture = greek_court
	
	left_portrait = current_ruler
	right_portrait = scope:rival_brother_1
	right_portrait = scope:rival_brother_2
	
	trigger = {
		NOT = { has_variable = mon_30_cooldown }
		rival_brothers_trigger = yes # Two rulers sons, siblings, can get rivals
	}
	
	immediate = {
		set_variable = { name = mon_30_cooldown days = 3650 } # 10 years toggle
		rival_brothers_scope_effect = yes
		if = {
			limit = {
				scope:rival_brother_1 = { 
					can_get_rivals = yes 
					NOT = { is_rival = scope:rival_brother_2 }
				}
				scope:rival_brother_2 = { can_get_rivals = yes }
			}
			scope:rival_brother_1 = {
				add_rival = scope:rival_brother_2
			}
		}
	}
	
	option = { # Support 1
		name = "ip_monarchy.30.a"
		scope:rival_brother_1 = { # 1st bro happy and favored
			add_loyalty = loyalty_supported_heir
			if = {
				limit = { 
					NOT = { this = root.primary_heir }
				}
				add_character_modifier = {
					name = character_ip_mon_supported_heir_modifier # 20 heir support
					duration = 1825 # 5 years
				}
			}
		}
		scope:rival_brother_2 = { # 2nd bro unhappy
			add_loyalty = loyalty_unsupported_heir
		}
		add_legitimacy = subtract_legitimacy_medium # Legitimacy confused
		hidden_effect = {
			trigger_event = {
				on_action = brothers_events
				days = { 30 60 }
			}
		}
	}
	
	option = { # Support 2
		name = "ip_monarchy.30.b"
		scope:rival_brother_2 = { # 2nd bro happy and favored
			add_loyalty = loyalty_supported_heir
			if = {
				limit = { 
					NOT = { this = root.primary_heir }
				}
				add_character_modifier = {
					name = character_ip_mon_supported_heir_modifier # 20 heir support
					duration = 1825 # 5 years
				}
			}
		}
		scope:rival_brother_1 = { # 1st bro unhappy
			add_loyalty = loyalty_unsupported_heir
		}
		add_legitimacy = subtract_legitimacy_medium # Legitimacy confused
		hidden_effect = {
			trigger_event = {
				on_action = brothers_events
				days = { 30 60 }
			}
		}
	}
	
	option = { # Foolishness
		name = "ip_monarchy.30.c"
		trigger = { # Ruler not bitter and twisted
			current_ruler =  {
				NOR = {
					has_trait = uncaring
					has_trait = arbitrary
					has_trait = cruel
					has_trait = harsh
					has_trait = lunatic
					has_trait = cold
					has_trait = suspicious
				}
			}
		}
		scope:rival_brother_1 = { # 1st bro disappointed and insulted
			add_loyalty = loyalty_scolded_rivals
		}
		scope:rival_brother_2 = { # 2nd bro disappointed and insulted
			add_loyalty = loyalty_scolded_rivals
		}
		add_legitimacy = legitimacy_small # Legitimacy shown
		hidden_effect = {
			trigger_event = {
				on_action = brothers_events
				days = { 30 60 }
			}
		}
	}
}
	
# Spears at Dawn
ip_monarchy.31 = {
	type = country_event
	title = "ip_monarchy.31.t"
	desc = {
		first_valid = {
			triggered_desc = { # Duel survival
				trigger = {
					NOR = {
						has_variable = rival_brothers_death
						has_variable = rival_brothers_wound
					}
				}
				desc = "ip_monarchy.31.desc_1"
			}
			triggered_desc = { # Duel wound
				trigger = {
					NOT = {
						has_variable = rival_brothers_death
					}
					has_variable = rival_brothers_wound
				}
				desc = "ip_monarchy.31.desc_2"
			}
			triggered_desc = { # Duel death
				trigger = {
					always = yes
				}
				desc = "ip_monarchy.31.desc_3"
			}
		}
	}
	picture = gladiators
	
	left_portrait = current_ruler
	right_portrait = scope:rival_brother_1
	right_portrait = scope:rival_brother_2
	
	trigger = {
		rival_brothers_scope_trigger = yes # Brothers still around
		NOT = { has_variable = rival_brother_duel_cooldown }
	}	
		
	immediate = {
		set_variable = {
			name = rival_brother_duel_cooldown
			days = 730 # 2 years
		}
		rival_brothers_duel_effect = yes # Decide victor
		rival_brothers_duel_outcome_effect = yes # Add effects based on who won/lost
	}
	
	option = { # Legitimize
		name = "ip_monarchy.31.a"
		scope:rival_brothers_victor = { add_loyalty = loyalty_victory_supported } # Victor happy
		if = { # If alive loser unhappy
			limit = { 
				NOT = { has_variable = rival_brothers_death }
			}
			scope:rival_brothers_loser = { add_loyalty = loyalty_defeat_supported }
			hidden_effect = {
				trigger_event = {
					on_action = brothers_events
					days = { 30 60 }
				}
			}
		}
		add_legitimacy = subtract_legitimacy_medium # Legitimacy wanes
	}
	
	option = { # Distance from ruler
		name = "ip_monarchy.31.b"
		scope:rival_brothers_victor = { add_loyalty = loyalty_victory_unsupported } # Victor unhappy
		if = { # If loser alive add loyalty
			limit = { 
				NOT = { has_variable = rival_brothers_death }
			}
			scope:rival_brothers_loser = { add_loyalty = loyalty_defeat_unsupported }
			hidden_effect = {
				trigger_event = {
					on_action = brothers_events
					days = { 30 60 }
				}
			}
		}
		random_character = {
			limit = { 
				OR = {
					this = scope:rival_brothers_victor
					this = scope:rival_brothers_loser
				}
				is_alive = yes
				has_character_modifier = character_ip_mon_supported_heir_modifier
			}
			remove_character_modifier = character_ip_mon_supported_heir_modifier
		}
		add_legitimacy = legitimacy_small # Legitimacy shown
	}
	
	option = { # Imprison both if possible
		name = "ip_monarchy.31.c"
		trigger = { # If a brother is wounded or dead
			OR = {
				has_variable = rival_brothers_death
				has_variable = rival_brothers_wound
			}
		}
		if = { # If loser alive
			limit = { 
				has_variable = rival_brothers_wound
				scope:rival_brothers_loser = { is_alive = yes }
			}
		}
		scope:rival_brothers_victor = { add_loyalty = loyalty_duel_shunned } # Victor unhappy
		random_character = {
			limit = { 
				OR = {
					this = scope:rival_brothers_victor
					this = scope:rival_brothers_loser
				}
				is_alive = yes
				has_character_modifier = character_ip_mon_supported_heir_modifier
			}
			remove_character_modifier = character_ip_mon_supported_heir_modifier
		}
		if = { # If loser alive imprison both
			limit = { 
				has_variable = rival_brothers_wound
			}
			imprison = {
				target = scope:rival_brothers_victor
			}
			if = {
				limit = {
					scope:rival_brothers_loser = {
						is_alive = yes
					}
				}
				imprison = {
					target = scope:rival_brothers_loser
				}
			}
		}
		else = { # If loser killed imprison victor
			imprison = {
				target = scope:rival_brothers_victor
			}
		}
		remove_brothers_variables_effect = yes
	}
}

# Assassination
ip_monarchy.32 = {
	type = country_event
	title = "ip_monarchy.32.t"
	desc = {
		first_valid = {
			triggered_desc = { # Assassin botched
				trigger = {
					NOR = {
						has_variable = rival_brothers_wound
						has_variable = rival_brothers_death
					}
				}
				desc = "ip_monarchy.32.desc_1"
			}
			triggered_desc = { # Assassin wounds
				trigger = {
					NOT = { has_variable = rival_brothers_death }
					has_variable = rival_brothers_wound
				}
				desc = "ip_monarchy.32.desc_2"
			}
			triggered_desc = { # Assassin kills
				trigger = {
					always = yes
				}
				desc = "ip_monarchy.32.desc_3"
			}
		}
	}
	picture = dagger_behind_back
	
	left_portrait = current_ruler
	right_portrait = scope:rival_brother_1
	right_portrait = scope:rival_brother_2
	
	trigger = {
		rival_brothers_scope_trigger = yes # Rival successor brothers exist
		NOT = { has_variable = rival_brother_assassin_cooldown }
	}
	
	immediate = {
		set_variable = { # Toggle
			name = rival_brother_assassin_cooldown
			days = 730 # 2 years
		}
		rival_brothers_assassination_effect = yes # Decide assassin 
		rival_brothers_duel_outcome_effect = yes # Decide outcome
	}
	
	option = { # Legitimize act
		name = "ip_monarchy.32.a"
		if = { # If not killed, victim unhappy
			limit = { 
				NOT = { has_variable = rival_brothers_death }
			}
			scope:rival_brothers_loser = { add_loyalty = loyalty_assassination_legitimized_victim }
			hidden_effect = {
				trigger_event = {
					on_action = brothers_events
					days = { 30 60 }
				}
			}
		}
		scope:rival_brothers_victor = { add_loyalty = loyalty_assassination_legitimized_assassin } # Assassin happy
		add_legitimacy = subtract_legitimacy_medium # Legitimacy evaporates
	}
	
	option = { # Distance ruler
		name = "ip_monarchy.32.b"
		if = { # If not killed, victim happy
			limit = { 
				NOT = { has_variable = rival_brothers_death }
			}
			scope:rival_brothers_loser = { add_loyalty = loyalty_assassination_delegitimized_victim }
			hidden_effect = {
				trigger_event = {
					on_action = brothers_events
					days = { 30 60 }
				}
			}
		}
		scope:rival_brothers_victor = { add_loyalty = loyalty_assassination_delegitimized_assassin } # Victor unhappy
		random_character = {
			limit = { 
				OR = {
					this = scope:rival_brothers_victor
					this = scope:rival_brothers_loser
				}
				is_alive = yes
				has_character_modifier = character_ip_mon_supported_heir_modifier
			}
			remove_character_modifier = character_ip_mon_supported_heir_modifier
		}
		add_legitimacy = legitimacy_small # Legitimacy peeks
	}
	
	option = { # Imprison assassin
		name = "ip_monarchy.32.c"
		trigger = { # If wounded or killed victim
			OR = {
				has_variable = rival_brothers_death
				has_variable = rival_brothers_wound
			}
		}
		scope:rival_brothers_victor = { add_loyalty = loyalty_imprisoned_plotter } # Assassin unhappy
		imprison = { # Imprison assassin
			target = scope:rival_brothers_victor
		}
		if = {
			limit = {
				NOT = { has_variable = rival_brothers_death }
				scope:rival_brothers_loser = { is_alive = yes }
			}
			scope:rival_brothers_loser = { add_loyalty = loyalty_plotter_punished } # Victim happy
		}
		random_character = {
			limit = { 
				OR = {
					this = scope:rival_brothers_victor
					this = scope:rival_brothers_loser
				}	
				is_alive = yes
				has_character_modifier = character_ip_mon_supported_heir_modifier
			}
			remove_character_modifier = character_ip_mon_supported_heir_modifier
		}
		remove_brothers_variables_effect = yes
	}
}

# Hatchet Buried
ip_monarchy.33 = {
	type = country_event
	title = "ip_monarchy.33.t"
	desc = "ip_monarchy.33.desc"
	picture = greek_court
	
	left_portrait = current_ruler
	right_portrait = scope:rival_brother_1
	right_portrait = scope:rival_brother_2

	trigger = {
		rival_brothers_scope_trigger = yes # Are there two rival brothers
	}
	
	option = { # Encourage friendship
		name = "ip_monarchy.33.a"
		add_political_influence = subtract_influence_medium
		scope:rival_brother_1 = {
			hidden_effect = { remove_rival = scope:rival_brother_2 }
			add_friend = scope:rival_brother_2
		}
		random_character = {
			limit = { 
				OR = {
					this = scope:rival_brothers_victor
					this = scope:rival_brothers_loser
				}
				is_alive = yes
				has_character_modifier = character_ip_mon_supported_heir_modifier
			}
			remove_character_modifier = character_ip_mon_supported_heir_modifier
		}
		remove_brothers_variables_effect = yes
	}
	
	option = { # At last
		name = "ip_monarchy.33.b"
		scope:rival_brother_1 = {
			remove_rival = scope:rival_brother_2
		}
		add_legitimacy = legitimacy_medium
		remove_brothers_variables_effect = yes
	}
	
	option = { # Stir them up again
		name = "ip_monarchy.33.c"
		scope:rival_brother_1 = {
			add_loyalty = loyalty_infighting_encouraged
		}
		scope:rival_brother_2 = {
			add_loyalty = loyalty_infighting_encouraged
		}
		add_legitimacy = subtract_legitimacy_small # Childish
		remove_brothers_variables_effect = yes
	}
}

# House # - A successful courtier
ip_monarchy.34 = {
	type = country_event
	title = "ip_monarchy.34.t"
	desc = "ip_monarchy.34.desc"
	picture = senator_conversing
	
	left_portrait = current_ruler
	right_portrait = scope:family_leader_scope
	
	trigger = { # Is there a family in the monarchy that's prestigious with a prominent member?
		is_monarchy = yes
		has_land = yes
		current_ruler = {
			can_get_friends = yes
			can_get_rivals = yes
		}
		any_family = {
			any_family_member = {
				OR = {
					has_any_office = yes
					is_general = yes
					is_admiral = yes
				}
				trigger_if = {
					limit = {
						employer = root
						root.current_ruler = {
							is_minor_character = no
						}
					}
					NOT = { from_ruler_family = yes }
				}
				wealth >= 500
				power_base >= 20_percent_power_base_country_svalue
				loyalty >= 60
				can_get_friends = yes
				can_get_rivals = yes
				NOR = {
					is_friend = root.current_ruler
					is_rival = root.current_ruler
				}
			}
		}
		NOR = { 
			has_variable = mon_34_cooldown
			tag = MER
			tag = REB
		}
	}
	
	immediate = {
		set_variable = { # Toggle
			name = mon_34_cooldown 
			days = 2920 # 8 years
		}
		ordered_family = { # Find family
			limit = {
				any_family_member = {
					OR = {
						has_any_office = yes
						is_general = yes
						is_admiral = yes
					}
					trigger_if = {
						limit = {
							employer.current_ruler = {
								is_minor_character = no
							}
						}
						NOT = { from_ruler_family = yes }
					}
					wealth >= 500
					power_base >= 20_percent_power_base_country_svalue
					loyalty >= 60
					can_get_friends = yes
					can_get_rivals = yes
					NOR = {
						is_friend = root.current_ruler
						is_rival = root.current_ruler
					}
				}
			}
			order_by = prestige
			check_range_bounds = no
			ordered_family_member = {
				limit = {
					OR = {
						has_any_office = yes
						is_general = yes
						is_admiral = yes
					}
					wealth >= 500
					power_base >= 20_percent_power_base_country_svalue
					loyalty >= 60
					can_get_friends = yes
					can_get_rivals = yes
					NOR = {
						is_friend = root.current_ruler
						is_rival = root.current_ruler
					}
				}
				order_by = power_base
				check_range_bounds = no
				save_scope_as = family_leader_scope
			} 
		}	
	}
	
	option = { # I never liked them
		name = "ip_monarchy.34.a"
		trigger = {
			current_ruler = { # Current ruler flawed
				OR = {
					has_trait = jealous
					has_trait = suspicious
				}
				NOT = { # Not friends with target
					is_friend = scope:family_leader_scope 
				}
			}
		}
		exclusive = yes
		highlight = yes
		custom_tooltip = ip_monarchy.34.at
		current_ruler = { # Ruler loses popularity
			add_popularity = subtract_popularity_medium
		}
		imprison = { # Imprisons successful target
			target = scope:family_leader_scope
		}
		scope:family_leader_scope = { # Family loses prestige
			if = {
				limit = {
					is_minor_character = no
				}
				family = {
					add_prestige = subtract_prestige_medium
				}
			}			
		}
		add_tyranny = tyranny_large # Tyranny proven
		hidden_effect = { # Family noy happy
			scope:family_leader_scope.family = {
				every_family_member = {
					add_loyalty = loyalty_imprisoned_jealous
				}
			}
		}
	}
	
	option = { # They must be taken down a peg
		name = "ip_monarchy.34.b"
		current_ruler = { # Ruler loses face
			add_popularity = subtract_popularity_small
		}
		scope:family_leader_scope = { # Target loses job
			remove_all_offices = yes
			add_loyalty = loyalty_family_jealousy
		}
		scope:family_leader_scope = { # Family loses prestige
			if = {
				limit = {
					is_minor_character = no
				}
				family = {
					add_prestige = subtract_prestige_medium
				}
			}
		}
		custom_tooltip = ip_monarchy.34.bt
		add_tyranny = tyranny_medium # Tyranny hinted
		hidden_effect = {
			scope:family_leader_scope.family = { # Family unhappy
				every_family_member = {
					add_loyalty = loyalty_family_jealousy
				}
			}
		}
	}
	
	option = { # Bring them in to the fold
		name = "ip_monarchy.34.c"
		add_treasury = { # Price of cucumber sandwiches
			value = has_monthly_income
			multiply = -2
		}
		scope:family_leader_scope = { # Family talk of the town
			if = {
				limit = {
					is_minor_character = no
				}
				family = {
					add_prestige = prestige_large
				}
			}
		}
		custom_tooltip = ip_monarchy.34.ct
		hidden_effect = { 
			scope:family_leader_scope.family = { # Family impressed
				every_family_member = {
					add_loyalty = loyalty_family_grateful
				}
			}
		}
	}
	
	option = { # Not interested
		name = "ip_monarchy.34.d"
		scope:family_leader_scope = { # Family allowed to continue unchecked
			if = {
				limit = {
					is_minor_character = no
				}
				family = {
					add_prestige = prestige_medium
				}
			}
		}
	}
}

# A Prominent Personage
ip_monarchy.35 = {
	type = country_event
	title = "ip_monarchy.35.t"
	desc = "ip_monarchy.35.desc"
	picture = senator_conversing
	
	left_portrait = current_ruler
	right_portrait = scope:family_leader_scope
	
	trigger = { # Is there a family in a monarchy that's prestigious with a relevant prominent member?
		is_monarchy = yes
		has_land = yes
		current_ruler = {
			can_get_friends = yes
			can_get_rivals = yes
		}
		any_family = {
			any_family_member = { # Prominent member?
				trigger_if = {
					limit = {
						exists = employer
						exists = employer.current_ruler
						employer.current_ruler = {
							is_minor_character = no
						}
					}
					NOT = { from_ruler_family = yes }
				}
				OR = {
					has_any_office = yes
					is_general = yes
					is_admiral = yes
					wealth >= 500
					power_base >= 20_percent_power_base_country_svalue
				}
				loyalty >= 60
				can_get_friends = yes
				can_get_rivals = yes
				NOR = { # Not already buddy or enemy of ruler
					is_friend = root.current_ruler
					is_rival = root.current_ruler
					this = root.current_ruler
				}
			}
		}
		NOT = { has_variable = mon_35_cooldown }		
	}
	
	immediate = {
		set_variable = { # Toggle
			name = mon_35_cooldown 
			days = 2920 # 8 years
		}
		ordered_family = { # Find relevant family and save scope
			limit = {
				any_family_member = {
					trigger_if = {
						limit = {
							employer = root
							root.current_ruler = {
								is_minor_character = no
							}
						}
						NOT = { from_ruler_family = yes }
					}
					OR = {
						has_any_office = yes
						is_general = yes
						is_admiral = yes
						wealth >= 500
						power_base >= 20_percent_power_base_country_svalue
					}
					loyalty >= 60
					can_get_friends = yes
					can_get_rivals = yes
					NOR = {
						is_friend = root.current_ruler
						is_rival = root.current_ruler
						this = root.current_ruler
					}
				}
			}
			order_by = prestige
			check_range_bounds = no
			ordered_family_member = {
				limit = {
					trigger_if = {
						limit = {
							employer = root
							root.current_ruler = {
								is_minor_character = no
							}
						}
						NOT = { from_ruler_family = yes }
					}
					OR = {
						has_any_office = yes
						is_general = yes
						is_admiral = yes
						wealth >= 500
						power_base >= 20_percent_power_base_country_svalue
					}
					loyalty >= 60
					can_get_friends = yes
					can_get_rivals = yes
					NOR = {
						is_friend = root.current_ruler
						is_rival = root.current_ruler
						this = root.current_ruler
					}
				}
				order_by = power_base
				check_range_bounds = no
				save_scope_as = family_leader_scope
			} 
		}
	}
	
	option = { # Invite # to a private banquet... 
		name = "ip_monarchy.35.a"
		add_treasury = { # Price of quail eggs
			value = has_monthly_income
			multiply = -2
		}
		current_ruler = { # Ruler befriends target and is talked up 
			add_friend = scope:family_leader_scope
			add_corruption = corruption_medium
		}
		scope:family_leader_scope = { # Target well pleased
			add_loyalty = loyalty_invited_banquet
		}
		scope:family_leader_scope = { # Target family becomes more important
			if = {
				limit = {
					is_minor_character = no
				}
				family = { add_prestige = prestige_medium }
			}
		}
	}
	
	option = { # ...at a fake address.
		name = "ip_monarchy.35.b"
		current_ruler = { # Ruler discredited but respected
			add_popularity = popularity_medium
		}
		scope:family_leader_scope = { # Target not pleased
			add_rival = root.current_ruler
			add_loyalty = loyalty_invited_banquet_false
		}
		scope:family_leader_scope = { # Target family mocked
			if = {
				limit = {
					is_minor_character = no
				}
				family = { add_prestige = subtract_prestige_large }
			}
		}
	}
	
	option = { # What of it?
		name = "ip_monarchy.35.c"
		current_ruler = { # Missed opportunity
			add_popularity = subtract_popularity_small
		}
	}
}

# Discreditable Dalliance
ip_monarchy.36 = {
	type = country_event
	title = "ip_monarchy.36.t"
	desc = "ip_monarchy.36.desc"
	picture = greek_court
	
	left_portrait = current_ruler
	left_portrait = consort
	right_portrait = scope:bastard_mother
	right_portrait = scope:bastard_child
	
	trigger = {  # Is there a married male monarch capable of affair?
		is_monarchy = yes
		has_land = yes
		current_ruler = {
			is_male = yes
			is_married = yes
			NOR = {
				has_trait = devout
				has_trait = chaste
				has_trait = incapable
				has_trait = shrewd
				has_trait = self_controlled
			}
		}
		exists = current_ruler.spouse
		current_ruler.spouse = { 
			is_alive = yes
			employer = root
		}
		NOR = { 
			has_variable = mon_36_cooldown 
			has_variable = ip_mon_36_flag
		}
		any_neighbour_country = { exists = yes }
	}
	
	immediate = {
		set_variable = { # Toggle
			name = mon_36_cooldown 
			days = 18250 # 50 years
		}
		current_ruler = { save_scope_as = bastard_ruler } # Save ruler as bastard father
		hidden_effect = {
			create_character = { # Create wench bastard mother
				female = yes
				age = 21
				force_add_trait = lustful
				save_scope_as = bastard_mother
			}
			create_character = { # Create bastard
				culture = scope:bastard_ruler.culture
				religion = scope:bastard_ruler.religion
				female = no
				mother = scope:bastard_mother
				father = scope:bastard_ruler
				age = 0
				no_stats = yes
				no_traits = yes
				save_scope_as = bastard_child
			}
			scope:bastard_child = {
				trigger_event = {
					id = character_events.35
				}
			}
		}
	}
	
	option = { # Make this go away
		name = "ip_monarchy.36.a"
		scope:bastard_ruler.spouse = { add_loyalty = loyalty_consort_reassured }
		hidden_effect = { # Ruler does not know for sure if child is really gone for good
			random_neighbour_country = { save_scope_as = ip_monarchy_36_neighbor_scope } # Pick neighbor for child
			random_list = { # Child disappeared to MER and killed to hide death notice or banished to neighbour to possibly return in 18-22 years
				2 = {
					scope:bastard_child = {
						death = {
							death_reason = death_obscurity
							killer = scope:bastard_ruler
							silent = yes
						}
					}
					scope:bastard_mother = { # Mother disappeared to MER and killed, to hide death notice for ruler
						death = {
							death_reason = death_obscurity
							killer = scope:bastard_ruler
							silent = yes
						}
					}
				}
				2 = {
					set_variable = { 
						name = ip_mon_36_flag 
						value = root.current_ruler
					}
					scope:bastard_child = { 
						set_variable = { 
							name = ip_mon_36_child_flag 
							value = root.current_ruler
						}
						banish = scope:ip_monarchy_36_neighbor_scope
						trigger_event = {
							id = ip_monarchy.69
							days = { 6570 8030 } # 18-22 years
						}
					}
					scope:bastard_mother = { banish = scope:ip_monarchy_36_neighbor_scope }
					hidden_effect = {
						scope:ip_monarchy_36_neighbor_scope = {
							scope:bastard_child = {
								set_as_minor_character = this
							}
						}
					}
				}
			}
		}
		custom_tooltip = ip_monarchy.36.at
		add_treasury = { # Price of thugs
			value = has_monthly_income
			multiply = -1
		}
		add_tyranny = tyranny_medium # Tyranny questioned
		add_legitimacy = subtract_legitimacy_small # Legitimacy pondered
	}
	
	option = { # The child will be supported, and the mother silenced
		name = "ip_monarchy.36.b"
		scope:bastard_ruler.spouse = { add_loyalty = loyalty_consort_reassured_2 }
		add_treasury = { # Price of diapers and tablet
			value = has_monthly_income
			multiply = -2
		}
		add_legitimacy = subtract_legitimacy_medium # Legitimacy mulled over
		hidden_effect = { # Child may reappear in 18-22 years
			scope:bastard_child = {
				set_as_minor_character = this
			}
			random = {
				chance = 50
				set_variable = { 
					name = ip_mon_36_flag 
					value = root.current_ruler
				}
				scope:bastard_child = {
					set_variable = { 
						name = ip_mon_36_child_flag 
						value = root.current_ruler
					}
					trigger_event = {
						id = ip_monarchy.69
						days = { 6570 8030 } # 18-22 years
					}
				}
			}
		}
	}
	
	option = { # He has royal blood
		name = "ip_monarchy.36.c"
		scope:bastard_ruler = { add_popularity = subtract_popularity_medium }
		scope:bastard_ruler.spouse = { add_loyalty = loyalty_bastard_legitimized }
		hidden_effect = { 
			if = { # Ruler's other children not happy
				limit = {
					scope:bastard_ruler = { num_of_children > 0 }
				}
				scope:bastard_ruler = {
					every_child = {
						limit = {
							trigger_if = {
								limit = {
									employer.current_ruler = { is_minor_character = no }
								}
								from_ruler_family = yes
							}
							age >= 10
							NOT = { this = scope:bastard_child }
						}
						add_loyalty = loyalty_bastard_legitimized
					}
				}
			}
			if = { # Successors unhappy
				limit = {
					any_character = { is_successor = yes }
				}
				every_successor = { add_loyalty = loyalty_bastard_legitimized }
			}
		}
		scope:bastard_child = { # adopted
			hidden_effect = { add_popularity = subtract_popularity_huge }
			##bastard_major_bloodline_effect = yes # Give bloodline of ruler if relevant
		}
		custom_tooltip = ip_monarchy.36.ct1
		add_legitimacy = subtract_legitimacy_large # Legitimacy questioned
	}
	
	option = { # Ruler marries mother of child
		name = "ip_monarchy.36.d"
		scope:bastard_ruler = { add_popularity = subtract_popularity_huge }
		scope:bastard_ruler.spouse = { add_loyalty = loyalty_old_consort }
		hidden_effect = {
			if = {	
				limit = {
					AND = {
						exists = scope:bastard_mother
						scope:bastard_mother = { can_get_rivals = yes }
					}
					AND = {
						exists = scope:bastard_ruler.spouse
						scope:bastard_ruler.spouse = { can_get_rivals = yes }
					}	
				}
				scope:bastard_ruler.spouse = { add_rival = scope:bastard_mother }
			}
			if = { # Rulers other children unhappy
				limit = {
					scope:bastard_ruler = { num_of_children > 0 }
				}
				scope:bastard_ruler = {
					every_child = {
						limit = {
							trigger_if = {
								limit = {
									employer.current_ruler = { is_minor_character = no }
								}
								from_ruler_family = yes
							}
							age >= 10
							NOT = { this = scope:bastard_child }
						}
						add_loyalty = loyalty_bastard_legitimized_pretender
					}
				}
			}
			if = { # Successors unhappy
				limit = {
					any_character = { is_successor = yes }
				}
				every_successor = { add_loyalty = loyalty_bastard_legitimized_pretender }
			}
			scope:bastard_ruler = {
				if = {
					limit = {
						is_married = yes
					}
					divorce_character = spouse
				}
			}
		}
		scope:bastard_child = { # adopted
			hidden_effect = { add_popularity = subtract_popularity_huge }
			##bastard_major_bloodline_effect = yes # Give bloodline of ruler if relevant
		}
		scope:bastard_ruler = { marry_character = scope:bastard_mother }
		custom_tooltip = ip_monarchy.36.dt
		add_legitimacy = subtract_legitimacy_huge # Legitimacy damaged
	}
}

# Discreditable Dalliance II
ip_monarchy.37 = {
	type = country_event
	title = "ip_monarchy.37.t"
	desc = "ip_monarchy.37.desc"
	picture = greek_court	
	
	left_portrait = scope:bastard_ruler
	left_portrait = scope:bastard_ruler.spouse
	right_portrait = scope:bastard_child
	right_portrait = scope:bastard_mother
	
	trigger = { # Previous characters exist and still relevant
		is_monarchy = yes
		has_land = yes
		has_variable = ip_mon_36_flag
	}
	
	immediate = {
		root.var:ip_mon_36_flag = { save_scope_as = bastard_ruler }
		root.var:ip_mon_36_child_scope_flag = { save_scope_as = bastard_child }
		root.var:ip_mon_36_mother_scope_flag = { save_scope_as = bastard_mother }
		hidden_effect = { ## Almost certainly unnessesary
			scope:bastard_child = {
				trigger_event = {
					id = character_events.35
				}
			}
		}
	}			
	
	option = { # Acknowledge child as ruler's
		name = "ip_monarchy.37.a"
		hidden_effect = {
			if = { # Ruler's other children unhappy
				limit = {
					scope:bastard_ruler = { num_of_children > 0 }
				}
				every_character = {
					limit = {
						is_child_of = scope:bastard_ruler	
						trigger_if = {
							limit = {
								employer.current_ruler = {
									is_minor_character = no
								}
							}
							from_ruler_family = yes
						}
						age >= 10
						NOT = { this = scope:bastard_child }
					}
					add_loyalty = loyalty_bastard_legitimized
				}
			}
			if = { # Successor's unhappy
				limit = {
					any_character = { is_successor = yes }
				}
				every_successor = { add_loyalty = loyalty_bastard_legitimized_pretender }
			}
		}
		if = { # Child's mother happy
			limit = {
				scope:bastard_mother = {
					exists = yes
					is_alive = yes
					employer = root
				}
			}
			scope:bastard_mother = { add_loyalty = loyalty_new_consort }
		}
		if = { # Ruler's wife unhappy
			limit = {
				scope:bastard_ruler = { is_married = yes }
				exists = consort
				consort = { is_alive = yes }
			}
			consort = { add_loyalty = loyalty_old_consort }
		}
		scope:bastard_child = { # Child adopted into ruler family and happy
			add_loyalty = loyalty_legitimized_bastard
			##bastard_major_bloodline_effect = yes # Give bloodline of ruler if relevant
			set_family = scope:bastard_ruler.family
		}
		custom_tooltip = ip_monarchy.37.at1
		add_legitimacy = subtract_legitimacy_large # Legitimacy knocked
	} 
	
	option = { # Deny child is ruler's
		name = "ip_monarchy.37.b"
		if = {
			limit = {
				scope:bastard_mother = {
					exists = yes
					is_alive = yes
					employer = root
				}
			}
			scope:bastard_mother = { add_loyalty = loyalty_bastard_denied } # Mother unhappy
		}
		if = { # Ruler's wife unhappy
			limit = {
				scope:bastard_ruler = { is_married = yes }
			}
			every_character = {
				limit = { is_spouse_of = scope:bastard_ruler }
				add_loyalty = loyalty_denied_bastard
			}
		}
		scope:bastard_child = { add_loyalty = loyalty_bastard_denied } # Child unhappy
		add_legitimacy = subtract_legitimacy_medium # Legitimacy shaken
	}
	
	after = {
		remove_variable = ip_mon_36_flag
		scope:bastard_child = { remove_variable = ip_mon_36_child_flag }
	}
}

# Indecent Affair I - Create affair pregnancy
ip_monarchy.38 = {
	type = character_event
	
	hidden = yes
	
	trigger = { # Married monarch ruler and suitable married woman to have affair with exist
		is_ruler = yes
		is_married = yes
		is_male = yes
		employer = { 
			is_monarchy = yes
			has_land = yes
			any_character = {
				NOR = {
					is_spouse_of = root
					is_child_of = root
					trigger_if = {
						limit = {
							employer = {
								NOT = { has_law = egyption_succession_law }
							}
						}
						is_close_relative = root
					}
					is_ruler = yes
					is_rival = root
					is_pregnant = no
					AND = {
						num_of_children >= 1
						any_child = { is_child_of = root }
					}
				}
				is_female = yes
				age >= 18
				age <= 40
			}
			any_neighbour_country = { exists = yes }
		}
		NOR = { # Ruler is capable of sin
			has_trait = devout
			has_trait = chaste
			has_trait = incapable
			has_trait = shrewd
			has_trait = self_controlled 
			has_variable = mon_38_cooldown 
			employer = { has_variable = ip_mon_38_flag }
			employer = { has_variable = mon_38_cooldown }
		}
	}
	
	immediate = {
		employer = {
			set_variable = { # Toggle
				name = mon_38_cooldown 
				days = 18250 # 50 years
			}
		}
		set_variable = { # Toggle
			name = mon_38_cooldown 
			days = 18250 # 50 years
		}
		save_scope_as = bastard_ruler
		root.employer = { 
			ordered_character = { # Find best lover
				limit = {
					NOR = {
						is_spouse_of = root
						is_child_of = root
						trigger_if = {
							limit = {
								employer = {
									NOT = { has_law = egyption_succession_law }
								}
							}
							is_close_relative = root
						}
						is_ruler = yes
						is_rival = root
						is_pregnant = no
						AND = {
							num_of_children >= 1
							any_child = { is_child_of = root }
						}
					}
					is_female = yes
					age >= 18
					age <= 40
				}
				order_by = prominence
				check_range_bounds = no
				save_scope_as = affair_strumpet
			}
		}
		if = { # Save husband as cuckold
			limit = {
				scope:affair_strumpet = { is_married = yes }
				scope:affair_strumpet.spouse = {
					is_alive = yes
					employer = root.employer
				}
			}
			scope:affair_strumpet.spouse = {
				save_scope_as = affair_cuckold
			}
		}
		scope:affair_strumpet = { # Impregnate lover
			set_variable = affair_pregnancy
			make_pregnant = {
				 father = scope:bastard_ruler
				 known_bastard = yes
				 number_of_children = 1
			}
		}
		employer = { # Trigger next event for country after birth
			trigger_event = {
				id = ip_monarchy.39
				days = 300
			}
		}
	}
}

# Indecent Affair II - Child born
ip_monarchy.39 = {
	type = country_event
	title = "ip_monarchy.39.t"
	desc = "ip_monarchy.39.desc"
	picture = greek_court
	
	left_portrait = scope:bastard_ruler
	left_portrait = scope:bastard_ruler.spouse
	right_portrait = scope:affair_strumpet
	right_portrait = scope:affair_child
	right_portrait = scope:affair_strumpet.spouse
	
	trigger = { # Previous characters alive and relevant
		is_monarchy = yes
		has_land = yes
		exists = scope:bastard_ruler
		scope:bastard_ruler = {
			is_alive = yes
			is_ruler = yes
			employer = root
		}
		exists = scope:affair_strumpet
		scope:affair_strumpet = {
			is_alive = yes
			employer = root
			num_of_children >= 1
			any_child = {
				is_alive = yes
				is_child_of = scope:bastard_ruler
			}
		}
		any_neighbour_country = { exists = yes }
	}
	
	immediate = {
		scope:affair_strumpet = {
			ordered_child = {
				limit = { is_child_of = root.current_ruler }
				order_by = {
					value = 0
					subtract = age
				}
				save_scope_as = affair_child
			}
		}
		hidden_effect = { 
			scope:affair_child = { 
				trigger_event = {
					id = character_events.35
				}
			}
		}
	}
	
	option = { # This must never be revealed
		name = "ip_monarchy.39.a"
		custom_tooltip = ip_monarchy.39.at
		random_neighbour_country = { save_scope_as = ip_monarchy_36_neighbor_scope } # Pick neighbor for child
		hidden_effect = {
			random_list = { # Child dies or may return, merc banishment to hide death notice for ruler
				50 = {
					scope:affair_child = {
						death = { 
							death_reason = death_mysteriously_retired 
							killer = root.current_ruler 
							silent = yes
						}
					}
				}
				50 = {
					set_variable = { 
						name = ip_mon_38_flag 
						value = root.current_ruler
					}
					scope:affair_child = {
						set_variable = { 
							name = ip_mon_38_child_flag 
							value = root.current_ruler
						}
						banish = scope:ip_monarchy_36_neighbor_scope
						trigger_event = {
							id = ip_monarchy.70
							days = { 6570 8030 }
						}
					}
				}
			}
		}
		scope:affair_strumpet = { add_trait = mourning }
		if = {
			limit = { 
				scope:bastard_ruler = { is_married = yes }
			}
			scope:bastard_ruler.spouse = { add_loyalty = loyalty_consort_reassured }
		}
		add_treasury = { # Payment for services rendered
			value = has_monthly_income
			multiply = -2
		}
		add_tyranny = tyranny_small # Tyranny
	}

	option = { # They have royal blood
		name = "ip_monarchy.39.b"
		if = {
			limit = { 
				scope:bastard_ruler = { is_married = yes }
			}
			scope:bastard_ruler.spouse = { add_loyalty = loyalty_bastard_legitimized }
		}
		if = {
			limit = {
				exists = scope:affair_cuckold
				scope:affair_cuckold = { is_alive = yes }
			}
			scope:affair_cuckold = { add_loyalty = loyalty_cuckold_revealed }
		}
		scope:affair_child = {
			set_family = scope:bastard_ruler.family
			hidden_effect = { adapt_family_name = yes }
		}
		hidden_effect = {
			if = { # Rulers other children not happy
				limit = {
					scope:bastard_ruler = { num_of_children > 1 }
				}
				every_character = {
					limit = {
						is_alive = yes
						is_child_of = scope:bastard_ruler	
						trigger_if = {
							limit = {
								employer.current_ruler = {
									is_minor_character = no
								}
							}
							from_ruler_family = yes
						}
						age >= 10
						NOT = { this = scope:affair_child }
					}
					add_loyalty = loyalty_bastard_legitimized
				}
			}
			if = { # Successors not happy
				limit = {
					any_character = { 
						is_alive = yes
						is_successor = yes 
					}
				}
				every_successor = { add_loyalty = loyalty_bastard_legitimized }
			}
		}
		custom_tooltip = ip_monarchy.36.ct1
		add_legitimacy = subtract_legitimacy_large # Remove legitimacy
	}
	
	option = { # Ruler marries mother of child
		name = "ip_monarchy.39.c"
		if = {
			limit = { 
				scope:bastard_ruler = { is_married = yes }
			}
			scope:bastard_ruler.spouse = { add_loyalty = loyalty_old_consort }
		}
		if = {
			limit = {
				scope:affair_cuckold = {
					is_alive = yes
					employer = root
				}
			}
			scope:affair_cuckold = { add_loyalty = loyalty_cuckold_revealed }
		}
		scope:affair_child = {
			set_family = scope:bastard_ruler.family
			hidden_effect = { adapt_family_name = yes }
		}
		if = {	
			limit = {
				scope:affair_strumpet = { can_get_rivals = yes }
				exists = scope:bastard_ruler.spouse
				scope:bastard_ruler.spouse = { can_get_rivals = yes}
			}
			hidden_effect = { 
				scope:bastard_ruler.spouse = { add_rival = scope:affair_strumpet }
				scope:bastard_ruler = { divorce_character = spouse }
			}
		}
		hidden_effect = { 
			scope:affair_strumpet = { divorce_character = scope:affair_strumpet.spouse }
		}
		scope:bastard_ruler = { marry_character = scope:affair_strumpet }
		hidden_effect = { 
			if = { # Rulers other children unhappy
				limit = {
					scope:bastard_ruler = {
						num_of_children > 1
					}
				}
				scope:bastard_ruler = {
					every_child = {
						limit = {
							is_alive = yes
							trigger_if = {
								limit = {
									employer.current_ruler = {
										is_minor_character = no
									}
								}
								from_ruler_family = yes
							}
							age >= 10
							NOT = { this = scope:affair_child }
						}
						add_loyalty = loyalty_bastard_legitimized_pretender
					}
				}
			}
			if = { # Successors unhappy
				limit = {
					any_character = {
						is_alive = yes
						is_successor = yes
					}
				}
				every_successor = {
					add_loyalty = loyalty_bastard_legitimized_pretender
				}
			}
		}
		scope:affair_child = { # adopted
			hidden_effect = { add_popularity = subtract_popularity_huge }
		}
		custom_tooltip = ip_monarchy.36.dt
		add_legitimacy = subtract_legitimacy_huge # Legitimacy damaged
		remove_stability_effect = yes # Stability knocked
	}
}

# Indecent Affair III - Return of child
ip_monarchy.40 = {
	type = country_event
	title = "ip_monarchy.40.t"
	desc = "ip_monarchy.40.desc"
	picture = greek_court	
	
	left_portrait = scope:bastard_ruler
	left_portrait = scope:bastard_ruler.spouse
	right_portrait = scope:affair_child
	right_portrait = scope:affair_child.mother
	
	trigger = { # Previous characters exist and still relevant
		is_monarchy = yes
		has_land = yes
		has_variable = ip_mon_38_flag
	}
	
	immediate = {
		root.var:ip_mon_38_flag = { save_scope_as = bastard_ruler }
		root.var:ip_mon_38_child_scope_flag = { save_scope_as = bastard_child }
		root.var:ip_mon_38_mother_scope_flag = { save_scope_as = bastard_mother }
	}
	
	option = { # Acknowledge child as ruler's
		name = "ip_monarchy.40.a"
		if = {
			limit = {
				scope:bastard_mother = {
					exists = yes
					is_alive = yes
					employer = root
				}
			}
			scope:bastard_mother = {
				add_loyalty = loyalty_legitimized_bastard
				add_prominence = prominence_medium
			}
		}
		if = { # Wife of ruler not happy
			limit = {
				scope:bastard_ruler = {
					is_married = yes
					NOT = { spouse = scope:bastard_mother }
				}
			}
			every_character = {
				limit = {
					is_alive = yes
					is_spouse_of = scope:bastard_ruler
				}
				add_loyalty = loyalty_bastard_legitimized_pretender
			}
		}
		hidden_effect = {
			if = { # Children of ruler not happy
				limit = {
					scope:bastard_ruler = {
						num_of_children > 0
					}
				}
				every_character = {
					limit = {
						is_alive = yes
						is_child_of = scope:bastard_ruler
						trigger_if = {
							limit = {
								employer.current_ruler = {
									is_minor_character = no
								}
							}
							from_ruler_family = yes
						}
						age >= 10
						NOT = { this = scope:bastard_child }
					}
					add_loyalty = loyalty_bastard_legitimized_pretender
				}
			}
			if = { # Successors not happy
				limit = {
					any_character = {
						is_alive = yes
						is_successor = yes
					}
				}
				every_successor = {
					add_loyalty = loyalty_bastard_legitimized_pretender
				}
			}
		}
		scope:bastard_child = { # Move child to ruler family
			hidden_effect = { set_family = scope:bastard_ruler.family }
			custom_tooltip = ip_monarchy.40.at2
		}
		custom_tooltip = ip_monarchy.40.at1
		add_legitimacy = subtract_legitimacy_huge # Remove legitimacy
	}
	
	option = { # Deny child is ruler's
		name = "ip_monarchy.40.b"
		if = { # Child's mother loses reputation
			limit = {
				scope:bastard_mother = {
					exists = yes
					is_alive = yes
					employer = root
				}
			}
			scope:bastard_mother = {
				add_prominence = subtract_prominence_huge
			}
		}
		scope:bastard_child = { # Child not happy
			add_loyalty = loyalty_bastard_denied
		}
		add_legitimacy = subtract_legitimacy_medium # Remove legitimacy
	}

	after = {
		remove_variable = ip_mon_38_flag
		scope:bastard_child = { remove_variable = ip_mon_38_child_flag }
	}
}

# Disloyal Friend for Pretender
ip_monarchy.41 = {
	type = character_event

	hidden = yes

	trigger = { # Is there a disloyal pretender?
		employer = { 
			is_monarchy = yes
			has_land = yes
		}
		is_ruler = no
		is_successor = yes
		prisoner = no
		is_primary_heir = no
		loyalty <= 60
		can_get_friends = yes
		employer = {
			any_character = { # Is there a disloyal character to befriend them?
				prisoner = no
				loyalty <= 60
				can_get_friends = yes
			}
		}
	}
	
	immediate = {
		employer = {
			random_successor = { # Save pretender scope
				limit = {
					prisoner = no
					is_primary_heir = no
					loyalty <= 60
					can_get_friends = yes
				}
				weight = {
					title_importance_modifier = yes
				}
				save_scope_as = pretender
			}
			random_character = { # Add friend to pretender
				limit = {
					prisoner = no
					is_primary_heir = no
					loyalty <= 60
					can_get_friends = yes
					NOT = {
						scope:pretender = {
							this = PREV
						}
					}
				}
				weight = {
					title_importance_modifier = yes
				}
				add_friend = scope:pretender
			}
		}
	}
}

ip_monarchy.42 = { # Consort Chain 1.1 - Conspiracy to Kill Primary Heir
	type = country_event
	title = "ip_monarchy.42.t"
	desc = "ip_monarchy.42.desc"
	picture = greek_court	
	
	left_portrait = current_ruler
	left_portrait = primary_heir
	right_portrait = consort
	right_portrait = scope:ip_mon_42_consorts_heir

	trigger = {
		is_monarchy = yes
		current_ruler = {
			is_married = yes
		}
		primary_heir = {
			NOT = {
				is_child_of = root.current_ruler.spouse
			}
		}
		current_ruler.spouse = {
			NOR = {
				has_trait = devout
				has_trait = content
			}
			num_of_children >= 1
			loyalty <= 90
		}
		any_character = {
			is_pretender = yes
			is_child_of = root.current_ruler
			is_child_of = root.current_ruler.spouse
			NOT = { is_primary_heir = yes }
		}
		any_character = { # There is only 1 child between consorts heir and the throne
			count <= 1
			OR = {
				is_pretender = yes
				is_primary_heir = yes
			}
			is_child_of = root.current_ruler
			NOT = { is_child_of = root.current_ruler.spouse }
		}
		NOR = {
			has_variable = ip_mon_42_cooldown
			has_variable = ongoing_plot
		}
	}
	
	immediate = {
		set_variable = {
			name = ip_mon_42_cooldown
			days = 14600 # 40 years
		}
		set_variable = {
			name = ongoing_plot
		}
		current_ruler = {
			save_scope_as = ip_mon_42_ruler
		}
		current_ruler.spouse = {
			save_scope_as = ip_mon_42_consort
		}
		primary_heir = {
			save_scope_as = ip_mon_42_primary_heir
		}
		current_ruler.spouse = {
			if = {
				limit = {
					any_child = {	
						is_child_of = root.current_ruler
						is_female = yes
						is_pretender = yes
					}
					any_child = {	
						is_child_of = root.current_ruler
						is_male = yes
						is_pretender = yes
					}
				}
				ordered_child = {
					limit = {
						is_child_of = root.current_ruler
						is_male = yes
						is_pretender = yes
					}
					order_by = age
					save_scope_as = ip_mon_42_consorts_heir
				}
			}
			else = {
				ordered_child = {
					limit = {
						is_child_of = root.current_ruler
						is_pretender = yes
					}
					order_by = age
					save_scope_as = ip_mon_42_consorts_heir
				}
			}
		}
	}
	
	option = { # She would never!
		name = "ip_monarchy.42.a"
		custom_tooltip = plot_event_chain_tooltip
		scope:ip_mon_42_primary_heir = {
			add_loyalty = loyalty_heir_plot_ignored
		}
		scope:ip_mon_42_consort = {
			add_loyalty = loyalty_consort_plot_ignored
		}
		if = {
			limit = {
				scope:ip_mon_42_consorts_heir = {
					age >= 16
				}
			}
			scope:ip_mon_42_consorts_heir = {
				add_loyalty = loyalty_consorts_heir_ignored
			}
		}
		hidden_effect = {
			trigger_event = {
				on_action = ip_mon_42_plot_early
				days = { 30 60 }
			}
		}
	}
	
	option = { # Investigate
		name = "ip_monarchy.42.b"
		set_variable = {
			name = ip_mon_42_investigation
			value = 1
		}
		custom_tooltip = plot_event_chain_tooltip
		custom_tooltip = "ip_monarchy.42.bt"
		add_treasury = {
			value = has_monthly_income
			multiply = -2
		}
		hidden_effect = {
			trigger_event = {
				on_action = ip_mon_42_plot_early
				days = { 30 60 }
			}
		}
	}
}

ip_monarchy.43 = { # Consort Chain 1.2 - Rumours
	type = country_event
	title = "ip_monarchy.43.t"
	desc = {
		first_valid = {
			triggered_desc = { # Investigation
				trigger = {
					has_variable = ip_mon_42_investigation
					NOT = { has_variable = ip_mon_42_investigation_discovered }
				}
				desc = "ip_monarchy.43.desc_1" 
			}
			triggered_desc = { # No investigation
				trigger = {
					always = yes
				}
				desc = "ip_monarchy.43.desc_2"
			}
		}
	}
	picture = throneroom	
	
	left_portrait = current_ruler
	left_portrait = primary_heir
	right_portrait = consort
	right_portrait = scope:ip_mon_42_consorts_heir

	trigger = {
		is_monarchy = yes
		scope:ip_mon_42_ruler = {
			is_alive = yes
			is_ruler = yes
			prisoner = no
			employer = ROOT
		}
		scope:ip_mon_42_primary_heir = {
			is_alive = yes
			is_primary_heir = yes
			prisoner = no
			employer = ROOT
		}
		scope:ip_mon_42_consort = {
			is_alive = yes
			prisoner = no
			employer = ROOT
			loyalty <= 60
			this = root.consort
		}
		scope:ip_mon_42_consorts_heir = {
			is_alive = yes
			prisoner = no
			employer = ROOT
			is_pretender = yes
			NOT = { is_primary_heir = yes }
		}
	}
	
	option = { # Only rumours
		name = "ip_monarchy.43.a"
		custom_tooltip = no_action_taken_tooltip
		trigger_event = {
			on_action = ip_mon_42_plot_late
			days = { 30 60 }
		}
	}
	
	option = { # Offer to make child important in other ways
		name = "ip_monarchy.43.b"
		#custom_tooltip = ip_monarchy.43.bt1
		scope:ip_mon_42_consort = {
			add_loyalty = loyalty_consort_bought_off
		}
		if = {
			limit = {
				scope:ip_mon_42_consorts_heir = {
					age >= 16
				}
			}
			scope:ip_mon_42_consorts_heir = {
				add_loyalty = loyalty_consorts_heir_ignored
			}
		}
		scope:ip_mon_42_consorts_heir = {
			add_character_modifier = {
				name = nominated_heir_modifier
			}
			add_popularity = popularity_large	
		}
		set_variable = {
			name = ip_mon_42_elevated_pretender
		}
		if = {
			limit = {
				scope:ip_mon_42_consort = {
					any_child = {
						employer = root
						NOT = { is_child_of = root.current_ruler }
						age >= 16
					}
				}
			}
			custom_tooltip = ip_monarchy.43.bt2
			hidden_effect = {
				scope:ip_mon_42_consort = {
					every_child = {
						limit = {
							employer = root
							NOT = { is_child_of = root.current_ruler }
							age >= 16
						}
						add_loyalty = loyalty_consort_children
					}
				}
			}
		}
		trigger_event = {
			on_action = ip_mon_42_plot_late
			days = { 30 60 }
		}
	}
	
	option = { # The pretender won't agree to this
		name = "ip_monarchy.43.c"
		trigger = {
			NOT = { has_variable = ip_mon_42_investigation }
			scope:ip_mon_42_consorts_heir = {
				age >= 16
				loyalty >= 60
				NOR = {
					has_trait = ambitious
					has_trait = crafty
					has_trait = jealous
				}
			}
			
		}
		custom_tooltip = ip_monarchy.43.ct
		trigger_event = {
			on_action = ip_mon_42_plot_late
			days = { 30 60 }
		}
	}
	
	option = { # Double the palace guard
		name = "ip_monarchy.43.d"
		trigger = {
			NOT = {
				has_variable = ip_mon_42_investigation
				has_variable = ip_mon_42_investigation_discovered
			}
		}
		add_tyranny = tyranny_small
		add_treasury = {
			value = has_monthly_income
			multiply = -1.2
		}
		set_variable = {
			name = ip_mon_42_doubled_guard
		}
		trigger_event = {
			on_action = ip_mon_42_plot_late
			days = { 30 60 } 
		}
	}
	
	option = { # Pre-emptive strike
		name = "ip_monarchy.43.e"
		trigger = {
			has_variable = ip_mon_42_investigation
			var:ip_mon_42_investigation >= 1
			NOT = { has_variable = ip_mon_42_investigation_discovered }
		}
		imprison = { target = scope:ip_mon_42_consort }
		if = {
			limit = {
				scope:ip_mon_42_primary_heir = {
					is_alive = yes
				}
			}
			scope:ip_mon_42_primary_heir = {
				add_loyalty = loyalty_heir_plot_support
			}
		}
		if = {
			limit = {
				scope:ip_mon_42_consort = {
					any_child = {
						employer = root
						NOT = { is_child_of = root.current_ruler }
						age >= 16
					}
				}
			}
			custom_tooltip = ip_monarchy.43.et
			hidden_effect = {
				scope:ip_mon_42_consort = {
					every_child = {
						limit = {
							employer = root
							NOT = { is_child_of = root.current_ruler }
							age >= 16
						}
						add_loyalty = loyalty_consort_plot_scuppered
					}
				}
			}
		}
		add_tyranny = tyranny_medium
		remove_variable = ip_mon_42_investigation
	}
	
	option = { # Catch them in the act
		name = "ip_monarchy.43.f"
		trigger = {
			has_variable = ip_mon_42_investigation
			var:ip_mon_42_investigation >= 1
			NOT = { has_variable = ip_mon_42_investigation_discovered }
		}
		if = {
			limit = {
				scope:ip_mon_42_primary_heir = {
					is_alive = yes
				}
			}
			scope:ip_mon_42_primary_heir = {
				add_loyalty = loyalty_heir_risks_taken
			}
			set_variable = {
				name = ip_mon_42_red_handed
			}
			custom_tooltip = ip_monarchy.43.ft 
			hidden_effect = {
				trigger_event = {
					on_action = ip_mon_42_plot_late
					days = { 30 60 }
				}
			}
		}
	}
}

ip_monarchy.44 = { # Consort Chain 1.3 - Investigation Discovered
	type = country_event
	title = "ip_monarchy.44.t"
	desc = "ip_monarchy.44.desc"
	picture = greek_court	
	
	left_portrait = current_ruler
	left_portrait = primary_heir
	right_portrait = consort
	right_portrait = scope:ip_mon_42_consorts_heir

	trigger = {
		is_monarchy = yes
		scope:ip_mon_42_ruler = {
			is_alive = yes
			is_ruler = yes
			prisoner = no
			employer = ROOT
		}
		scope:ip_mon_42_primary_heir = {
			is_alive = yes
			is_primary_heir = yes
			prisoner = no
			employer = ROOT
		}
		scope:ip_mon_42_consort = {
			is_alive = yes
			prisoner = no
			employer = ROOT
			this = root.consort
		}
		scope:ip_mon_42_consorts_heir = {
			is_alive = yes
			prisoner = no
			employer = ROOT
			is_pretender = yes
			NOT = { is_primary_heir = yes }
		}
		primary_heir = {
			NOT = { has_same_family = scope:ip_mon_42_consort }
		}
		has_variable = ip_mon_42_investigation
		NOT = {
			has_variable = ip_mon_42_investigation_discovered
		}
	}
	
	immediate = {
		set_variable = {
			name = ip_mon_42_investigation_discovered
		}
	}
	
	option = {
		name = "ip_monarchy.44.a"
		current_ruler = {
			add_popularity = subtract_popularity_medium
		}
		scope:ip_mon_42_consort = {
			add_loyalty = loyalty_surveillance_discovered
		}
		if = {
			limit = {
				scope:ip_mon_42_consorts_heir = {
					age >= 16
				}
			}
			scope:ip_mon_42_consorts_heir = {
				add_loyalty = loyalty_surveillance_discovered
			}
		}
		trigger_event = {
			on_action = ip_mon_42_plot_early
			days = { 30 60 }
		}
	}
}

ip_monarchy.45 = { # Consort Chain 1.4 - Fizzle
	type = country_event
	title = "ip_monarchy.45.t"
	desc = "ip_monarchy.45.desc"
	picture = greek_court	
	
	left_portrait = current_ruler
	left_portrait = primary_heir
	right_portrait = consort
	right_portrait = scope:ip_mon_42_consorts_heir

	trigger = {
		is_monarchy = yes
	}
	
	option = {
		name = "ip_monarchy.45.a"
		ip_mon_42_end_plot_effect = yes
	}
}

ip_monarchy.46 = { # Consort Chain 1.5 - Murder
	type = country_event
	title = "ip_monarchy.46.t"
	desc = {
		first_valid = {
			triggered_desc = { # Success
				trigger = {
					NOR = {
						has_variable = ip_mon_42_doubled_guard
						has_variable = ip_mon_42_red_handed
					}
				}
				desc = "ip_monarchy.46.desc_1"
			}
			triggered_desc = { # Doubled Guard
				trigger = {
					has_variable = ip_mon_42_doubled_guard
					NOR = { 
						has_variable = ip_mon_42_red_handed
					}
				}
				desc = "ip_monarchy.46.desc_2"
			}
			triggered_desc = { # Red Handed
				trigger = {
					always = yes
				}
				desc = "ip_monarchy.46.desc_3"
			}
		}
	}
	picture = assassination	
	
	left_portrait = current_ruler
	left_portrait = scope:ip_mon_42_primary_heir
	right_portrait = consort
	right_portrait = scope:ip_mon_42_consorts_heir

	trigger = {
		is_monarchy = yes
		scope:ip_mon_42_ruler = {
			is_alive = yes
			is_ruler = yes
			prisoner = no
			employer = ROOT
		}
		scope:ip_mon_42_primary_heir = {
			is_alive = yes
			is_primary_heir = yes
			prisoner = no
			employer = ROOT
		}
		scope:ip_mon_42_consort = {
			is_alive = yes
			prisoner = no
			employer = ROOT
			loyalty <= 60
			this = root.consort
		}
		scope:ip_mon_42_consorts_heir = {
			is_alive = yes
			prisoner = no
			employer = ROOT
			is_pretender = yes
		}
	}
	
	immediate = {
		if = {
			limit = {
				NOR = {
					has_variable = ip_mon_42_red_handed
					has_variable = ip_mon_42_doubled_guard
				}
			}
			scope:ip_mon_42_primary_heir = {
				death = { killer = scope:ip_mon_42_consort death_reason = death_poisoning }
			}
			hidden_effect = {
				scope:ip_mon_42_consorts_heir = {
					remove_character_modifier = elevated_pretender_charmod
				}
			}
		}
	}
	
	option = { # It could have been anyone
		name = "ip_monarchy.46.a"
		trigger = {
			NOR = {
				has_variable = ip_mon_42_red_handed
				has_variable = ip_mon_42_doubled_guard
			}
		}
		scope:ip_mon_42_consort = {
			add_loyalty = loyalty_consort_plot_success
			add_popularity = popularity_large
		}
		scope:ip_mon_42_consorts_heir = {
			add_loyalty = loyalty_consort_plot_success
		}
		ip_mon_42_end_plot_effect = yes
	}
	
	option = { # It was obviously consort
		name = "ip_monarchy.46.b"
		trigger = {
			NOR = {
				has_variable = ip_mon_42_red_handed
				has_variable = ip_mon_42_doubled_guard
			}
		}
		imprison = { target = scope:ip_mon_42_consort }
		scope:ip_mon_42_consorts_heir = {
			add_loyalty = loyalty_consort_plot_scuppered
		}
		add_tyranny = tyranny_medium
		ip_mon_42_end_plot_effect = yes
	}
	
	option = {
		name = "ip_monarchy.46.c" # Crucify
		trigger = {
			OR = {
				has_variable = ip_mon_42_doubled_guard
				has_variable = ip_mon_42_red_handed
			}
		}
		scope:ip_mon_42_consort = {
			death = { killer = root.current_ruler death_reason = death_crucified }
		}
		scope:ip_mon_42_primary_heir = {
			add_loyalty = loyalty_heir_execution
		}
		scope:ip_mon_42_consorts_heir = {
			add_loyalty = loyalty_consort_execution
		}
		add_tyranny = tyranny_medium
		ip_mon_42_end_plot_effect = yes
	}
	
	option = { # Imprison
		name = "ip_monarchy.46.d"
		trigger = {
			OR = {
				has_variable = ip_mon_42_doubled_guard
				has_variable = ip_mon_42_red_handed
			}
		}
		imprison = { target = scope:ip_mon_42_consort }
		scope:ip_mon_42_consort = {
			add_popularity = subtract_popularity_huge
			add_prominence = subtract_prominence_huge
		}
		scope:ip_mon_42_primary_heir = {
			add_loyalty = loyalty_heir_imprison
		}
		scope:ip_mon_42_consorts_heir = {
			add_loyalty = loyalty_heir_imprison_2
		}
		ip_mon_42_end_plot_effect = yes
	}
	
	option = { # Send away
		name = "ip_monarchy.46.e"
		highlight = yes
		trigger = {
			current_ruler = {
				has_trait = merciful
			}
			OR = {
				has_variable = ip_mon_42_doubled_guard
				has_variable = ip_mon_42_red_handed
			}
		}
		custom_tooltip = merciful_tooltip
		current_ruler = {
			divorce_character = scope:ip_mon_42_consort
		}
		scope:ip_mon_42_consort = {
			add_loyalty = loyalty_consort_spared
			add_popularity = subtract_popularity_huge
			add_prominence = subtract_prominence_huge
			add_character_modifier = {
				name = house_arrest_charmod
				duration = -1
			}
		}
		scope:ip_mon_42_primary_heir = {
			add_loyalty = loyalty_heir_spared
		}
		scope:ip_mon_42_consorts_heir = {
			add_loyalty = loyalty_consort_spared
		}
		ip_mon_42_end_plot_effect = yes
	}
	
	option = { # Tit for tat
		name = "ip_monarchy.46.f"
		highlight = yes
		trigger = {
			current_ruler = {
				has_trait = lunatic
			}
			NOR = {
				has_variable = ip_mon_42_red_handed
				has_variable = ip_mon_42_doubled_guard
			}
		}
		scope:ip_mon_42_consort = {
			add_loyalty = loyalty_consort_eye_for_eye
		}
		imprison = { target = scope:ip_mon_42_consort }
		scope:ip_mon_42_consorts_heir = { 
			death = { killer = root.current_ruler death_reason = death_crucified }
		}
		add_tyranny = tyranny_large
		custom_tooltip = lunatic_tooltip
		ip_mon_42_end_plot_effect = yes
	}
	
		
	option = { # MY BOY
		name = "ip_monarchy.46.g"
		highlight = yes
		trigger = {
			current_ruler = {
				has_trait = lunatic
			}
			has_variable = ip_mon_42_red_handed
		}
		scope:ip_mon_42_consort = {
			death = { killer = root.current_ruler death_reason = death_stabbing }
		}
		scope:ip_mon_42_primary_heir = {
			add_loyalty = loyalty_heir_my_boy
		}
		scope:ip_mon_42_consorts_heir = {
			add_loyalty = loyalty_consort_my_boy
		}
		add_tyranny = tyranny_huge
		ip_mon_42_end_plot_effect = yes
		custom_tooltip = lunatic_tooltip
	}
}

ip_monarchy.47 = { # Consort 2.1 - Consort assistance
	type = country_event
	title = "ip_monarchy.47.t"
	desc = "ip_monarchy.47.desc"
	picture = greek_court	
	
	left_portrait = current_ruler
	right_portrait = scope:ip_mon_47_consort

	trigger = {
		is_monarchy = yes
		current_ruler = {
			age < 16
			prisoner = no
		}
		OR = {
			AND = {
				current_ruler.father = {
					OR = {
						martial > 4
						finesse > 4
						charisma > 4
						zeal > 4
					}
					prisoner = no
					is_alive = yes
					is_previous_ruler = no
					employer = ROOT
				}
				current_ruler.mother = {
					is_previous_ruler = yes
					OR = {
						NOT = { employer = root }
						is_alive = no
					}
				}
			}
			AND = {
				current_ruler.mother = {
					OR = {
						martial > 4
						finesse > 4
						charisma > 4
						zeal > 4
					}
					prisoner = no
					is_alive = yes
					is_previous_ruler = no
					employer = ROOT
				}
				current_ruler.father = {
					is_previous_ruler = yes
					OR = {
						NOT = { employer = root }
						is_alive = no
					}
				}
			}
		}
	}
	
	immediate = {
		current_ruler = {
			save_scope_as = ip_mon_47_child
		}
		if = {
			limit = {
				current_ruler.mother  = {
					is_alive = yes
				}
			}
			current_ruler.mother = {
				save_scope_as = ip_mon_47_consort
				set_variable = {
					name = ip_mon_47_regent_consort
					days = -1
				}
			}
		}
		else = {
			current_ruler.father = {
				save_scope_as = ip_mon_47_consort
				set_variable = {
					name = ip_mon_47_regent_consort
					days = -1
				}
			}
		}
	}
	
	option = { # Authorise 
		name = "ip_monarchy.47.a"
		set_variable = {
			name = ip_mon_47_regency
			days = -1
		}
		if = {
			limit = {
				OR = {
					scope:ip_mon_47_consort.martial >= 4
					scope:ip_mon_47_consort.finesse >= 4
					scope:ip_mon_47_consort.charisma >= 4
					scope:ip_mon_47_consort.zeal >= 4
				}
			}
			if = {
				limit = {
					scope:ip_mon_47_consort.charisma >= scope:ip_mon_47_consort.finesse
					scope:ip_mon_47_consort.charisma >= scope:ip_mon_47_consort.martial
					scope:ip_mon_47_consort.charisma >= scope:ip_mon_47_consort.zeal
				}
				if = {
					limit = {
						scope:ip_mon_47_consort.charisma <= 5
					}
					scope:ip_mon_47_child = {
						add_character_modifier = {
							name = charisma_regent_1_charmod
							duration = -1
						}
					}
				}
				else = {
					scope:ip_mon_47_child = {
						add_character_modifier = {
							name = charisma_regent_2_charmod
							duration = -1
						}
					}
				}
			}
			else_if = {
				limit = {
					scope:ip_mon_47_consort.finesse >= scope:ip_mon_47_consort.charisma
					scope:ip_mon_47_consort.finesse >= scope:ip_mon_47_consort.martial
					scope:ip_mon_47_consort.finesse >= scope:ip_mon_47_consort.zeal
				}
				if = {
					limit = {
						scope:ip_mon_47_consort.finesse <= 5
					}
					scope:ip_mon_47_child = {
						add_character_modifier = {
							name = finesse_regent_1_charmod
							duration = -1
						}
					}
				}
				else = {
					scope:ip_mon_47_child = {
						add_character_modifier = {
							name = finesse_regent_2_charmod
							duration = -1
						}
					}
				}
			}
			else_if = {
				limit = {
					scope:ip_mon_47_consort.zeal >= scope:ip_mon_47_consort.charisma
					scope:ip_mon_47_consort.zeal >= scope:ip_mon_47_consort.martial
					scope:ip_mon_47_consort.zeal >= scope:ip_mon_47_consort.finesse
				}
				if = {
					limit = {
						scope:ip_mon_47_consort.zeal <= 5
					}
					scope:ip_mon_47_child = {
						add_character_modifier = {
							name = zeal_regent_1_charmod
							duration = -1
						}
					}
				}
				else = {
					scope:ip_mon_47_child = {
						add_character_modifier = {
							name = zeal_regent_2_charmod
							duration = -1
						}
					}
				}
			}
			else = {
				if = {
					limit = {
						scope:ip_mon_47_consort.martial <= 5
					}
					scope:ip_mon_47_child = {
						add_character_modifier = {
							name = martial_regent_1_charmod
							duration = -1
						}
					}
				}
				else = {
					scope:ip_mon_47_child = {
						add_character_modifier = {
							name = martial_regent_2_charmod
							duration = -1
						}
					}
				}
			}
		}
		scope:ip_mon_47_consort = {
			add_prominence = prominence_huge
			add_loyalty = loyalty_consort_regency_approved
		}
		scope:ip_mon_47_child = {
			set_variable = {
				name = ip_mon_47_regent_child
				days = -1
			}
		}
		custom_tooltip = ip_monarchy.47.at
	}
	
	option = { # Refuse 
		name = "ip_monarchy.47.b"
		scope:ip_mon_47_consort = {
			add_loyalty = loyalty_consort_regency_refused
			add_prominence = subtract_prominence_large
		}
	}
}

ip_monarchy.48 = { # Consort 2.2 - Consort boon
	type = country_event
	title = "ip_monarchy.48.t"
	desc = "ip_monarchy.48.desc"
	picture = greek_philosophers	
	
	left_portrait = current_ruler
	right_portrait = scope:ip_mon_47_consort

	trigger = {
		is_monarchy = yes
		has_variable = ip_mon_47_regency
		current_ruler = {
			has_variable = ip_mon_47_regent_child
			age < 16
			prisoner = no
			employer = ROOT
		}
		any_character = {
			has_variable = ip_mon_47_regent_consort
			OR = {
				martial >= 5
				finesse >= 5
				charisma >= 5
				zeal >= 5
			}
		}
		NOT = { has_variable = ip_47_regency_boon_cooldown }
	}
	
	immediate = {
		set_variable = {
			name = ip_47_regency_boon_cooldown
			days = 3650 # 10 years
		}
		current_ruler = {
			save_scope_as = ip_mon_47_child
		}
		random_character = {
			limit = {
				has_variable = ip_mon_47_regent_consort
				OR = {
					martial >= 5
					finesse >= 5
					charisma >= 5
					zeal >= 5
				}
			}
			save_scope_as = ip_mon_47_consort
		}
	}
	
	option = { # Martial
		name = "ip_monarchy.48.a"
		trigger = {
			OR = {
				current_ruler = { has_character_modifier = martial_regent_1_charmod }
				current_ruler = { has_character_modifier = martial_regent_2_charmod }
			}		
		}
		scope:ip_mon_47_consort = {
			add_popularity = popularity_medium
		}
		add_country_modifier = {
			name = ip_mon_regent_martial_1_cmod
			duration = 1825 # 5 years
		}
		add_political_influence = subtract_influence_large
	}
	
	option = { # Martial
		name = "ip_monarchy.48.b"
		trigger = {
			OR = {
				current_ruler = { has_character_modifier = martial_regent_1_charmod }
				current_ruler = { has_character_modifier = martial_regent_2_charmod }
			}		
		}
		scope:ip_mon_47_consort = {
			add_popularity = popularity_medium
		}
		add_country_modifier = {
			name = ip_mon_regent_martial_2_cmod
			duration = 1825 # 5 years
		}
		add_political_influence = subtract_influence_large
	}
	
	option = { # Finesse
		name = "ip_monarchy.48.c"
		trigger = {
			OR = {
				current_ruler = { has_character_modifier = finesse_regent_1_charmod }
				current_ruler = { has_character_modifier = finesse_regent_2_charmod }
			}		
		}
		scope:ip_mon_47_consort = {
			add_popularity = popularity_medium
		}
		add_country_modifier = {
			name = ip_mon_regent_finesse_1_cmod
			duration = 1825 # 5 years
		}
		add_political_influence = subtract_influence_large
	}
	
	option = { # Finesse
		name = "ip_monarchy.48.d"
		trigger = {
			OR = {
				current_ruler = { has_character_modifier = finesse_regent_1_charmod }
				current_ruler = { has_character_modifier = finesse_regent_2_charmod }
			}		
		}
		scope:ip_mon_47_consort = {
			add_popularity = popularity_medium
		}
		add_country_modifier = {
			name = ip_mon_regent_finesse_2_cmod
			duration = 1825 # 5 years
		}
		add_political_influence = subtract_influence_large
	}
	
	option = { # Charisma
		name = "ip_monarchy.48.e"
		trigger = {
			OR = {
				current_ruler = { has_character_modifier = charisma_regent_1_charmod }
				current_ruler = { has_character_modifier = charisma_regent_2_charmod }
			}		
		}
		scope:ip_mon_47_consort = {
			add_popularity = popularity_medium
		}
		add_country_modifier = {
			name = ip_mon_regent_charisma_1_cmod
			duration = 1825 # 5 years
		}
		add_political_influence = subtract_influence_large
	}
	
	option = { # Charisma
		name = "ip_monarchy.48.f"
		trigger = {
			OR = {
				current_ruler = { has_character_modifier = charisma_regent_1_charmod }
				current_ruler = { has_character_modifier = charisma_regent_2_charmod }
			}		
		}
		scope:ip_mon_47_consort = {
			add_popularity = popularity_medium
		}
		add_country_modifier = {
			name = ip_mon_regent_charisma_2_cmod
			duration = 1825 # 5 years
		}
		add_political_influence = subtract_influence_large
	}
	
	option = { # Zeal
		name = "ip_monarchy.48.g"
		trigger = {
			OR = {
				current_ruler = { has_character_modifier = zeal_regent_1_charmod }
				current_ruler = { has_character_modifier = zeal_regent_2_charmod }
			}		
		}
		scope:ip_mon_47_consort = {
			add_popularity = popularity_medium
		}
		add_country_modifier = {
			name = ip_mon_regent_zeal_1_cmod
			duration = 1825 # 5 years
		}
		add_political_influence = subtract_influence_large
	}
	
	option = { # Zeal
		name = "ip_monarchy.48.h"
		trigger = {
			OR = {
				current_ruler = { has_character_modifier = zeal_regent_1_charmod }
				current_ruler = { has_character_modifier = zeal_regent_2_charmod }
			}		
		}
		scope:ip_mon_47_consort = {
			add_popularity = popularity_medium
		}
		add_country_modifier = {
			name = ip_mon_regent_zeal_2_cmod
			duration = 1825 # 5 years
		}
		add_political_influence = subtract_influence_large
	}
	
	option = { # Reject
		name = "ip_monarchy.48.i"
		scope:ip_mon_47_consort = {
			add_loyalty = loyalty_consort_regency_uninterested
		}
	}
}

ip_monarchy.49 = { # Consort 2.3 - Variable clearer
	type = country_event
	hidden = yes
	
	trigger = {
		has_variable = ip_mon_47_regency
		any_character = {
			has_variable = ip_mon_47_regent_consort	
		}
	}
	
	immediate = {
		remove_variable = ip_mon_47_regency
		random_character = {
			limit = {
				has_variable = ip_mon_47_regent_consort
			}
			remove_variable = ip_mon_47_regent_consort
		}
	}
}

ip_monarchy.52 = { # Consort 2.6 - Consort handover (consort death or ruler turns 16)
	type = country_event
	title = "ip_monarchy.52.t"
	desc = {
		first_valid = {
			triggered_desc = { # Dead
				trigger = {
					NOT = {
						scope:ip_mon_47_consort = {
							is_alive = yes
						}
					}
				}
				desc = "ip_monarchy.52.desc_1"
			}
			triggered_desc = { # Alive
				trigger = {
					always = yes
				}
				desc = "ip_monarchy.52.desc_2"
			}
		}
	}
	picture = greek_court	
	
	left_portrait = current_ruler
	right_portrait = scope:ip_mon_47_consort

	trigger = {
		is_monarchy = yes
		has_variable = ip_mon_47_regency
		current_ruler = {
			has_variable = ip_mon_47_regent_child
			prisoner = no
			employer = ROOT
		}
	}
	
	immediate = {
		current_ruler = {
			remove_variable = ip_mon_47_regent_child
			save_scope_as = ip_mon_47_child
		}
		if = {
			limit = {
				any_character = {
					has_variable = ip_mon_47_regent_consort 
					prisoner = no
				}
			}
			random_character = {
				limit = {
					has_variable = ip_mon_47_regent_consort
				}
				remove_variable = ip_mon_47_regent_consort
				save_scope_as = ip_mon_47_consort
			}
		}
		remove_variable = ip_mon_47_regency
	}
	
	option = { 
		name = "ip_monarchy.52.a"
		scope:ip_mon_47_child = {
			add_popularity = popularity_small
			if = {
				limit = {
					remove_regent_modifier_trigger = yes
				}
			}
			remove_regent_modifier_effect = yes
		}
		if = {
			limit = {
				exists = scope:ip_mon_47_consort
				scope:ip_mon_47_consort = {
					is_alive = yes
				}
			}
			scope:ip_mon_47_consort = {
				add_popularity = popularity_small
			}
			add_legitimacy = legitimacy_small
		}
		else = {
			if = {
				limit = {
					current_ruler = {
						age > 10
					}
				}
				random_list = {
					50 = {
						current_ruler = {
							add_trait = mourning
						}
					}
					50 = {}
				}
			}
			add_legitimacy = subtract_legitimacy_medium
		}
	}
}

ip_monarchy.53 = { # Consort 2.7 - Delayed trigger for .47
	type = country_event
	hidden = yes
	
	trigger = {
		is_monarchy = yes
		has_primary_heir = yes
		OR = {
			country_culture_group = hellenic
			primary_culture = egyptian
		}
		root.primary_heir = {
			age < 16
			prisoner = no
		}
		OR = {
			AND = {
				exists = root.primary_heir.father
				root.primary_heir.father = {
					OR = {
						martial > 4
						finesse > 4
						charisma > 4
						zeal > 4
					}
					is_alive = yes
					is_previous_ruler = no
					is_married = yes
					is_spouse_of = root.primary_heir.mother
					employer = ROOT
				}
			}
			AND = {
				exists = root.primary_heir.mother
				root.primary_heir.mother = {
					OR = {
						martial > 4
						finesse > 4
						charisma > 4
						zeal > 4
					}
					is_alive = yes
					is_previous_ruler = no
					is_married = yes
					is_spouse_of = root.primary_heir.father
					employer = ROOT
				}
			}
		}
		OR = {
			AND = {
				exists = root.primary_heir.father
				root.primary_heir.father = {
					is_previous_ruler = yes
					is_married = yes
					is_spouse_of = root.primary_heir.mother
				}
			}
			AND = {
				exists = root.primary_heir.mother
				root.primary_heir.mother = {
					is_previous_ruler = yes
					is_married = yes
					is_spouse_of = root.primary_heir.father
				}
			}
		}
	}
	
	immediate = { # 50 percent chance
		random_list = {
			1 = {
				root = {
					trigger_event = {
						id = ip_monarchy.47
						days = 1
					}
				}
			}
			1 = {}
		}
	}
}

ip_monarchy.54 = { # Consort Chain 3.1 - Conspiracy to kill ruler
	type = country_event
	title = "ip_monarchy.54.t"
	desc = "ip_monarchy.54.desc"
	picture = greek_court
	
	left_portrait = current_ruler
	right_portrait = consort
	right_portrait = primary_heir

	trigger = {
		is_monarchy = yes
		current_ruler = {
			is_married = yes
		}
		primary_heir = {
			is_child_of = root.current_ruler
			is_child_of = root.consort
		}
		consort = {
			OR = {
				has_trait = ambitious
				has_trait = crafty
				has_trait = jealous
				has_trait = deceitful
				has_trait = lunatic
				has_trait = selfish
			}
			loyalty <= 90
		}
		NOR = {
			has_variable = ip_mon_54_cooldown
			has_variable = ongoing_plot
		}
	}
	
	immediate = {
		set_variable = {
			name = ip_mon_54_cooldown
			days = 14600 # 40 years
		}
		set_variable = {
			name = ongoing_plot
		}
		current_ruler = {
			save_scope_as = ip_mon_54_ruler
		}
		current_ruler.spouse = {
			save_scope_as = ip_mon_54_consort
		}
		primary_heir = {
			save_scope_as = ip_mon_54_primary_heir
		}
	}
	
	option = { # She would never!
		name = "ip_monarchy.54.a"
		custom_tooltip = plot_event_chain_tooltip
		scope:ip_mon_54_consort = {
			add_loyalty = loyalty_consort_plot_ignored
		}
		hidden_effect = {
			trigger_event = {
				on_action = ip_mon_54_plot_early
				days = { 30 60 }
			}
		}
	}
	
	option = { # Investigate
		name = "ip_monarchy.54.b"
		set_variable = {
			name = ip_mon_54_investigation
			value = 1
		}
		custom_tooltip = plot_event_chain_tooltip
		custom_tooltip = "ip_monarchy.54.bt"
		add_treasury = {
			value = has_monthly_income
			multiply = -2
		}
		hidden_effect = {
			trigger_event = {
				on_action = ip_mon_54_plot_early
				days = { 30 60 }
			}
		}
	}
}

ip_monarchy.55 = { # Consort Chain 3.2 - Rumours
	type = country_event
	title = "ip_monarchy.55.t"
	desc = {
		first_valid = {
			triggered_desc = { # Investigation
				trigger = {
					has_variable = ip_mon_54_investigation
					NOT = { has_variable = ip_mon_54_investigation_discovered }
				}
				desc = "ip_monarchy.55.desc_1"
			}
			triggered_desc = { # No Investigation
				trigger = {
					always = yes
				}
				desc = "ip_monarchy.55.desc_2"
			}
		}
	}
	picture = throneroom	
	
	left_portrait = current_ruler
	right_portrait = consort
	right_portrait = primary_heir

	trigger = {
		is_monarchy = yes
		scope:ip_mon_54_ruler = {
			is_alive = yes
			is_ruler = yes
			prisoner = no
			employer = ROOT
		}
		scope:ip_mon_54_primary_heir = {
			is_alive = yes
			is_primary_heir = yes
			prisoner = no
			employer = ROOT
		}
		scope:ip_mon_54_consort = {
			is_alive = yes
			prisoner = no
			employer = ROOT
			loyalty <= 60
			this = root.consort
		}
	}
	
	option = { # Only rumours
		name = "ip_monarchy.55.a"
		custom_tooltip = no_action_taken_tooltip
		trigger_event = {
			on_action = ip_mon_54_plot_late
			days = { 30 60 }
		}
	}
	
	option = { # Try and win her over
		name = "ip_monarchy.55.b"
		scope:ip_mon_54_consort = {
			add_loyalty = loyalty_consort_bought_off
		}
		add_treasury = {
			value = has_monthly_income
			multiply = -2.4
		}
		custom_tooltip = ip_monarchy.55.bt
		hidden_effect = {
			scope:ip_mon_54_consort = {
				every_child = {
					limit = {
						employer = root
						NOT = { is_child_of = root.current_ruler }
						age >= 16
					}
					add_loyalty = loyalty_consort_children
				}
			}
		}
		trigger_event = {
			on_action = ip_mon_54_plot_late
			days = { 30 60 }
		}
	}
	
	option = { # The heir wouldn't agree to this
		name = "ip_monarchy.55.c"
		trigger = {
			NOT = { has_variable = ip_mon_54_investigation }
			scope:ip_mon_54_primary_heir = {
				age >= 16
				OR = {
					loyalty >= 60
					NOR = {
						has_trait = ambitious
						has_trait = crafty
						has_trait = jealous
					}
				}
			}
		}
		hidden_effect = {
			scope:ip_mon_54_consort = {
				add_loyalty = loyalty_consort_convinced
			}
		}
		custom_tooltip = ip_monarchy.55.ct
		trigger_event = {
			on_action = ip_mon_54_plot_fallback
			days = { 30 60 }
		}
	}
	
	option = { # Ensure safety of ruler
		name = "ip_monarchy.55.d"
		trigger = {
			NAND = {
				has_variable = ip_mon_54_investigation
				has_variable = ip_mon_54_investigation_discovered
			}
		}
		current_ruler = {
			add_popularity = subtract_popularity_medium
		}
		add_tyranny = tyranny_medium
		set_variable = {
			name = ip_mon_54_ensure
		}
		trigger_event = {
			on_action = ip_mon_54_plot_late
			days = { 30 60 }
		}
	}
	
	option = { # Pre-emptive strike
		name = "ip_monarchy.55.e"
		trigger = {
			has_variable = ip_mon_54_investigation
			var:ip_mon_54_investigation >= 1
			NOT = { has_variable = ip_mon_54_investigation_discovered }
		}
		imprison = { target = scope:ip_mon_54_consort }
		if = {
			limit = {
				scope:ip_mon_54_consort = {
					any_child = {
						NOT = { is_child_of = root.current_ruler }
						age >= 16
					}
				}
			}
			custom_tooltip = ip_monarchy.55.et
			hidden_effect = {
				scope:ip_mon_54_consort = {
					every_child = {
						limit = {
							employer = root
							NOT = { is_child_of = root.current_ruler }
							age >= 16
						}
						add_loyalty = loyalty_consort_imprison
					}
				}
			}
		}
		add_tyranny = tyranny_medium
		remove_variable = ip_mon_54_investigation
	}
	
	option = { # Ruler will solve this 
		name = "ip_monarchy.55.f"
		highlight = yes
		trigger = {
			has_variable = ip_mon_54_investigation
			var:ip_mon_54_investigation >= 1
			NOT = { has_variable = ip_mon_54_investigation_discovered }
			current_ruler = {
				martial >= 4
				NOT = {
					has_trait = forgiving
				}
			}
		}
		hidden_effect = {
			random_list = {
				1 = {
					modifier = {
						add = {
							value = 0.25
							multiply = current_ruler.martial
						}
					}
					set_variable = ip_mon_54_ruler_resolution_ruler
				}
				1 = {
					modifier = {
						add = {
							value = 0.25
							multiply = consort.martial
						}
					}
					set_variable = ip_mon_54_ruler_resolution_consort
				}
			}
		}
		custom_tooltip = ip_monarchy.55.ft 
		hidden_effect = {
			trigger_event = {
				on_action = ip_mon_54_plot_late
				days = { 30 60 }
			}
		}
	}
}

ip_monarchy.56 = { # Consort Chain 3.3 - Investigation Discovered
	type = country_event
	title = "ip_monarchy.56.t"
	desc = "ip_monarchy.56.desc"
	picture = greek_court	
	
	left_portrait = current_ruler
	right_portrait = consort
	right_portrait = primary_heir

	trigger = {
		is_monarchy = yes
		scope:ip_mon_54_ruler = {
			is_alive = yes
			is_ruler = yes
			prisoner = no
			employer = ROOT
		}
		scope:ip_mon_54_primary_heir = {
			is_alive = yes
			is_primary_heir = yes
			prisoner = no
			employer = ROOT
		}
		scope:ip_mon_54_consort = {
			is_alive = yes
			prisoner = no
			employer = ROOT
			this = root.consort
		}
		has_variable = ip_mon_54_investigation
		NOT = {
			has_variable = ip_mon_54_investigation_discovered
		}
	}
	
	immediate = {
		set_variable = {
			name = ip_mon_54_investigation_discovered
		}
	}
	
	option = {
		name = "ip_monarchy.56.a"
		current_ruler = {
			add_popularity = subtract_popularity_medium
		}
		scope:ip_mon_54_consort = {
			add_loyalty = loyalty_surveillance_discovered
		}
		if = {
			limit = {
				scope:ip_mon_54_primary_heir = {
					age >= 16
				}
			}
			scope:ip_mon_54_primary_heir = {
				add_loyalty = loyalty_surveillance_discovered
			}
		}
		trigger_event = {
			on_action = ip_mon_54_plot_early
			days = { 30 60 }
		}
	}
}

ip_monarchy.57 = { # Consort Chain 3.4 - Fizzle
	type = country_event
	title = "ip_monarchy.57.t"
	desc = "ip_monarchy.57.desc"
	picture = greek_court	
	
	left_portrait = current_ruler
	right_portrait = consort
	right_portrait = primary_heir
	right_portrait = scope:ip_mon_54_assassin

	trigger = {
		is_monarchy = yes
	}
	
	option = {
		name = "ip_monarchy.57.a"
		ip_mon_54_end_plot_effect = yes
	}
}

ip_monarchy.58 = { # Consort Chain 3.5 - Murder
	type = country_event
	title = "ip_monarchy.58.t"
	desc = {
		first_valid = {
			triggered_desc = { # Success
				trigger = {
					NOR = {
						has_variable = ip_mon_54_ensure
						has_variable = ip_mon_54_ruler_resolution_consort
						has_variable = ip_mon_54_ruler_resolution_ruler
						scope:ip_mon_54_assassin = {
							has_office = office_master_of_the_guard
						}
					}
				}
				desc = "ip_monarchy.58.desc_1"
			}
			triggered_desc = { # Success Bodyguard
				trigger = {
					NOR = {
						has_variable = ip_mon_54_ensure
						has_variable = ip_mon_54_ruler_resolution_consort
						has_variable = ip_mon_54_ruler_resolution_ruler
					}
					scope:ip_mon_54_assassin = {
						has_office = office_master_of_the_guard
					}
				}
				desc = "ip_monarchy.58.desc_2"
			}
			triggered_desc = { # Ensured
				trigger = {
					has_variable = ip_mon_54_ensure
					NOR = { 
						has_variable = ip_mon_54_ruler_resolution_consort
						has_variable = ip_mon_54_ruler_resolution_ruler
						scope:ip_mon_54_assassin = {
							has_office = office_master_of_the_guard
						}
					}
				}
				desc = "ip_monarchy.58.desc_3"
			}
			triggered_desc = { # Ensured Bodyguard
				trigger = {
					has_variable = ip_mon_54_ensure
					NOR = { 
						has_variable = ip_mon_54_ruler_resolution_consort
						has_variable = ip_mon_54_ruler_resolution_ruler
					}
					scope:ip_mon_54_assassin = {
						has_office = office_master_of_the_guard
					}
				}
				desc = "ip_monarchy.58.desc_4"
			}
			triggered_desc = { # Consort Wins
				trigger = {
					has_variable = ip_mon_54_ruler_resolution_consort
					NOR = {
						has_variable = ip_mon_54_ensure
						has_variable = ip_mon_54_ruler_resolution_ruler
					}
				}
				desc = "ip_monarchy.58.desc_5"
			}
			triggered_desc = { # Ruler Wins
				trigger = {
					always = yes
				}
				desc = "ip_monarchy.58.desc_6"
			}
		}
	}
	picture = assassination	
	
	left_portrait = scope:ip_mon_54_ruler
	right_portrait = scope:ip_mon_54_consort
	left_portrait = scope:ip_mon_54_primary_heir
	right_portrait = scope:ip_mon_54_assassin

	trigger = {
		is_monarchy = yes
		scope:ip_mon_54_ruler = {
			is_alive = yes
			is_ruler = yes
			prisoner = no
			employer = ROOT
		}
		scope:ip_mon_54_primary_heir = {
			is_alive = yes
			is_primary_heir = yes
			prisoner = no
			employer = ROOT
		}
		scope:ip_mon_54_consort = {
			is_alive = yes
			prisoner = no
			employer = ROOT
			loyalty <= 60
			this = root.consort
		}
	}
	
	immediate = {
		if = {
			limit = {
				NOR = {
					has_variable = ip_mon_54_ruler_resolution_ruler
					has_variable = ip_mon_54_ruler_resolution_consort
				}
				any_character = {
					has_office = office_master_of_the_guard
					loyalty <= 50
					NOR = { 
						is_pretender = yes
						has_same_family = scope:ip_mon_54_consort
						has_same_family = scope:ip_mon_54_primary_heir
					}
				}
			}
			random_character = {
				limit = {
					has_office = office_master_of_the_guard
					loyalty <= 50
					NOR = { 
						is_pretender = yes
						has_same_family = scope:ip_mon_54_consort
						has_same_family = scope:ip_mon_54_primary_heir
					}
				}
				save_scope_as = ip_mon_54_assassin
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_variable = ip_mon_54_ruler_resolution_ruler
					has_variable = ip_mon_54_ruler_resolution_consort
				}
				any_character = {
					loyalty <= 50
					NOR = {
						has_any_office = yes
						is_general = yes
						is_admiral = yes
						age >= 35
						is_pretender = yes
						has_same_family = scope:ip_mon_54_consort
						has_same_family = scope:ip_mon_54_primary_heir
					}
				}
			}
			random_character = {
				limit = {
					loyalty <= 50
					NOR = {
						has_any_office = yes
						is_general = yes
						is_admiral = yes
						age >= 35
						is_pretender = yes
						has_same_family = scope:ip_mon_54_consort
						has_same_family = scope:ip_mon_54_primary_heir
					}
				}
				save_scope_as = ip_mon_54_assassin
			}
		}
		else = {
			create_character = {
				age = 26
				save_scope_as = ip_mon_54_assassin
			}
		}
		if = {
			limit = {
				NOR = {
					has_variable = ip_mon_54_ruler_resolution_ruler
					has_variable = ip_mon_54_ruler_resolution_consort
					has_variable = ip_mon_54_ensure
				}
				exists = scope:ip_mon_54_assassin
			}
			scope:ip_mon_54_ruler = {
				death = { death_reason = death_stabbing }
			}
			hidden_effect = {
				scope:ip_mon_54_assassin = {
					death = { death_reason = death_stabbing }
				}
			}
		}
	}
	
	option = { # It could have been anyone
		name = "ip_monarchy.58.a"
		trigger = {
			NOR = {
				has_variable = ip_mon_54_ruler_resolution_consort
				has_variable = ip_mon_54_ruler_resolution_ruler
				has_variable = ip_mon_54_ensure
			}
		}
		scope:ip_mon_54_consort = {
			add_loyalty = loyalty_consort_plot_success
		}
		ip_mon_54_end_plot_effect = yes
	}
	
	option = { # It was obviously consort
		name = "ip_monarchy.58.b"
		trigger = {
			NOR = {
				has_variable = ip_mon_54_ruler_resolution_consort
				has_variable = ip_mon_54_ruler_resolution_ruler
				has_variable = ip_mon_54_ensure
			}
		}
		imprison = { target = scope:ip_mon_54_consort }
		add_tyranny = tyranny_medium
		ip_mon_54_end_plot_effect = yes
	}
	
	option = {
		name = "ip_monarchy.58.c" # Execute
		trigger = {
			OR = {
				has_variable = ip_mon_54_ensure
				has_variable = ip_mon_54_ruler_resolution_ruler
				has_variable = ip_mon_54_ruler_resolution_consort
			}
		}
		if = {
			limit = {
				has_variable = ip_mon_54_ruler_resolution_consort
			}
			hidden_effect = {
				current_ruler = {
					death = { killer = scope:ip_mon_54_consort death_reason = death_stabbing }
				}
			}
			custom_tooltip = ip_mon_58_tt
		}
		scope:ip_mon_54_consort = {
			death = { killer = root.current_ruler death_reason = death_crucified }
		}
		scope:ip_mon_54_primary_heir = {
			add_loyalty = loyalty_heir_consort_execute_mother
		}
		if = {
			limit = {
				exists = scope:ip_mon_54_assassin
			}
			imprison = { target = scope:ip_mon_54_assassin }
		}
		add_tyranny = tyranny_medium
		ip_mon_54_end_plot_effect = yes
	}
	
	option = { # Imprison
		name = "ip_monarchy.58.d"
		trigger = {
			OR = {
				has_variable = ip_mon_54_ensure
				has_variable = ip_mon_54_ruler_resolution_ruler
				has_variable = ip_mon_54_ruler_resolution_consort
			}
		}
		if = {
			limit = {
				has_variable = ip_mon_54_ruler_resolution_consort
			}
			hidden_effect = {
				current_ruler = {
					death = { killer = scope:ip_mon_54_consort death_reason = death_stabbing }
				}
			}
			custom_tooltip = ip_mon_58_tt
		}
		imprison = { target = scope:ip_mon_54_consort }
		scope:ip_mon_54_consort = {
			add_popularity = subtract_popularity_huge
			add_prominence = subtract_prominence_huge
		}
		scope:ip_mon_54_primary_heir = {
			add_loyalty = loyalty_heir_imprison
		}
		if = {
			limit = {
				exists = scope:ip_mon_54_assassin
			}
			imprison = { target = scope:ip_mon_54_assassin }
		}
		ip_mon_54_end_plot_effect = yes
	}
	
	option = { # Send away
		name = "ip_monarchy.58.e"
		highlight = yes
		trigger = {
			current_ruler = {
				has_trait = merciful
				age >= 16
			}
			OR = {
				has_variable = ip_mon_54_ensure
				has_variable = ip_mon_54_ruler_resolution_ruler
				has_variable = ip_mon_54_ruler_resolution_consort
			}
		}
		if = {
			limit = {
				has_variable = ip_mon_54_ruler_resolution_consort
			}
			hidden_effect = {
				current_ruler = {
					death = { killer = scope:ip_mon_54_consort death_reason = death_stabbing }
				}
			}
			custom_tooltip = ip_mon_58_tt
		}
		custom_tooltip = merciful_tooltip
		current_ruler = {
			divorce_character = scope:ip_mon_54_consort
		}
		scope:ip_mon_54_consort = {
			add_loyalty = loyalty_consort_spared
			add_popularity = subtract_popularity_huge
			add_prominence = subtract_prominence_huge
			add_character_modifier = {
				name = house_arrest_charmod
				duration = -1
			}
		}
		scope:ip_mon_54_primary_heir = {
			add_loyalty = loyalty_heir_consort_spared_mother
		}
		if = {
			limit = {
				exists = scope:ip_mon_54_assassin
			}
			imprison = { target = scope:ip_mon_54_assassin }
		}
		ip_mon_54_end_plot_effect = yes
	}
	
	option = { # Lunatic
		name = "ip_monarchy.58.f"
		exclusive = yes
		trigger = {
			current_ruler = {
				has_trait = lunatic
			}
			has_variable = ip_mon_54_ruler_resolution_ruler
		}
		scope:ip_mon_54_consort = {
			death = { killer = root.current_ruler death_reason = death_stabbing }
		}
		scope:ip_mon_54_primary_heir = {
			add_loyalty = loyalty_lunatic_stab_heir_mother
		}
		add_tyranny = tyranny_large
		custom_tooltip = lunatic_bad_tooltip
		ip_mon_54_end_plot_effect = yes
	}
}

ip_monarchy.59 = { # Consort Chain 4.1 - Battle Consort
	type = country_event
	title = "ip_monarchy.59.t"
	desc = "ip_monarchy.59.desc"
	picture = throneroom	
	
	left_portrait = current_ruler
	right_portrait = consort

	trigger = {
		is_monarchy = yes
		war = yes
		root.current_ruler = {
			is_general = yes
			prisoner = no
			is_married = yes
		}
		root.consort = {
			is_alive = yes
			martial > 4 
			prisoner = no
		}
		NOR = {
			has_variable = ip_mon_59_cooldown
			has_variable = ip_mon_64_cooldown
		}
	}
	
	immediate = {
		set_variable = {
			name = ip_mon_59_cooldown
			days = 5475
		}
		current_ruler = { save_scope_as = ip_mon_59_ruler }
		consort = { save_scope_as = ip_mon_59_consort }
	}
	
	option = { # Saddle up
		name = "ip_monarchy.59.a"
		scope:ip_mon_59_consort = {
			add_loyalty = loyalty_saddle_up_consort
		}
		set_variable = {
			name = ip_mon_59_battle
			value = 0
			days = 3650 # 10 years
		}
		custom_tooltip = ip_monarchy.59.at
	}
	
	option = { # Forbid it
		name = "ip_monarchy.59.b"
		scope:ip_mon_59_consort = {
			add_loyalty = loyalty_saddle_up_consort_refused
		}
	}
}

ip_monarchy.60 = { # Consort Chain 4.2 - Battle Won
	type = country_event
	title = "ip_monarchy.60.t"
	desc = "ip_monarchy.60.desc"
	picture = epirote_phalanx	
	
	left_portrait = current_ruler
	right_portrait = consort

	trigger = {
		is_monarchy = yes
		current_ruler = {
			is_general = yes
			prisoner = no
			is_married = yes
		}
		consort = {
			prisoner = no
		}
		has_variable = ip_mon_59_battle
	}

	weight_multiplier = {
		base = 2
		modifier = {
			add = {
				value = 0.25
				multiply = consort.martial
			}
		}
	}
	
	immediate = {
		consort = {
			save_scope_as = ip_mon_59_consort
		}
		change_variable = {
			name = ip_mon_59_battle
			add = {
				integer_range = { min = 1 max = 3 }
			}
		}
	}
	
	option = {
		name = "ip_monarchy.60.a"
		consort = {
			add_loyalty = loyalty_victorious_consort
			add_popularity = popularity_large
			add_character_modifier = {
				name = victorious_consort_charmod # 1 martial and popularity gain
				duration = 1825 # 5 years
			}
		}
		custom_tooltip = consort_eager_no_more
		remove_variable = ip_mon_59_battle
	}
}

ip_monarchy.61 = { # Consort Chain 4.3 - Battle Won Wound/Death
	type = country_event
	title = "ip_monarchy.61.t"
	desc = "ip_monarchy.61.desc"
	picture = epirote_phalanx	
	
	left_portrait = current_ruler
	right_portrait = consort

	trigger = {
		is_monarchy = yes
		current_ruler = {
			is_general = yes
			prisoner = no
			is_married = yes
		}
		consort = {
			prisoner = no
		}
		has_variable = ip_mon_59_battle
	}
	
	immediate = {
		consort = {
			save_scope_as = ip_mon_59_consort
		}
		change_variable = {
			name = ip_mon_59_battle
			add = {
				integer_range = { min = 1 max = 3 }
			}
		}
		random_list = {
			20 = { 
				set_variable = {
					name = battle_injury
					value = {
						integer_range = { min = 1 max = 3 }
					}
				}
			}
			10 = { 
				set_variable = {
					name = battle_injury
					value = {
						integer_range = { min = 4 max = 6 }
					}
				}
			}
		}
	}
	
	option = { #
		name = "ip_monarchy.61.a"
		if = {
			limit = { root.var:battle_injury < 4 }
			scope:ip_mon_59_consort = {
				if = {
					limit = {
						NOT = { has_trait = wounded }
					}
					add_trait = wounded
				}
				else_if = {
					limit = {
						NOT = { has_trait = maimed }
					}
					add_trait = maimed
				}
				else = { add_health = -20 }
			}
		}
		else_if = {
			limit = { root.var:battle_injury > 3 }
			scope:ip_mon_59_consort = {
				death = { death_reason = death_succumbed_to_injuries }
			}
		}
		if = {
			limit = {
				scope:ip_mon_59_consort = { is_alive = yes }
			}
			scope:ip_mon_59_consort = { 
				add_loyalty = loyalty_victorious_consort
				add_popularity = popularity_large 
				add_character_modifier = {
					name = victorious_consort_charmod # 1 martial and popularity gain
					duration = 1825 # 5 years
				}	
			}
			custom_tooltip = consort_eager_no_more
		}
		else = {
			add_legitimacy = subtract_legitimacy_small
		}
		remove_variable = ip_mon_59_battle
		remove_variable = battle_injury
	}
}

ip_monarchy.62 = { # Consort Chain 4.4 - Battle Lost
	type = country_event
	title = "ip_monarchy.62.t"
	desc = "ip_monarchy.62.desc"
	picture = epirote_phalanx	
	
	left_portrait = current_ruler
	right_portrait = consort

	trigger = {
		is_monarchy = yes
		current_ruler = {
			is_general = yes
			prisoner = no
			is_married = yes
		}
		consort = {
			prisoner = no
		}
		has_variable = ip_mon_59_battle
	}
	
	weight_multiplier = {
		base = 2
		modifier = {
			add = {
				value = 0.25
				multiply = consort.martial
			}
		}
	}
	
	immediate = {
		consort = {
			save_scope_as = ip_mon_59_consort
		}
		change_variable = {
			name = ip_mon_59_battle
			add = {
				integer_range = { min = 1 max = 3 }
			}
		}
	}
	
	option = { #
		name = "ip_monarchy.62.a"
		if = {
			limit = {
				scope:ip_mon_59_consort = { is_alive = yes }
			}
			scope:ip_mon_59_consort = {
				add_popularity = subtract_popularity_medium
				add_character_modifier = {
					name = defeated_consort_charmod # -1 martial and popularity loss
					duration = 1825 # 5 years
				}
			}
		}
		add_legitimacy = subtract_legitimacy_small
		custom_tooltip = consort_eager_no_more
		remove_variable = ip_mon_59_battle
	}
}

ip_monarchy.63 = { # Consort Chain 4.5 - Battle Lost Wound/Death
	type = country_event
	title = "ip_monarchy.63.t"
	desc = "ip_monarchy.63.desc"
	picture = epirote_phalanx	
	
	left_portrait = current_ruler
	right_portrait = consort

	trigger = {
		is_monarchy = yes
		current_ruler = {
			is_general = yes
			prisoner = no
			is_married = yes
		}
		consort = {
			prisoner = no
		}
		has_variable = ip_mon_59_battle
	}
	
	immediate = {
		consort = {
			save_scope_as = ip_mon_59_consort
		}
		change_variable = {
			name = ip_mon_59_battle
			add = {
				integer_range = { min = 1 max = 3 }
			}
		}
		random_list = {
			20 = { 
				set_variable = {
					name = battle_injury
					value = {
						integer_range = { min = 1 max = 3 }
					}
				}
			}
			10 = { 
				set_variable = {
					name = battle_injury
					value = {
						integer_range = { min = 4 max = 6 }
					}
				}
			}
		}
	}
	
	option = {
		name = ip_monarchy.63.a
		if = {
			limit = { root.var:battle_injury < 4 }
			scope:ip_mon_59_consort = {
				if = {
					limit = {
						NOT = { has_trait = wounded }
					}
					add_trait = wounded
				}
				else_if = {
					limit = {
						NOT = { has_trait = maimed }
					}
					add_trait = maimed
				}
				else = { add_health = -20 }
			}
		}
		else_if = {
			limit = { root.var:battle_injury > 3 }
			scope:ip_mon_59_consort = {
				death = { death_reason = death_succumbed_to_injuries }
			}
		}
		if = {
			limit = {
				scope:ip_mon_59_consort = { is_alive = yes }
			}
			scope:ip_mon_59_consort = { 
				add_popularity = subtract_popularity_medium 
				add_character_modifier = {
					name = defeated_consort_charmod # -1 martial and popularity loss
					duration = 1825 # 5 years
				}
			}
			add_legitimacy = subtract_legitimacy_small
			custom_tooltip = consort_eager_no_more
		}
		else = {
			current_ruler = {
				add_popularity = subtract_popularity_medium
			}
			add_legitimacy = subtract_legitimacy_medium 
		}
		remove_variable = ip_mon_59_battle
		remove_variable = battle_injury
	}
}

ip_monarchy.64 = { # Consort Chain 5.1 - Good Hands
	type = country_event
	title = "ip_monarchy.64.t"
	desc = {
		first_valid = {
			triggered_desc = { # General
				trigger = {
					current_ruler = {
						NOT = { prisoner = yes }
					}
				}
				desc = "ip_monarchy.64.desc_1"
			}
			triggered_desc = { # Prisoner
				trigger = {
					always = yes
				}
				desc = "ip_monarchy.64.desc_2"
			}
		}
	}
	picture = greek_court
	
	left_portrait = current_ruler
	right_portrait = consort

	trigger = {
		is_monarchy = yes
		root.current_ruler = {
			is_married = yes
			OR = { 
				AND = {
					is_general = yes
					employer = {
						war = yes
					}
				}
				prisoner = yes
			}
		}
		root.consort = {
			is_alive = yes
			prisoner = no
			OR = {
				martial >= 4
				finesse >= 4
				charisma >= 4
				zeal >= 4
			}
		}
		NOR = {
			has_variable = ip_mon_64_cooldown
			has_variable = ip_mon_59_cooldown
		}
	}
	
	immediate = {
		set_variable = {
			name = ip_mon_64_cooldown
			days = 5475 # 15 years
		}
		consort = { save_scope_as = ip_mon_64_consort }
	}
	
	option = { # Saddle up
		name = "ip_monarchy.64.a"
		scope:ip_mon_64_consort = {
			add_loyalty = loyalty_consort_responsibility
			add_prominence = prominence_large
		}
		hidden_effect = {
			trigger_event = {
				on_action = ip_mon_64_events
				days = { 15 20 }
			}
		}
		custom_tooltip = ip_monarchy.64.tt
	}
}

ip_monarchy.65 = { # Consort Chain 5.2 - Reassuring the Army
	type = country_event
	title = "ip_monarchy.65.t"
	desc = "ip_monarchy.65.desc"
	picture = greeks_marching	
	
	left_portrait = consort
	left_portrait = current_ruler
	right_portrait = scope:ip_mon_65_general

	trigger = {
		is_monarchy = yes
		current_ruler = {
			OR = {
				AND = {
					is_general = yes
					employer = {
						war = yes
					}
				}
				prisoner = yes
			}
			is_married = yes
		}
		consort = {
			prisoner = no
			martial >= 4
		}
		manpower_percentage <= 0.75
		any_character = {
			is_general = yes
			prisoner = no
			martial >= 4
			loyalty <= 60
		}
		NOT = { has_variable = ip_mon_consort_mar_cooldown }
	}
	
	immediate = {
		set_variable = {
			name = ip_mon_consort_mar_cooldown
			days = 5475 # 15 years
		}
		ordered_character = {
			limit = {
				is_general = yes
				prisoner = no
				martial >= 4
				loyalty <= 60
			}
			order_by = martial 
			save_scope_as = ip_mon_65_general
		}
		consort = { save_scope_as = ip_mon_64_consort }
	}
	
	option = { # Excellent initiative
		name = "ip_monarchy.65.a"
		if = {
			limit = {
				consort = {
					martial >= 4
					martial < 6
				}
			}
			add_manpower = {
				value = max_manpower
				divide = 20
				max = 4
			}
		}
		else_if = {
			limit = {
				consort = {
					martial >= 6
					martial < 8
				}
			}
			add_manpower = {
				value = max_manpower
				divide = 17.5
				max = 6
			}
			scope:ip_mon_65_general = {
				add_loyalty = loyalty_consort_initiative_general_1
			}
		}
		else_if = {
			limit = {
				consort = {
					martial >= 8
					martial < 10
				}
			}
			add_manpower = {
				value = max_manpower
				divide = 15
				max = 6
			}
			scope:ip_mon_65_general = {
				add_loyalty = loyalty_consort_initiative_general_2
			}
		}
		else_if = {
			limit = {
				consort = {
					martial >= 10
				}
			}
			add_manpower = {
				value = max_manpower
				divide = 12.5
				max = 8
			}
			scope:ip_mon_65_general = {
				add_loyalty = loyalty_consort_initiative_general_3
			}
		}
		add_tyranny = tyranny_medium
		add_treasury = {
			value = has_monthly_income
			multiply = -1.8
		}
		hidden_effect = {
			trigger_event = {
				on_action = ip_mon_64_events
				days = { 30 60 }
			}
		}
	}
	
	option = { # We have no need of this
		name = "ip_monarchy.65.b"
		scope:ip_mon_64_consort = {
			add_loyalty = loyalty_consort_initiative_rejected
			add_prominence = subtract_prominence_medium
		}
		scope:ip_mon_65_general = {
			add_loyalty = loyalty_consort_initiative_general_rejected
		}
		add_country_modifier = {
			name = ip_mon_65_mil_neg_cmod 
			duration = 1825 # 5 years
		}
		custom_tooltip = ip_mon_64_stop
	}
}

ip_monarchy.66 = { # Consort Chain 5.3 - Neglected State
	type = country_event
	title = "ip_monarchy.66.t"
	desc = {
		first_valid = {
			triggered_desc = { # Disloyal
				trigger = {
					scope:ip_mon_66_city = {
						NOR = {
							has_province_modifier = province_diminishment_earthquake_destroyed
							has_province_modifier = province_diminishment_earthquake_ravaged
							has_province_modifier = province_diminishment_earthquake_affected
							has_province_modifier = province_diminishment_destroyed_volcano
							has_province_modifier = province_diminishment_ravaged_volcano
						}
					}
				}
				desc = "ip_monarchy.66.desc_1"
			}
			triggered_desc = { # Disaster
				trigger = {
					always = yes
				}
				desc = "ip_monarchy.66.desc_2"
			}
		}
	}
	picture = city_country	
	
	left_portrait = consort
	left_portrait = current_ruler
	right_portrait = scope:ip_mon_66_city.governor

	trigger = {
		is_monarchy = yes
		current_ruler = {
			OR = {
				AND = {
					is_general = yes
					employer = {
						war = yes
					}
				}
				prisoner = yes
			}
			is_married = yes
		}
		consort = {
			prisoner = no
			finesse >= 4
		}
		any_owned_province = {
			NOT = { is_in_area = root.capital_scope }
			is_state_capital = yes
			OR = {
				state_loyalty <= 70
				has_province_modifier = province_diminishment_earthquake_destroyed
				has_province_modifier = province_diminishment_earthquake_ravaged
				has_province_modifier = province_diminishment_earthquake_affected
				has_province_modifier = province_diminishment_destroyed_volcano
				has_province_modifier = province_diminishment_ravaged_volcano
			}
		}
		NOT = { has_variable = ip_mon_consort_fin_cooldown }
	}
	
	immediate = {
		set_variable = {
			name = ip_mon_consort_fin_cooldown
			days = 5475 # 15 years
		}
		random_owned_province = {
			limit = {
				NOT = { is_in_area = root.capital_scope }
				is_state_capital = yes
			}
			weight = {
				modifier = {
					factor = 10
					NOT = { is_in_region = root.capital_scope }
				}
				modifier = {
					factor = 10
					state_loyalty < 60 
				}
				modifier = {
					factor = 20
					state_loyalty < 50 
				}
				modifier = {
					factor = 20
					state_loyalty < 40
				}
				modifier = {
					factor = 50
					OR = {
						has_province_modifier = province_diminishment_earthquake_destroyed
						has_province_modifier = province_diminishment_earthquake_ravaged
						has_province_modifier = province_diminishment_earthquake_affected
						has_province_modifier = province_diminishment_destroyed_volcano
						has_province_modifier = province_diminishment_ravaged_volcano
					} 
				}
			}
			save_scope_as = ip_mon_66_city
		}
		consort = { save_scope_as = ip_mon_64_consort }
	}
	
	option = { # Excellent initiative
		name = "ip_monarchy.66.a"
		if = {
			limit = {
				root.consort = {
					finesse >= 4
					finesse < 6
				}
			}
			hidden_effect = {
				scope:ip_mon_66_city = {
					create_pop = freemen
				}
			}
			custom_tooltip = ip_monarchy.66.at1
			scope:ip_mon_66_city = {
				add_province_modifier = {
					name = reassured_hub_pm
					duration = 1825 # 5 years
				}
			}
		}
		else_if = {
			limit = {
				root.consort = {
					finesse >= 6
					finesse < 8
				}
			}
			consort = {
				add_popularity = popularity_small
			}
			if = {
				limit = {
					scope:ip_mon_66_city = {
						NOT = {
							is_in_region = root.capital_scope
						}
					}
				}
				scope:ip_mon_66_city.governor = {
					add_loyalty = loyalty_consort_initiative_general_1
				}
			}
			hidden_effect = {
				scope:ip_mon_66_city = {
					create_pop = freemen
					create_pop = freemen
					add_province_modifier = {
						name = reassured_hub_pm
						duration = 1825 # 5 years
					}
				}
			}
			custom_tooltip = ip_monarchy.66.at2
			scope:ip_mon_66_city = {
				add_province_modifier = {
					name = reassured_hub_pm
					duration = 1825 # 5 years
				}
			}
			
		}
		else_if = {
			limit = {
				root.consort = {
					finesse >= 8
					finesse < 10 
				}
			}
			consort = {
				add_popularity = popularity_medium
			}
			if = {
				limit = {
					scope:ip_mon_66_city = {
						NOT = {
							is_in_region = root.capital_scope
						}
					}
				}
				scope:ip_mon_66_city.governor = {
					add_loyalty = loyalty_consort_initiative_general_2
				}
			}
			hidden_effect = {
				scope:ip_mon_66_city = {
					create_pop = citizen
					create_pop = freemen
					create_pop = freemen
				}
			}
			custom_tooltip = ip_monarchy.66.at3
			scope:ip_mon_66_city = {
				add_province_modifier = {
					name = reassured_hub_pm
					duration = 1825 # 5 years
				}
			}
		}
		else_if = {
			limit = {
				root.consort = {
					finesse >= 10
				}
			}
			consort = {
				add_popularity = popularity_large
			}
			if = {
				limit = {
					scope:ip_mon_66_city = {
						NOT = {
							is_in_region = root.capital_scope
						}
					}
				}
				scope:ip_mon_66_city.governor = {
					add_loyalty = loyalty_consort_initiative_general_3
				}
			}
			hidden_effect = {
				scope:ip_mon_66_city = {
					create_pop = citizen
					create_pop = citizen
					create_pop = freemen
					create_pop = freemen
				}
			}
			custom_tooltip = ip_monarchy.66.at4
			scope:ip_mon_66_city = {
				add_province_modifier = {
					name = reassured_hub_pm
					duration = 1825 # 5 years
				}
			}
		}
		add_political_influence = subtract_influence_medium
		add_treasury = {
			value = has_monthly_income
			multiply = -1.9
		}
		hidden_effect = {
			trigger_event = {
				on_action = ip_mon_64_events
				days = { 30 60 }
			}
		}
	}
	
	option = { # We have no need of this
		name = "ip_monarchy.66.b"
		scope:ip_mon_64_consort = {
			add_loyalty = loyalty_consort_initiative_rejected
			add_prominence = subtract_prominence_medium
		}
		if = {
			limit = {
				scope:ip_mon_66_city = {
					NOT = { is_in_region = root.capital_scope }
				}
			}
			scope:ip_mon_66_city.governor = { add_loyalty = loyalty_consort_initiative_general_rejected }
		}
		scope:ip_mon_66_city = {
			add_province_modifier = {
				name = neglected_hub_pm
				duration = 1825 # 5 years
			}
		}
		custom_tooltip = ip_mon_64_stop
	}
}

ip_monarchy.67 = { # Consort Chain 5.4 - Worried Subjects
	type = country_event
	title = "ip_monarchy.67.t"
	desc = {
		first_valid = {
			triggered_desc = { # Ally
				trigger = {
					NOT = {
						scope:ip_mon_67_subjectally = {
							is_subject_of = root
						}
					}
				}
				desc = "ip_monarchy.67.desc_1"
			}
			triggered_desc = { # Subject
				trigger = {
					always = yes
				}
				desc = "ip_monarchy.67.desc_2"
			}
		}
	}
	picture = throneroom	
	
	left_portrait = consort
	left_portrait = current_ruler
	right_portrait = scope:ip_mon_67_subjectally.current_ruler

	trigger = {
		is_monarchy = yes
		current_ruler = {
			OR = {
				AND = {
					is_general = yes
					employer = {
						war = yes
					}
				}
				prisoner = yes
			}
			is_married = yes
		}
		consort = {
			prisoner = no
			charisma >= 4
		}
		OR = {
			any_country = {
				is_subject_of = root
			}
			AND = {
				any_country = {
					alliance_with = root
				}
				current_ruler = { prisoner = yes }
			}
		}
		NOT = { has_variable = ip_mon_consort_cha_cooldown }
		
	}
	
	immediate = {
		set_variable = {
			name = ip_mon_consort_cha_cooldown
			days = 5475 # 15 years
		}
		consort = { save_scope_as = ip_mon_64_consort }
		if = {
			limit = {
				any_country = { is_subject_of = root }
			}
			ordered_subject = {
				order_by = num_of_provinces
				save_scope_as = ip_mon_67_subjectally
			}
		}
		else = {
			ordered_allied_country = {
				order_by = num_of_provinces
				save_scope_as = ip_mon_67_subjectally
			}
		}
	}
	
	option = { # Excellent initiative
		name = "ip_monarchy.67.a"
		if = {
			limit = {
				root.consort = {
					charisma >= 4
					charisma < 6
				}
			}
			reverse_add_opinion = { modifier = opinion_consort_charisma_1 target = scope:ip_mon_67_subjectally }
		}
		else_if = {
			limit = {
				root.consort = {
					charisma >= 6
					charisma < 8
				}
			}
			consort = {
				add_popularity = popularity_small
			}
			reverse_add_opinion = { modifier = opinion_consort_charisma_2 target = scope:ip_mon_67_subjectally }
			add_country_modifier = {
				name = ip_mon_consort_diplo_rep_1
				duration = 1825 # 5 years
			}
		}
		else_if = {
			limit = {
				root.consort = {
					charisma >= 8
					charisma < 10
				}
			}
			consort = {
				add_popularity = popularity_medium
			}
			reverse_add_opinion = { modifier = opinion_consort_charisma_3 target = scope:ip_mon_67_subjectally }
			if = {
				limit = {
					scope:ip_mon_67_subjectally = {
						is_subject = yes
					}
					any_subject = {
						NOT = { this = scope:ip_mon_67_subjectally }
					}
				}
				every_subject = {
					limit = {
						NOT = { this = scope:ip_mon_67_subjectally }
					}
					add_opinion = { modifier = opinion_consort_charisma_1 target = root }
				}
			}
			else_if = {
				limit = {
					scope:ip_mon_67_subjectally = {
						alliance_with = root
					}
					any_allied_country = {
						NOT = { this = scope:ip_mon_67_subjectally }
					}
				}
				every_allied_country = {
					limit = {
						NOT = { this = scope:ip_mon_67_subjectally }
					}
					add_opinion = { modifier = opinion_consort_charisma_1 target = root }
				}
			}
			else = { 
				add_country_modifier = {
					name = ip_mon_consort_diplo_rep_2
					duration = 1825 # 5 years
				}
			}
		}
		else_if = {
			limit = {
				root.consort = {
					charisma >= 10
				}
			}
			consort = {
				add_popularity = popularity_large
			}
			reverse_add_opinion = { modifier = opinion_consort_charisma_4 target = scope:ip_mon_67_subjectally }
			if = {
				limit = {
					scope:ip_mon_67_subjectally = {
						is_subject = yes
					}
					any_subject = {
						NOT = { this = scope:ip_mon_67_subjectally }
					}
				}
				every_subject = {
					limit = {
						NOT = { this = scope:ip_mon_67_subjectally }
					}
					add_opinion = { modifier = opinion_consort_charisma_2 target = root }
				}
			}
			else_if = {
				limit = {
					scope:ip_mon_67_subjectally = {
						alliance_with = root
					}
					any_allied_country = {
						NOT = { this = scope:ip_mon_67_subjectally }
					}
				}
				every_allied_country = {
					limit = {
						NOT = { this = scope:ip_mon_67_subjectally }
					}
					add_opinion = { modifier = opinion_consort_charisma_2 target = root }
				}
			}
			else = { 
				add_country_modifier = {
					name = ip_mon_consort_diplo_rep_3
					duration = 1825 # 5 years
				}
			}
		}
		add_political_influence = subtract_influence_medium
		add_treasury = {
			value = has_monthly_income
			multiply = -2.4
		}
		hidden_effect = {
			trigger_event = {
				on_action = ip_mon_64_events
				days = { 30 60 }
			}
		}
	}
	
	option = { # We have no need of this
		name = "ip_monarchy.67.b"
		scope:ip_mon_64_consort = {
			add_loyalty = loyalty_consort_initiative_rejected
			add_prominence = subtract_prominence_medium
		}
		reverse_add_opinion = { modifier = opinion_consort_charisma_neg target = scope:ip_mon_67_subjectally }
		custom_tooltip = ip_mon_64_stop
	}
}

ip_monarchy.68 = { # Consort Chain 5.5 - Religious Observances
	type = country_event
	title = "ip_monarchy.68.t"
	desc = "ip_monarchy.68.desc"
	picture = hellenic_temple	
	
	left_portrait = consort
	left_portrait = current_ruler
	right_portrait = scope:ip_mon_64_high_priest

	trigger = {
		is_monarchy = yes
		current_ruler = {
			OR = {
				AND = {
					is_general = yes
					employer = {
						war = yes
					}
				}
				prisoner = yes
			}
			is_married = yes
		}
		consort = {
			is_alive = yes
			prisoner = no
			zeal >= 4
		}
		any_character = {
			has_office = office_high_priest_monarchy
		}
		NOT = { has_variable = ip_mon_consort_rel_cooldown }
	}
	
	immediate = {
		set_variable = {
			name = ip_mon_consort_rel_cooldown
			days = 5475 # 15 years
		}
		consort = { save_scope_as = ip_mon_64_consort }
		random_character = {
			limit = {
				has_office = office_high_priest_monarchy
			}
			save_scope_as = ip_mon_64_high_priest
		}
	}
	
	option = { # Excellent initiative
		name = "ip_monarchy.68.a"
		if = {
			limit = {
				root.consort = {
					zeal >= 4
					zeal < 6
				}
			}
			add_country_modifier = {
				name = ip_mon_68_rel_1_cmod
				duration = 3650 # 5 years
			}
		}
		else_if = {
			limit = {
				root.consort = {
					zeal >= 6
					zeal < 8
				}
			}
			consort = {
				add_popularity = popularity_small
			}
			add_country_modifier = {
				name = ip_mon_68_rel_2_cmod
				duration = 3650 # 5 years
			}
		}
		else_if = {
			limit = {
				root.consort = {
					zeal >= 8
					zeal < 10
				}
			}
			consort = {
				add_popularity = popularity_medium
			}
			add_country_modifier = {
				name = ip_mon_68_rel_3_cmod
				duration = 3650 # 5 years
			}
		}
		else_if = {
			limit = {
				root.consort = {
					zeal >= 10
				}
			}
			consort = {
				add_popularity = popularity_large
			}
			add_country_modifier = {
				name = ip_mon_68_rel_4_cmod
				duration = 3650 # 5 years
			}
		}
		scope:ip_mon_64_high_priest = {
			add_loyalty = loyalty_consort_initiative_general_1
		}
		add_treasury = {
			value = has_monthly_income
			multiply = -1.8
		}
		hidden_effect = {
			trigger_event = {
				on_action = ip_mon_64_events
				days = { 30 60 }
			}
		}
	}
	
	option = { # We have no need of this
		name = "ip_monarchy.68.b"
		scope:ip_mon_64_consort = {
			add_loyalty = loyalty_consort_initiative_rejected
			add_prominence = subtract_prominence_medium
		}
		scope:ip_mon_64_high_priest = {
			add_loyalty = loyalty_consort_initiative_general_rejected
		}
		add_country_modifier = {
			name = ip_mon_68_rel_neg_cmod
			duration = 3650 # 5 years
		}
		add_stability_effect_small = yes
		custom_tooltip = ip_mon_64_stop
	}
}

ip_monarchy.69 = { # .37 trigger
	type = character_event

	hidden = yes

	trigger = {
		is_alive = yes
		NOT = { is_ruler = yes }
		has_variable = ip_mon_36_child_flag
		any_country = {
			has_variable = ip_mon_36_flag
			var:ip_mon_36_flag = root.var:ip_mon_36_child_flag
		}
	}
	
	immediate = {
		random_country = {
			limit = {
				has_variable = ip_mon_36_flag
				var:ip_mon_36_flag = root.var:ip_mon_36_child_flag
			}
			set_variable = {
				name = ip_mon_36_child_scope_flag
				value = root
				days = 30
			}
			set_variable = {
				name = ip_mon_36_mother_scope_flag
				value = root.mother
				days = 30
			}
			trigger_event = { id = ip_monarchy.37 }
		}
		hidden_effect = {
			if = { # Move child back to ruler country if needed
				limit = {
					root = {
						NOT = { employer = root.var:ip_mon_36_child_flag.employer }
					}
				}
				root = {
					remove_all_positions = yes
					move_country = root.var:ip_mon_36_child_flag.employer
					remove_character_modifier = foreign_citizen
					set_as_minor_character = this
					add_loyalty = loyalty_banished_affair
				}
			}
			if = { # Move mother back to ruler country if needed
				limit = {
					root.mother = {
						NOR = {
							is_alive = yes
							employer = root.var:ip_mon_36_child_flag.employer 
							is_ruler = yes
							is_married = yes
						}
					}
				}
				root.mother = {
					remove_all_positions = yes
					move_country = root.var:ip_mon_36_child_flag.employer
					remove_character_modifier = foreign_citizen
					set_as_minor_character = this
					add_loyalty = loyalty_banished_affair
				}
			}
		}
	}
}

ip_monarchy.70 = { # .40 trigger
	type = character_event

	hidden = yes

	trigger = {
		is_alive = yes
		NOT = { is_ruler = yes }
		has_variable = ip_mon_38_child_flag
		any_country = {
			has_variable = ip_mon_38_flag
			var:ip_mon_38_flag = root.var:ip_mon_38_child_flag
		}
	}
	
	immediate = {
		random_country = {
			limit = {
				has_variable = ip_mon_38_flag
				var:ip_mon_38_flag = root.var:ip_mon_38_child_flag
			}
			set_variable = {
				name = ip_mon_38_child_scope_flag
				value = root
				days = 30
			}
			set_variable = {
				name = ip_mon_38_mother_scope_flag
				value = root.mother
				days = 30
			}
			trigger_event = { id = ip_monarchy.40 }
		}
		hidden_effect = {
			if = { # Move child back to ruler country if needed
				limit = {
					root = {
						NOT = { employer = root.var:ip_mon_38_child_flag.employer }
					}
				}
				root = {
					remove_all_positions = yes
					move_country = root.var:ip_mon_38_child_flag.employer
					remove_character_modifier = foreign_citizen
					set_as_minor_character = this
					add_loyalty = loyalty_banished_affair
				}
			}
		}
	}
}

