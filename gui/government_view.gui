@maxwidth = 1000


base_window = {
	name = "government_view"
	size = { 640 900 }
	using = main_window_template
	
	### Audio ###
	state = {
		name = _show
		start_sound = {
			soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_window_tab_close"
		}
	}
	state = {
		name = _hide
		start_sound = {
			soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_window_tab_close"
		}
	}

	vbox = {
		using = MainWindowHeaderBox

		blockoverride "FlagOrIcon"
		{
			icon = {
				texture = "gfx/interface/base_parts/yellow_button_color_200fs.dds"
				framesize = { 100 100 }
				frame = 6
				position = { -2 -2 }
				size = { 32 32 }
				modify_texture = {
					texture = "gfx/interface/icons/menu_buttons/menu_government.dds"
					blend_mode = alphamultiply
				}
			}
		}
		
		blockoverride "Title_text" { text = "GOVERNMENT_MENU_HEADER" }
		
		blockoverride "White_buttons" 
		{
			button_back = {
				onclick = "[GovernmentView.OnPrevious]"
				tooltip = "PREVIOUS_GOVERNMENT_VIEW"
				shortcut = "previous_window"
			}
			
			button_close = {
				onclick = "[GovernmentView.OnClose]"
				tooltip = "CLOSE"
				shortcut = "close_window"
			}
		}
		
		margin_widget = {
			size = { 0 52 }
			layoutpolicy_horizontal = expanding
			@mincategorybuttonwidth = 181
			@maxcategorybuttonwidth = 230
			@mincategorybuttonheight = 28 
			@maxcategorybuttonheight = 34
			hbox = { 
				layoutpolicy_vertical = preferred
				layoutpolicy_horizontal = expanding
				margin_left = 21
				margin_right = 21
				category_tab = {
					shortcut = "macro_builder" #this is for the tooltip
					name = "government_tab_button"
					tooltip = GOV_VIEW_GOV_TOOLTIP
					blockoverride "MinSize" { size = { @mincategorybuttonwidth @mincategorybuttonheight } }
					blockoverride "MaxSize" { size = { @maxcategorybuttonwidth @maxcategorybuttonheight } }
					blockoverride "MinVisible" { visible = "[Not( GovernmentView.IsShowGovernment )]" }
					blockoverride "MaxVisible" { visible = "[GovernmentView.IsShowGovernment]" }
					######## Shared Overrides
					blockoverride "Center_text" { text = "GOVERNMENT" }
					######## Small Button Overrides
					blockoverride "ClickFunction"
					{
						onclick = "[GovernmentView.ShowGovernment]"
						shortcut = "macro_builder"
					}
				}   
				category_tab = {
					shortcut = "go_to_button"
					name = "offices_tab_button"
					tooltip = GOV_VIEW_OFFICES_TOOLTIP
					blockoverride "MinSize" { size = { @mincategorybuttonwidth @mincategorybuttonheight } }
					blockoverride "MaxSize" { size = { @maxcategorybuttonwidth @maxcategorybuttonheight } }
					blockoverride "MinVisible" { visible = "[Not( GovernmentView.IsShowOffices )]" }
					blockoverride "MaxVisible" { visible = "[GovernmentView.IsShowOffices]" }
					######## Shared Overrides
					blockoverride "Center_text" { text = "OFFICES" }
					######## Small Button Overrides
					blockoverride "ClickFunction"
					{
						onclick = "[GovernmentView.ShowOffices]"
						shortcut = "go_to_button"
					}
				}
				category_tab = {
					shortcut = "confirm"
					name = "laws_tab_button"
					tooltip = GOV_VIEW_LAWS_TOOLTIP
					blockoverride "MinSize" { size = { @mincategorybuttonwidth @mincategorybuttonheight } }
					blockoverride "MaxSize" { size = { @maxcategorybuttonwidth @maxcategorybuttonheight } }
					blockoverride "MinVisible" { visible = "[Not( GovernmentView.IsShowLaws )]" }
					blockoverride "MaxVisible" { visible = "[GovernmentView.IsShowLaws]" }
					######## Shared Overrides
					blockoverride "Center_text" { text = "LAWS" }
					######## Small Button Overrides
					blockoverride "ClickFunction"
					{
						onclick = "[GovernmentView.ShowLaws]"
						shortcut = "confirm"
					}
				}
			}
		}
		
		vbox = {
			layoutpolicy_vertical = expanding
			layoutpolicy_horizontal = expanding
			ignoreinvisible = yes
			
			vbox = {
				name = "Offices tab"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				visible = "[GovernmentView.IsShowOffices]"
				scrollarea = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					scrollbarpolicy_horizontal = always_off
					
					scrollbar_vertical = {
						using = VerticalScrollBar
					}
					
					scrollwidget = {
						dynamicgridbox = {
							parentanchor = hcenter
							ignoreinvisible = yes
							datamodel = "[GovernmentView.GetOfficeHolders]"
							datamodel_wrap = 4
							
							item = {
								margin_widget = {
									size = { 306 150 }
									datacontext = "[OfficeHolderItem.GetCharacter]"

									sub_header = {
										size = { 294 32 }
										position = { 0 0 }
										blockoverride "Title_text" { text = "[OfficeHolderItem.GetName]" }
										tooltip = "[OfficeHolderItem.GetNameDesc]"
									}

									widget = {
										size = { 100% 100% }
										position = { 25 0 }

										flowcontainer = {
											position = { -20 36 }
											ignoreinvisible = yes
											widget = {
												size = { 25 0 }
												visible = "[OfficeHolderItem.HasHolder]"
											}

											cpt_button = {
												size = { 70 105 }

												blockoverride "stats" { visible = "[OfficeHolderItem.HasHolder]" }
											}
										}


										tag = {
											position = { 80 28 }
											text = "[OfficeHolderItem.GetCharacter.GetName]"
											maximumsize = { 180 32 }
											visible = "[And( OfficeHolderItem.HasHolder, OfficeHolderItem.GetCharacter.GetFamily.IsMinor)]"
											fontsize_min = 15
											align = left
											using = BaseFontS
											using = Black_FontColor
										}

										tag = {
											position = { 80 28 }
											text = "[OfficeHolderItem.GetCharacter.GetName]"
											maximumsize = { 145 32 }
											visible = "[And( OfficeHolderItem.HasHolder, Not(OfficeHolderItem.GetCharacter.GetFamily.IsMinor))]"
											fontsize_min = 15
											align = left
											using = BaseFontS
											using = Black_FontColor
										}

										tag = {
											position = { 242 28 }
											text = "[OfficeHolderItem.GetCharacter.GetFamily.GetNumberOfJobs]/[OfficeHolderItem.GetCharacter.GetFamily.GetNumberOfExpectedJobs]"
											maximumsize = { 145 32 }
											visible = "[And( OfficeHolderItem.HasHolder, Not(OfficeHolderItem.GetCharacter.GetFamily.IsMinor))]"
											fontsize_min = 15
											align = left
											using = BaseFontS
											using = Black_FontColor
											alpha = 0.7
										}

										icon_and_text = {
											name = "loyalty"
											size = { 76 0 }
											visible = "[OfficeHolderItem.HasHolder]"
											position = { 80 60 }
											blockoverride "position"
											{
												position = { 0 10 }
											}

											tooltipwidget = {
												datacontext = "[OfficeHolderItem.GetCharacter]"
												using = character_loyalty_tooltip
											}
											blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/loyalty.dds" }
											blockoverride "Text" { text = "[OfficeHolderItem.GetCharacter.GetLoyalty|0]" }
										}
										icon_button_square = {
											visible = "[Not(OfficeHolderItem.HasHolder)]"
											size = { 35 35 }
											position = { 80 -10 }
											parentanchor = bottom
											blockoverride "On_click"
											{
												onclick = "[OfficeHolderItem.ChangeHolder]"
												enabled = "[OfficeHolderItem.CanChange]"
											}
											blockoverride "Icon"
											{
												texture = "gfx/interface/icons/shared_icons/change.dds"
												size = { 30 30 }
											}
											tooltip = "[OfficeHolderItem.GetChangeTooltip]"
											spinning_glow_no_alpha = {
												position = { -7 -7 }
												blockoverride "Size"
												{
													size = { 145% 145% }
												}
												blockoverride "Texture"
												{
													texture = "gfx/bgs/gold.dds"
												}
											}
										}
										icon_button_square = {
											visible = "[OfficeHolderItem.HasHolder]"
											size = { 35 35 }
											position = { 80 -10 }
											parentanchor = bottom
											blockoverride "On_click"
											{
												onclick = "[OfficeHolderItem.ChangeHolder]"
												enabled = "[OfficeHolderItem.CanChange]"
											}
											blockoverride "Icon"
											{
												texture = "gfx/interface/icons/shared_icons/change.dds"
												size = { 30 30 }
											}

											tooltip = "[OfficeHolderItem.GetChangeTooltip]"
										}
									}

									icon_and_text_progress_S = {
										name = "statesmanship"
										visible = "[OfficeHolderItem.HasHolder]"
										parentanchor = right
										position = { -22 56 }
										blockoverride "Icon" {
											framesize = { 50 50 }
											texture = "gfx/interface/icons/icon_skills.dds"
											frame = "[OfficeHolderItem.GetCharacter.GetAttributes.GetFrame(OfficeHolderItem.GetOffice.GetRequiredSkill)]"
										}
										blockoverride "Text" { 
											text = "[OfficeHolderItem.GetCharacter.GetEffectiveModifiedAttribute(OfficeHolderItem.GetOffice.GetRequiredSkill)]/[OfficeHolderItem.GetCharacter.GetModifiedAttribute(OfficeHolderItem.GetOffice.GetRequiredSkill)]"
											using = BaseFontM
											using = Black_FontColor
											position = { 8 -10 }
										}
										blockoverride "Value" { value = "[FixedPointToFloat(OfficeHolderItem.GetCharacter.GetExperience)]" }
										tooltip = "[OfficeHolderItem.GetSkillTooltip]"
									}
									widget = {
										name = "modifier_reward"
										size = { 150 45 }
										using = NoninteractableBG
										blockoverride "Margins" {}
										parentanchor = right
										position = { -12 100 }
										visible = "[OfficeHolderItem.HasHolder]"
										modifier_desc_condensed = {
											position = { 0 -4 } 
											parentanchor = center
											widgetanchor = center
											datacontext = "[OfficeHolderItem.GetModifier]"
											tooltip = "[OfficeHolderItem.GetTooltip]"
											scale = 0.9
										}
										
									}

									textbox = {
										using = BaseFontS
										using = Black_FontColor
										autoresize = yes
										elide = right
										max_width = 220
										fontsize_min = 11
										text = "ASSIGNING_OFFICER_WILL"
										position = { 80 38 }
										visible = "[Not( OfficeHolderItem.GetCharacter.IsValid )]"
										alpha = 0.55
									}
									
									textbox = {
										visible = "[Not( OfficeHolderItem.GetCharacter.IsValid )]"
										using = BaseFontM
										using = Black_FontColor
										position = { 80 64 }
										autoresize = yes
										elide = left
										max_width = 226
										fontsize_min = 11
										text = "[OfficeHolderItem.GetOffice.GetSkillDescription]"
										alpha = 0.60
									}

									flowcontainer = {
										position = { -8 108 }
										parentanchor = right
										spacing = 2
										visible = "[Not( OfficeHolderItem.GetCharacter.IsValid )]"
										alpha = 0.60
										textbox = {
											using = BaseFontS
											using = Black_FontColor
											parentanchor = vcenter
											autoresize = yes
											elide = right
											max_width = 230
											fontsize_min = 11
											text = "PER_POINT_DESC"
										}
										icon = {
											texture = "gfx/interface/icons/icon_skills.dds"
											framesize = { 50 50 }
											size = { 34 34 }
											frame = "[OfficeHolderItem.GetCharacter.GetAttributes.GetFrame(OfficeHolderItem.GetOffice.GetRequiredSkill)]"
										}
									}
								}
							}
						}
					}
					icon = {
						texture = "gfx/interface/event_window/event_scribe_writing.dds"
						scale = 0.45
						position = { -12 -17 }
						parentanchor = bottom|hcenter
					} 
				}
			}
			vbox = {
				name = "Laws tab"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				visible = "[GovernmentView.IsShowLaws]"
				
				margin_widget = {
					size = { 0 75 }
					layoutpolicy_horizontal = expanding
					flowcontainer = {
						position = { 24 17 }
						direction = vertical
						parentanchor = left
						tooltip = "[GovernmentView.GetPlayer.GetPriceTooltip('enact_law')]"
						
						tag = {
							using = BaseFontM
							using = Black_FontColor
							text = "LAW_PRICE_CHANGE"
						}
						
						textbox = {
							autoresize = yes
							using = BaseFontM
							using = Black_FontColor
							text = "[GovernmentView.GetPlayer.GetPrice('enact_law')]"
							parentanchor = left
						}
					}
					icon = {
						texture = "gfx/interface/event_window/Event_roman_trial.dds"
						scale = 0.32
						parentanchor = right
						position = { -12 -18 }
						visible = "[GovernmentView.GetPlayer.GetGovernment.IsRepublic]"
					}
					icon = {
						texture = "gfx/interface/event_window/Event_picture_of_a_doorway_from_the_outside.dds"
						scale = 0.28
						parentanchor = right
						position = { -6 -18 }
						visible = "[GovernmentView.GetPlayer.GetGovernment.IsMonarchy]"
					}
					icon = {
						texture = "gfx/interface/event_window/Event_sacrifice.dds"
						scale = 0.33
						parentanchor = right
						position = { -6 -18 }
						visible = "[GovernmentView.GetPlayer.GetGovernment.IsTribal]"
					}
				}
				
				scrollarea = {
					maximumsize = { 655 660 }
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					scrollbarpolicy_horizontal = always_off
					
					scrollbar_vertical = {
						using = VerticalScrollBar
					}
					icon = {
						position = { -15 0 }
						size = { 660 2 }
						texture = "gfx/interface/base_parts/start_menu_horizontal_line_small.dds"
					}
					scrollwidget = {
						dynamicgridbox = {
							position = { 15 0 }
							name = "possible_laws_grid"
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							flipdirection = yes
							datamodel_wrap = 2
							datamodel = "[GovernmentView.GetCurrentLaws]"
							item = {
								container = {
									margin_widget = {
										size = { 306 32 }
										hbox = {
											layoutpolicy_horizontal = expanding
											sub_header = {
												name = "law_header"
												size = { 0 32 }
												layoutpolicy_horizontal = expanding
												blockoverride "Title_text"
												{
													datacontext = "[GovernmentView.GetPlayer]"
													text = "[LawGroupItem.GetName]"
												}
											}
											
											flowcontainer = {
												tooltip = [LawGroupItem.GetClansTooltip]
												visible = "[LawGroupItem.HasClans]"
												icon = {											
													name = "clans_icon"
													texture = "gfx/interface/icons/shared_icons/clan_chiefs.dds"
													size = { 32 32 }	
													tooltip = [LawGroupItem.GetClansTooltip]
												}
												icon = {
													parentanchor = right
													name = "clans_yesno"
													texture = "gfx/interface/icons/shared_icons/tick_cross.dds"
													frame = "[LawGroupItem.GetClansFrame]"
													size = { 30 30 }
													framesize = { 25 25 }
												}
											}
											widget = {
												size = { 8 0 }
												visible = "[Not( LawGroupItem.HasClans )]"
											}
										}
									}
									flowcontainer = {
										position = { 0 36 }
										
										dynamicgridbox = {
											datamodel = "[LawGroupItem.GetLaws]"
											
											item = {
												widget = {
													size = { 280 32 }

													
													alpha = "[TransparentIfFalse(LawItem.IsAllowed)]"

													button_radial = {
														position = { 4 0 }
														enabled = "[And( LawItem.CanEnact, LawItem.IsAllowed )]"
														scale = 0.9
														
														blockoverride "On_click" 
														{
															onclick = "[LawItem.Enact]"
															inherit_visual_state = no
															enabled = yes
														}
														blockoverride "ShowDot"
														{
															trigger_when = "[LawItem.HasLaw]"
														} 
														
														blockoverride "HideDot" 
														{
															trigger_when = "[Not(LawItem.HasLaw)]"
														}
														tooltip = "[LawItem.GetCanSetLawDescription]"
													}
													tooltipwidget = player_law_item_tooltip
													widget = {
														position = { 34 0 }
														size = { 260 24 }
														using = NoninteractableBG
														blockoverride "Margins" { margin = { 4 6 } }
														textbox = {
															position = { 8 3 }
															autoresize = yes
															align = nobaseline|left
															using = BaseFontS
															using = Black_FontColor
															text = "[LawItem.GetName]"
															max_width = 280
															elide = right
														}
													}
													
													widget = {
														parentanchor = top|right
														widgetanchor = top|right
														position = { 5 -6 }
														size = { 32 32 }
														
														
														icon = {
															texture = "[LawItem.GetLaw.GetModifier.GetIcon]"
															size = { 32 32 }
														}
														
														icon = {
															texture = "gfx/interface/icons/laws/law_agnatic.dds"
															visible = "[LawItem.GetLaw.IsSuccession('agnatic')]"
															size = { 32 32 }
															position = { 6 0 }
														}
														icon = {
															texture = "gfx/interface/icons/laws/law_agnatic_cognatic.dds"
															visible = "[LawItem.GetLaw.IsSuccession('cognatic')]"
															size = { 32 32 }
															position = { 6 0 }
														}
														icon = {
															texture = "gfx/interface/icons/laws/law_agnatic_seniority.dds"
															visible = "[LawItem.GetLaw.IsSuccession('agnatic_seniority')]"
															size = { 32 32 }
															position = { 6 0 }
														}
														icon = {
															texture = "gfx/interface/icons/laws/law_elective.dds"
															visible = "[LawItem.GetLaw.IsSuccession('elective_monarchy')]"
															size = { 32 32 }
															position = { 6 0 }
														}
														icon = {
															texture = "gfx/interface/icons/laws/law_familial_marriage.dds"
															visible = "[LawItem.GetLaw.IsSuccession('old_egyptian_succession')]"
															size = { 32 32 }
															position = { 7 0 }
														}

														# TODO ADD MORE UNIQUE LAW ICONS

													}
													
												}
											}
										}
									}
								}
							}
						}
					}
					icon = {
						position = { -15 658 }
						size = { 660 2 }
						texture = "gfx/interface/base_parts/start_menu_horizontal_line_small.dds"
					}
				}
			}
			vbox = {
				name = "Government Tab tab"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				visible = "[GovernmentView.IsShowGovernment]"
				margin = { 9 0 }
				margin_widget = {
					size = { 0 31 }
					layoutpolicy_horizontal = expanding
					sub_header = {
						name = "Government Overview Header"	
						position = { 0 0 }
						size = { 100% 28 }	
						datacontext = "[GovernmentView]"
						blockoverride "Title_text" { text = "RULER_TERM_DESCRIPTION_MONARCHY_STANDARD" }
						blockoverride "Max_text_width" { max_width = 650 }
						#visible = "[And( GovernmentView.GetPlayer.GetGovernment.IsMonarchy, Not( GovernmentView.GetPlayer.GetCoRuler.IsValid ) )]"
						visible = "[And( GovernmentView.GetPlayer.GetGovernment.IsMonarchy, And( Not( GovernmentView.GetPlayer.UseCoRuler ), Not( Player.HasTimedModifier('regency_government') ) ) )]"
					}
					sub_header = {
						name = "Government Overview Header Monarchy Co Ruler"
						position = { 0 0 }
						size = { 100% 28 }	
						datacontext = "[GovernmentView]"
						blockoverride "Title_text" { text = "RULER_TERM_DESCRIPTION_MONARCHY_CORULER" }
						blockoverride "Max_text_width" { max_width = 650 }
						#visible = "[And( GovernmentView.GetPlayer.GetGovernment.IsMonarchy, GovernmentView.GetPlayer.GetCoRuler.IsValid )]"	
						visible = "[And( GovernmentView.GetPlayer.UseCoRuler, And( GovernmentView.GetPlayer.GetGovernment.IsMonarchy, Not( Player.HasTimedModifier('regency_government') ) ) )]"						
					}
					sub_header = {
						name = "Government Regency Overview Header"	
						position = { 0 0 }
						size = { 100% 28 }	
						datacontext = "[GovernmentView]"
						blockoverride "Title_text" { text = "REGENCY_TERM_DESCRIPTION_MONARCHY_STANDARD" }
						blockoverride "Max_text_width" { max_width = 650 }
						#visible = "[And( GovernmentView.GetPlayer.GetGovernment.IsMonarchy, Not( GovernmentView.GetPlayer.GetCoRuler.IsValid ) )]"
						visible = "[And( GovernmentView.GetPlayer.GetGovernment.IsMonarchy, And( GovernmentView.GetPlayer.GetCoRuler.IsValid, Player.HasTimedModifier('regency_government') ) )]"
					}
					sub_header = {
						name = "Government Overview Header Republic"
						position = { 0 0 }
						size = { 100% 28 }	
						datacontext = "[GovernmentView]"
						blockoverride "Title_text" { text = "RULER_TERM_DESCRIPTION_REPUBLIC_CORULER" }
						blockoverride "Max_text_width" { max_width = 650 }
						visible = "[And( GovernmentView.GetPlayer.GetGovernment.IsRepublic, GovernmentView.GetPlayer.GetCoRuler.IsValid )]"		
					}
					sub_header = {
						name = "Government Overview Header Republic No CoRuler"
						position = { 0 0 }
						size = { 100% 28 }	
						datacontext = "[GovernmentView]"
						blockoverride "Title_text" { text = "RULER_TERM_DESCRIPTION_REPUBLIC_STANDARD" }
						blockoverride "Max_text_width" { max_width = 650 }
						visible = "[And( GovernmentView.GetPlayer.GetGovernment.IsRepublic, Not( GovernmentView.GetPlayer.GetCoRuler.IsValid ) )]"			
					}
					sub_header = {
						name = "Government Overview Header Tribal"
						position = { 0 0 }
						size = { 100% 28 }	
						datacontext = "[GovernmentView]"
						blockoverride "Title_text" { text = "RULER_TERM_DESCRIPTION_TRIBAL" }
						blockoverride "Max_text_width" { max_width = 650 }
						visible = "[GovernmentView.GetPlayer.GetGovernment.IsTribal]"		
					}
				}
				
				margin_widget = {
					size = { 0 206 }
					margin_top = 2
					layoutpolicy_horizontal = expanding
					
					hbox = {
						layoutpolicy_horizontal = expanding
						cpt_button_large = {
							size = { 617 206  }
							blockoverride "Context" { datacontext = "[GovernmentView.GetPlayer.GetRuler]" }
							blockoverride "ShowIcons" { visible = no }
							blockoverride "BottomPortraitPosition" { 
								position = { -8 18 } 
								visible = no
							}
							#blockoverride "BottomPortraitSize" { visible = no }
							
							margin_widget = {
								size = { 90 140 }
								position = { 7 -1 }
								list_entry = {
									size = { 100% 100% }
									blockoverride "ListAlpha" { alpha = 1 }
									blockoverride "ListAlphaTexture" { texture = "gfx/interface/base_parts/horizontal_gradient_stretch_inverted.dds" }
								}
								parentanchor = bottom
								visible = "[And( GovernmentView.GetPlayer.GetGovernment.IsMonarchy, And( Not( GovernmentView.GetPlayer.GetCoRuler.IsValid ), Not( Player.HasTimedModifier('regency_government') ) ) )]"
								scale = 0.9
								
								flowcontainer = { 
									direction = vertical
									ignoreinvisible = yes
									position = { -5 0 }
									spacing = 2
									resizeparent = yes
									widget = {
										size = { 200 29 }
										visible = "[GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetRuler.GetMartial, GovernmentView.GetPlayer.GetConsort.GetMartial )]"
										icon_and_text_dark = {
											parentanchor = right
											size = { 76 0 }
											tooltip = "[GovernmentView.GetMartialTooltip]"
											blockoverride "Icon" { using = icon_military }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetCoRuler.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetConsort.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetRuler.GetMartial))]" }
										}
									}
									widget = {
										size = { 200 29 }
										visible = "[GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetRuler.GetFinesse, GovernmentView.GetPlayer.GetConsort.GetFinesse )]"
										icon_and_text_dark = {
											parentanchor = right
											size = { 76 0 }
											tooltip = "[GovernmentView.GetFinesseTooltip]"
											blockoverride "Icon" { using = icon_civic }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetCoRuler.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetConsort.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetRuler.GetFinesse))]" }
										}
									}
									widget = {
										size = { 200 29 }
										visible = "[GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetRuler.GetCharisma, GovernmentView.GetPlayer.GetConsort.GetCharisma )]"
										icon_and_text_dark = {
											parentanchor = right
											size = { 76 0 }
											tooltip = "[GovernmentView.GetCharismaTooltip]"
											blockoverride "Icon" { using = icon_oratory }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetCoRuler.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetConsort.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetRuler.GetCharisma))]" }
										}
									}
									widget = {
										size = { 200 29 }
										visible = "[GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetRuler.GetZeal, GovernmentView.GetPlayer.GetConsort.GetZeal )]"
										icon_and_text_dark = {
											parentanchor = right
											size = { 76 0 }
											tooltip = "[GovernmentView.GetZealTooltip]"
											blockoverride "Icon" { using = icon_religious }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetCoRuler.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetConsort.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetRuler.GetZeal))]" }
										}
									}
									margin_bottom = 6
								}
							}
							
							margin_widget = {
								size = { 90 140 }
								position = { -7 -1 }
								list_entry = {
									size = { 100% 100% }
									blockoverride "ListAlpha" { alpha = 1 }
									blockoverride "ListAlphaTexture" { texture = "gfx/interface/base_parts/horizontal_gradient_stretch.dds" }
								}
								parentanchor = bottom|right
								visible = "[And( GovernmentView.GetPlayer.UseConsort, And( Not( GovernmentView.GetPlayer.GetCoRuler.IsValid ), Not( Player.HasTimedModifier('regency_government') ) ) )]"
								scale = 0.9
								
								flowcontainer = { 
									direction = vertical
									ignoreinvisible = yes
									spacing = 2
									position = { 4 0 }
									resizeparent = yes
									widget = {
										size = { 200 29 }
										visible = "[GreaterThan_int32( GovernmentView.GetPlayer.GetConsort.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial )]"
										icon_and_text_dark_inverted = {
											parentanchor = left
											size = { 76 0 }
											tooltip = "[GovernmentView.GetMartialTooltip]"
											blockoverride "Icon" { using = icon_military }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetCoRuler.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetConsort.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetRuler.GetMartial))]" }
										}
									}
									widget = {
										size = { 200 29 }
										visible = "[GreaterThan_int32( GovernmentView.GetPlayer.GetConsort.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse )]"
										icon_and_text_dark_inverted = {
											parentanchor = left
											size = { 76 0 }
											tooltip = "[GovernmentView.GetFinesseTooltip]"
											blockoverride "Icon" { using = icon_civic }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetCoRuler.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetConsort.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetRuler.GetFinesse))]" }
										}
									}
									widget = {
										size = { 200 29 }
										visible = "[GreaterThan_int32( GovernmentView.GetPlayer.GetConsort.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma )]"
										icon_and_text_dark_inverted = {
											parentanchor = left
											size = { 76 0 }
											tooltip = "[GovernmentView.GetCharismaTooltip]"
											blockoverride "Icon" { using = icon_oratory }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetCoRuler.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetConsort.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetRuler.GetCharisma))]" }
										}
									}
									widget = {
										size = { 200 29 }
										visible = "[GreaterThan_int32( GovernmentView.GetPlayer.GetConsort.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal )]"
										icon_and_text_dark_inverted = {
											parentanchor = left
											size = { 76 0 }
											tooltip = "[GovernmentView.GetZealTooltip]"
											blockoverride "Icon" { using = icon_religious }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetCoRuler.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetConsort.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetRuler.GetZeal))]" }
										}
									}
									margin_bottom = 6
								}
							}
							
							margin_widget = {
								size = { 90 140 }
								position = { 7 -1 }
								list_entry = {
									size = { 100% 100% }
									blockoverride "ListAlpha" { alpha = 1 }
									blockoverride "ListAlphaTexture" { texture = "gfx/interface/base_parts/horizontal_gradient_stretch_inverted.dds" }
								}
								parentanchor = bottom
								visible = "[GovernmentView.GetPlayer.GetGovernment.IsRepublic]"
								scale = 0.9
								
								flowcontainer = { 
									direction = vertical
									ignoreinvisible = yes
									spacing = 2
									resizeparent = yes
									widget = {
										size = { 200 29 }
										visible = "[GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetRuler.GetMartial, GovernmentView.GetPlayer.GetCoRuler.GetMartial )]"
										icon_and_text_dark = {
											parentanchor = right
											size = { 76 0 }
											tooltip = "[GovernmentView.GetMartialTooltip]"
											blockoverride "Icon" { using = icon_military }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetCoRuler.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetConsort.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetRuler.GetMartial))]" }
										}
									}
									widget = {
										size = { 200 29 }
										visible = "[GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetRuler.GetFinesse, GovernmentView.GetPlayer.GetCoRuler.GetFinesse )]"
										icon_and_text_dark = {
											parentanchor = right
											size = { 76 0 }
											tooltip = "[GovernmentView.GetFinesseTooltip]"
											blockoverride "Icon" { using = icon_civic }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetCoRuler.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetConsort.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetRuler.GetFinesse))]" }
										}
									}
									widget = {
										size = { 200 29 }
										visible = "[GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetRuler.GetCharisma, GovernmentView.GetPlayer.GetCoRuler.GetCharisma )]"
										icon_and_text_dark = {
											parentanchor = right
											size = { 76 0 }
											tooltip = "[GovernmentView.GetCharismaTooltip]"
											blockoverride "Icon" { using = icon_oratory }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetCoRuler.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetConsort.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetRuler.GetCharisma))]" }
										}
									}
									widget = {
										size = { 200 29 }
										visible = "[GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetRuler.GetZeal, GovernmentView.GetPlayer.GetCoRuler.GetZeal )]"
										icon_and_text_dark = {
											parentanchor = right
											size = { 76 0 }
											tooltip = "[GovernmentView.GetZealTooltip]"
											blockoverride "Icon" { using = icon_religious }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetCoRuler.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetConsort.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetRuler.GetZeal))]" }
										}
									}
									margin_bottom = 6
								}
							}
							

							
							margin_widget = {
								size = { 90 140 }
								position = { -7 -1 }
								list_entry = {
									size = { 100% 100% }
									blockoverride "ListAlpha" { alpha = 1 }
									blockoverride "ListAlphaTexture" { texture = "gfx/interface/base_parts/horizontal_gradient_stretch.dds" }
								}
								parentanchor = bottom|right
								visible = "[And( GovernmentView.GetPlayer.UseCoRuler, Not( GovernmentView.GetPlayer.GetGovernment.IsMonarchy) )]"
								scale = 0.9
								
								flowcontainer = { 
									direction = vertical
									ignoreinvisible = yes
									spacing = 2
									resizeparent = yes
									widget = {
										size = { 200 29 }
										visible = "[GreaterThan_int32( GovernmentView.GetPlayer.GetCoRuler.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial )]"
										icon_and_text_dark_inverted = {
											parentanchor = left
											size = { 76 0 }
											tooltip = "[GovernmentView.GetMartialTooltip]"
											blockoverride "Icon" { using = icon_military }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetCoRuler.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetConsort.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetRuler.GetMartial))]" }
										}
									}
									widget = {
										size = { 200 29 }
										visible = "[GreaterThan_int32( GovernmentView.GetPlayer.GetCoRuler.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse )]"
										icon_and_text_dark_inverted = {
											parentanchor = left
											size = { 76 0 }
											tooltip = "[GovernmentView.GetFinesseTooltip]"
											blockoverride "Icon" { using = icon_civic }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetCoRuler.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetConsort.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetRuler.GetFinesse))]" }
										}
									}
									widget = {
										size = { 200 29 }
										visible = "[GreaterThan_int32( GovernmentView.GetPlayer.GetCoRuler.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma )]"
										icon_and_text_dark_inverted = {
											parentanchor = left
											size = { 76 0 }
											tooltip = "[GovernmentView.GetCharismaTooltip]"
											blockoverride "Icon" { using = icon_oratory }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetCoRuler.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetConsort.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetRuler.GetCharisma))]" }
										}
									}
									widget = {
										size = { 200 29 }
										visible = "[GreaterThan_int32( GovernmentView.GetPlayer.GetCoRuler.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal )]"
										icon_and_text_dark_inverted = {
											parentanchor = left
											size = { 76 0 }
											tooltip = "[GovernmentView.GetZealTooltip]"
											blockoverride "Icon" { using = icon_religious }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetCoRuler.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetConsort.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetRuler.GetZeal))]" }
										}
									}
									margin_bottom = 6
								}
							}
							
							margin_widget = { ##SPARTAN CORULER
								size = { 90 140 }
								position = { -7 -1 }
								list_entry = {
									size = { 100% 100% }
									blockoverride "ListAlpha" { alpha = 1 }
									blockoverride "ListAlphaTexture" { texture = "gfx/interface/base_parts/horizontal_gradient_stretch.dds" }
								}
								parentanchor = bottom|right
								visible = "[And( GovernmentView.GetPlayer.UseCoRuler, And( GovernmentView.GetPlayer.GetGovernment.IsMonarchy, Not( Player.HasTimedModifier('regency_government') ) ) )]"
								scale = 0.9
								
								flowcontainer = { 
									direction = vertical
									ignoreinvisible = yes
									spacing = 2
									resizeparent = yes
									widget = {
										size = { 200 29 }
										visible = "[GreaterThan_int32( GovernmentView.GetPlayer.GetCoRuler.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial )]"
										icon_and_text_dark_inverted = {
											parentanchor = left
											size = { 76 0 }
											tooltip = "[GovernmentView.GetMartialTooltip]"
											blockoverride "Icon" { using = icon_military }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetCoRuler.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetConsort.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetRuler.GetMartial))]" }
										}
									}
									widget = {
										size = { 200 29 }
										visible = "[GreaterThan_int32( GovernmentView.GetPlayer.GetCoRuler.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse )]"
										icon_and_text_dark_inverted = {
											parentanchor = left
											size = { 76 0 }
											tooltip = "[GovernmentView.GetFinesseTooltip]"
											blockoverride "Icon" { using = icon_civic }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetCoRuler.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetConsort.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetRuler.GetFinesse))]" }
										}
									}
									widget = {
										size = { 200 29 }
										visible = "[GreaterThan_int32( GovernmentView.GetPlayer.GetCoRuler.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma )]"
										icon_and_text_dark_inverted = {
											parentanchor = left
											size = { 76 0 }
											tooltip = "[GovernmentView.GetCharismaTooltip]"
											blockoverride "Icon" { using = icon_oratory }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetCoRuler.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetConsort.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetRuler.GetCharisma))]" }
										}
									}
									widget = {
										size = { 200 29 }
										visible = "[GreaterThan_int32( GovernmentView.GetPlayer.GetCoRuler.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal )]"
										icon_and_text_dark_inverted = {
											parentanchor = left
											size = { 76 0 }
											tooltip = "[GovernmentView.GetZealTooltip]"
											blockoverride "Icon" { using = icon_religious }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetCoRuler.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetConsort.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetRuler.GetZeal))]" }
										}
									}
									margin_bottom = 6
								}
							}
							
							
							margin_widget = {
								size = { 90 140 }
								position = { 7 -1 }
								list_entry = {
									size = { 100% 100% }
									blockoverride "ListAlpha" { alpha = 1 }
									blockoverride "ListAlphaTexture" { texture = "gfx/interface/base_parts/horizontal_gradient_stretch_inverted.dds" }
								}
								parentanchor = bottom
								visible = "[And( GovernmentView.GetPlayer.GetGovernment.IsMonarchy, And( GovernmentView.GetPlayer.GetCoRuler.IsValid, Not( Player.HasTimedModifier('regency_government') ) ) )]"
								scale = 0.9
								
								flowcontainer = { 
									direction = vertical
									ignoreinvisible = yes
									position = { -5 0 }
									spacing = 2
									resizeparent = yes
									widget = {
										size = { 200 29 }
										visible = "[GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetRuler.GetMartial, GovernmentView.GetPlayer.GetCoRuler.GetMartial )]"
										icon_and_text_dark = {
											parentanchor = right
											size = { 76 0 }
											tooltip = "[GovernmentView.GetMartialTooltip]"
											blockoverride "Icon" { using = icon_military }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetCoRuler.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetConsort.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetRuler.GetMartial))]" }
										}
									}
									widget = {
										size = { 200 29 }
										visible = "[GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetRuler.GetFinesse, GovernmentView.GetPlayer.GetCoRuler.GetFinesse )]"
										icon_and_text_dark = {
											parentanchor = right
											size = { 76 0 }
											tooltip = "[GovernmentView.GetFinesseTooltip]"
											blockoverride "Icon" { using = icon_civic }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetCoRuler.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetConsort.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetRuler.GetFinesse))]" }
										}
									}
									widget = {
										size = { 200 29 }
										visible = "[GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetRuler.GetCharisma, GovernmentView.GetPlayer.GetCoRuler.GetCharisma )]"
										icon_and_text_dark = {
											parentanchor = right
											size = { 76 0 }
											tooltip = "[GovernmentView.GetCharismaTooltip]"
											blockoverride "Icon" { using = icon_oratory }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetCoRuler.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetConsort.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetRuler.GetCharisma))]" }
										}
									}
									widget = {
										size = { 200 29 }
										visible = "[GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetRuler.GetZeal, GovernmentView.GetPlayer.GetCoRuler.GetZeal )]"
										icon_and_text_dark = {
											parentanchor = right
											size = { 76 0 }
											tooltip = "[GovernmentView.GetZealTooltip]"
											blockoverride "Icon" { using = icon_religious }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetCoRuler.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetConsort.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetRuler.GetZeal))]" }
										}
									}
									margin_bottom = 6
								}
							}
							
							margin_widget = { ##REGENCY CORULER
								size = { 90 140 }
								position = { -7 -1 }
								list_entry = {
									size = { 100% 100% }
									blockoverride "ListAlpha" { alpha = 1 }
									blockoverride "ListAlphaTexture" { texture = "gfx/interface/base_parts/horizontal_gradient_stretch_inverted.dds" }
								}
								parentanchor = bottom
								visible = "[And( GovernmentView.GetPlayer.UseCoRuler, And( GovernmentView.GetPlayer.GetGovernment.IsMonarchy, Player.HasTimedModifier('regency_government') ) )]"
								scale = 0.9
								
								flowcontainer = { 
									direction = vertical
									ignoreinvisible = yes
									spacing = 2
									resizeparent = yes
									widget = {
										size = { 200 29 }
										visible = "[GreaterThan_int32( GovernmentView.GetPlayer.GetCoRuler.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial )]"
										icon_and_text_dark = {
											parentanchor = right
											size = { 76 0 }
											tooltip = "[GovernmentView.GetMartialTooltip]"
											blockoverride "Icon" { using = icon_military }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetCoRuler.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetConsort.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetRuler.GetMartial))]" }
										}
									}
									widget = {
										size = { 200 29 }
										visible = "[GreaterThan_int32( GovernmentView.GetPlayer.GetCoRuler.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse )]"
										icon_and_text_dark = {
											parentanchor = right
											size = { 76 0 }
											tooltip = "[GovernmentView.GetFinesseTooltip]"
											blockoverride "Icon" { using = icon_civic }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetCoRuler.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetConsort.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetRuler.GetFinesse))]" }
										}
									}
									widget = {
										size = { 200 29 }
										visible = "[GreaterThan_int32( GovernmentView.GetPlayer.GetCoRuler.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma )]"
										icon_and_text_dark = {
											parentanchor = right
											size = { 76 0 }
											tooltip = "[GovernmentView.GetCharismaTooltip]"
											blockoverride "Icon" { using = icon_oratory }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetCoRuler.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetConsort.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetRuler.GetCharisma))]" }
										}
									}
									widget = {
										size = { 200 29 }
										visible = "[GreaterThan_int32( GovernmentView.GetPlayer.GetCoRuler.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal )]"
										icon_and_text_dark = {
											parentanchor = right
											size = { 76 0 }
											tooltip = "[GovernmentView.GetZealTooltip]"
											blockoverride "Icon" { using = icon_religious }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetCoRuler.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetConsort.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetRuler.GetZeal))]" }
										}
									}
									margin_bottom = 6
								}
							}
							
							
							margin_widget = {
								size = { 90 140 }
								position = { -7 -1 }
								list_entry = {
									size = { 100% 100% }
									blockoverride "ListAlpha" { alpha = 1 }
									blockoverride "ListAlphaTexture" { texture = "gfx/interface/base_parts/horizontal_gradient_stretch.dds" }
								}
								parentanchor = bottom|right
								visible = "[And( GovernmentView.GetPlayer.GetGovernment.IsMonarchy, And( GovernmentView.GetPlayer.GetCoRuler.IsValid, Player.HasTimedModifier('regency_government') ) )]"
								scale = 0.9
								
								flowcontainer = { 
									direction = vertical
									ignoreinvisible = yes
									position = { -5 0 }
									spacing = 2
									resizeparent = yes
									widget = {
										size = { 200 29 }
										visible = "[GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetRuler.GetMartial, GovernmentView.GetPlayer.GetCoRuler.GetMartial )]"
										icon_and_text_dark_inverted = {
											parentanchor = left
											size = { 76 0 }
											tooltip = "[GovernmentView.GetMartialTooltip]"
											blockoverride "Icon" { using = icon_military }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetCoRuler.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetConsort.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetRuler.GetMartial))]" }
										}
									}
									widget = {
										size = { 200 29 }
										visible = "[GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetRuler.GetFinesse, GovernmentView.GetPlayer.GetCoRuler.GetFinesse )]"
										icon_and_text_dark_inverted = {
											parentanchor = left
											size = { 76 0 }
											tooltip = "[GovernmentView.GetFinesseTooltip]"
											blockoverride "Icon" { using = icon_civic }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetCoRuler.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetConsort.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetRuler.GetFinesse))]" }
										}
									}
									widget = {
										size = { 200 29 }
										visible = "[GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetRuler.GetCharisma, GovernmentView.GetPlayer.GetCoRuler.GetCharisma )]"
										icon_and_text_dark_inverted = {
											parentanchor = left
											size = { 76 0 }
											tooltip = "[GovernmentView.GetCharismaTooltip]"
											blockoverride "Icon" { using = icon_oratory }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetCoRuler.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetConsort.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetRuler.GetCharisma))]" }
										}
									}
									widget = {
										size = { 200 29 }
										visible = "[GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetRuler.GetZeal, GovernmentView.GetPlayer.GetCoRuler.GetZeal )]"
										icon_and_text_dark_inverted = {
											parentanchor = left
											size = { 76 0 }
											tooltip = "[GovernmentView.GetZealTooltip]"
											blockoverride "Icon" { using = icon_religious }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetCoRuler.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetConsort.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetRuler.GetZeal))]" }
										}
									}
									margin_bottom = 6
								}
							}							
		
							
							margin_widget = {
								size = { 90 140 }
								position = { 7 -1 }
								list_entry = {
									size = { 100% 100% }
									blockoverride "ListAlpha" { alpha = 1 }
									blockoverride "ListAlphaTexture" { texture = "gfx/interface/base_parts/horizontal_gradient_stretch_inverted.dds" }
								}
								parentanchor = bottom
								visible = "[GovernmentView.GetPlayer.GetGovernment.IsTribal]"
								#scale = 0.9
								
								flowcontainer = { 
									direction = vertical
									ignoreinvisible = yes
									spacing = 4
									resizeparent = yes
									widget = {
										size = { 200 29 }
										icon_and_text_dark = {
											parentanchor = right
											size = { 76 0 }
											tooltip = "[GovernmentView.GetMartialTooltip]"
											blockoverride "Icon" { using = icon_military }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetCoRuler.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetConsort.GetMartial, GovernmentView.GetPlayer.GetRuler.GetMartial ), GovernmentView.GetPlayer.GetRuler.GetMartial))]" }
										}
									}
									widget = {
										size = { 200 29 }
										icon_and_text_dark = {
											parentanchor = right
											size = { 76 0 }
											tooltip = "[GovernmentView.GetFinesseTooltip]"
											blockoverride "Icon" { using = icon_civic }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetCoRuler.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetConsort.GetFinesse, GovernmentView.GetPlayer.GetRuler.GetFinesse ), GovernmentView.GetPlayer.GetRuler.GetFinesse))]" }
										}
									}
									widget = {
										size = { 200 29 }
										icon_and_text_dark = {
											parentanchor = right
											size = { 76 0 }
											tooltip = "[GovernmentView.GetCharismaTooltip]"
											blockoverride "Icon" { using = icon_oratory }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetCoRuler.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetConsort.GetCharisma, GovernmentView.GetPlayer.GetRuler.GetCharisma ), GovernmentView.GetPlayer.GetRuler.GetCharisma))]" }
										}
									}
									widget = {
										size = { 200 29 }
										icon_and_text_dark = {
											parentanchor = right
											size = { 76 0 }
											tooltip = "[GovernmentView.GetZealTooltip]"
											blockoverride "Icon" { using = icon_religious }
											blockoverride "Text" { text = "[Select_int32( GovernmentView.GetPlayer.UseCoRuler, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetCoRuler.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetCoRuler.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), Select_int32( GovernmentView.GetPlayer.UseConsort, Select_int32( GreaterThanOrEqualTo_int32( GovernmentView.GetPlayer.GetConsort.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetConsort.GetZeal, GovernmentView.GetPlayer.GetRuler.GetZeal ), GovernmentView.GetPlayer.GetRuler.GetZeal))]" }
										}
									}
									margin_bottom = 8
								}
							}
							
							portrait_button = {
								name = "rulerpic"
								size = { 130 195 }
								position = { -4 14 }
								parentanchor = bottom|left
								using = pt_button_large
								pop_out = yes
								datacontext = "[GovernmentView.GetPlayer.GetRuler]"
								visible = "[Not( Player.HasTimedModifier('regency_government') )]"
								portrait_texture = "[Character.GetPortrait('default', 'looking_right')]"
							}
							portrait_button = {
								name = "regency_rulerpic"
								size = { 130 195 }
								position = { 4 14 }
								parentanchor = bottom|right
								using = pt_button_large
								pop_out = yes
								datacontext = "[GovernmentView.GetPlayer.GetRuler]"
								visible = "[Player.HasTimedModifier('regency_government')]"
								portrait_texture = "[Character.GetPortrait('default', 'looking_left')]"
							}
							portrait_button = {
								name = "consortpic"
								size = { 130 195 }
								position = { 4 14 }
								parentanchor = bottom|right
								using = pt_button_large
								pop_out = yes
								datacontext = "[GovernmentView.GetPlayer.GetConsort]"
								visible = "[And( GovernmentView.GetPlayer.UseConsort, And( GovernmentView.GetPlayer.GetConsort.IsValid, Not( Player.HasTimedModifier('regency_government') ) ) )]"
								portrait_texture = "[Character.GetPortrait('default', 'looking_left')]"
							}
							portrait_button = {
								name = "corulerpic"
								size = { 130 195 }
								parentanchor = bottom|right
								position = { 4 14 }
								using = pt_button_large
								pop_out = yes
								datacontext = "[GovernmentView.GetPlayer.GetCoRuler]"
								visible = "[And( GovernmentView.GetPlayer.UseCoRuler, Not( Player.HasTimedModifier('regency_government') ) )]"
								portrait_texture = "[Character.GetPortrait('default', 'looking_left')]"
							}
							portrait_button = {
								name = "regency_corulerpic"
								size = { 130 195 }
								parentanchor = bottom|left
								position = { -4 14 }
								using = pt_button_large
								pop_out = yes
								datacontext = "[GovernmentView.GetPlayer.GetCoRuler]"
								visible = "[And( GovernmentView.GetPlayer.UseCoRuler, Player.HasTimedModifier('regency_government') )]"
								portrait_texture = "[Character.GetPortrait('default', 'looking_right')]"
							}
							
							icon = {
								size = { 100% 100% }
								texture = "[GetCharacterBackgroundIconTint( GovernmentView.GetPlayer.GetRuler, GovernmentView.GetPlayer.GetRuler.GetLocation.GetTerrain )]"
							}

							sub_header = {
								datacontext = "[GovernmentView]"
								#visible = "[And( GovernmentView.GetPlayer.GetGovernment.IsMonarchy, GovernmentView.GetPlayer.GetConsort.IsValid )]"
								visible = "[And( GovernmentView.GetPlayer.GetConsort.IsValid, And( GovernmentView.GetPlayer.GetGovernment.IsMonarchy, Not( Player.HasTimedModifier('regency_government') ) ) )]"
								position = { 0 0 }
								size = { 400 22 }
								blockoverride "HeaderTexture" { texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"  }
								blockoverride "OrnamentTexture" { 
									using = flat_background_black 
									alpha = 0.4
								}
								blockoverride "Title_text" { 
									text = "RULER_TERM_SPOUSE_DESCRIPTION" 
									using = Black_FontColor
								}
								blockoverride "Max_text_width" { max_width = 400 }
								alpha = 0.95
							}
							sub_header = {
								datacontext = "[GovernmentView]"
								#visible = "[And( GovernmentView.GetPlayer.GetGovernment.IsMonarchy, GovernmentView.GetPlayer.GetConsort.IsValid )]"
								visible = "[And( GovernmentView.GetPlayer.UseCoRuler, And( GovernmentView.GetPlayer.GetGovernment.IsMonarchy, Player.HasTimedModifier('regency_government') ) )]"
								position = { 0 0 }
								size = { 400 22 }
								blockoverride "HeaderTexture" { texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"  }
								blockoverride "OrnamentTexture" { 
									using = flat_background_black 
									alpha = 0.4
								}
								blockoverride "Title_text" { 
									text = "REGENCY_TERM_SPOUSE_DESCRIPTION" 
									using = Black_FontColor
								}
								blockoverride "Max_text_width" { max_width = 400 }
								alpha = 0.95
							}
							
						}
					}
				}
				
				margin_widget = { #Ruler stats - TODO code
					size = { 0 40 }
					layoutpolicy_horizontal = expanding
					margin_top = 2
					allow_outside = yes
					
					flowcontainer = {	
						ignoreinvisible = yes
						position = { 0 4 }
						using = NoninteractableBG
						blockoverride "Margins"
						{
							margin = { 5 5 }
							margin_bottom = 15
							margin_left = 1
						}
						flowcontainer = {
							visible = [GovernmentView.GetPlayer.GetGovernment.IsMonarchy]
							spacing = 36
							icon_and_text = {
								size = { 76 0 }
								blockoverride "Icon" { using = icon_popularity }
								blockoverride "Text" { text = "[GovernmentView.GetPlayer.GetRuler.GetPopularity|/0]" }
								tooltip = "[GovernmentView.GetRulerPopularityToolTip]"
							}
							
							icon_and_text = {
								size = { 76 0 }
								blockoverride "Icon" { using = icon_corruption }
								blockoverride "Text" { text = "[GovernmentView.GetPlayer.GetRuler.GetCorruption|/0]" }
								tooltip = "[GovernmentView.GetPlayer.GetRuler.GetCorruptionToolTip]"
							}
						}
						flowcontainer = {
							visible = [GovernmentView.GetPlayer.GetGovernment.IsRepublic]
							spacing = 36
							margin_left = 6
							margin_top = 2
							margin_right = 6
							icon_and_text = {
								size = { 64 0 }
								blockoverride "Icon" { using = icon_popularity }
								blockoverride "Text" { text = "[GovernmentView.GetPlayer.GetRuler.GetPopularity|/0]" }
								tooltip = "[GovernmentView.GetRulerPopularityToolTip]"
							}
							
							icon_and_text = {
								size = { 76 0 }
								blockoverride "Icon" { using = icon_corruption }
								blockoverride "Text" { text = "[GovernmentView.GetPlayer.GetRuler.GetCorruption|/0]" }
								tooltip = "[GovernmentView.GetPlayer.GetRuler.GetCorruptionToolTip]"
							}
						}
						flowcontainer = {
							visible = [GovernmentView.GetPlayer.GetGovernment.IsTribal]
							spacing = 36
							icon_and_text = {
								size = { 76 0 }
								blockoverride "Icon" { using = icon_popularity }
								blockoverride "Text" { text = "[GovernmentView.GetPlayer.GetRuler.GetPopularity|/0]" }
								tooltip = "[GovernmentView.GetRulerPopularityToolTip]"
							}
							
							icon_and_text = {
								size = { 76 0 }
								blockoverride "Icon" { using = icon_corruption }
								blockoverride "Text" { text = "[GovernmentView.GetPlayer.GetRuler.GetCorruption|/0]" }
								tooltip = "[GovernmentView.GetPlayer.GetRuler.GetCorruptionToolTip]"
							}
						}
					}
					flowcontainer = {
						spacing = 8
						margin_top = 4
						parentanchor = hcenter
						cpt_button = {
							size = { 30 45 }
							visible = "[GovernmentView.GetPlayer.GetGovernment.IsRepublic]"
							datacontext = "[GovernmentView.GetPlayer.GetSuccession.GetPrimaryHeir]"
							blockoverride "ShowIcons" { visible = no }
						}
						widget = {
							size = { 140 44 }
							tag = {
								text = "[GovernmentView.GetPlayer.GetSuccession.GetPrimaryHeir.GetSuccessionScore|0]"
								tooltip = "[GovernmentView.GetPlayer.GetSuccession.GetPrimaryHeir.GetSuccessionScoreInfo]"
								visible = "[GovernmentView.GetPlayer.GetGovernment.IsRepublic]"
							}
							tag = {
								text = "[GovernmentView.GetPlayer.GetSuccession.GetSecondaryHeir.GetSuccessionScore|0]"
								tooltip = "[GovernmentView.GetPlayer.GetSuccession.GetSecondaryHeir.GetSuccessionScoreInfo]"
								parentanchor = right
								visible = "[And( GovernmentView.GetPlayer.GetGovernment.IsRepublic, GovernmentView.GetPlayer.UseCoRuler)]"
							}
							fixed_size_progressbar = {
								visible = "[GovernmentView.GetPlayer.GetGovernment.IsRepublic]" #here
								blockoverride "size" { size = { 140 7 } }
								blockoverride "Value" { value = "[GovernmentView.GetTermDuration]" }
								tooltip = "[GovernmentView.GetTermDurationInfo]"									
								parentanchor = bottom	
							}
						}
						cpt_button = {
							size = { 30 45 }
							visible = "[And( GovernmentView.GetPlayer.GetGovernment.IsRepublic, GovernmentView.GetPlayer.UseCoRuler)]"
							datacontext = "[GovernmentView.GetPlayer.GetSuccession.GetSecondaryHeir]"
							blockoverride "ShowIcons" { visible = no }
						}
					}
					flowcontainer = {
						parentanchor = right
						ignoreinvisible = yes
						position = { 0 4 }
						using = NoninteractableBG
						blockoverride "Margins"
						{
							margin = { 5 5 }
							margin_bottom = 15
							margin_right = 1
						}
						flowcontainer = {
							datacontext = "[GovernmentView.GetPlayer.GetConsort]"
							visible = "[And( GovernmentView.GetPlayer.UseConsort, Character.IsValid )]"  
							spacing = 36
							icon_and_text = {
								size = { 90 0 }
								blockoverride "Icon" { using = icon_loyalty }
								blockoverride "Text" { text = "[Character.GetLoyalty|/0]" }
								tooltipwidget = character_loyalty_tooltip
							}
							
							icon_and_text = {
								size = { 90 0 }
								blockoverride "Icon" { using = icon_power_base }
								blockoverride "Text" { text = "[GovernmentView.GetPlayer.GetConsort.GetPowerBase|/0]" }
								tooltip = "[GovernmentView.GetPlayer.GetConsort.GetPowerBaseInfo]"
							}
						}
						flowcontainer = {
							datacontext = "[GovernmentView.GetPlayer.GetCoRuler]"
							visible = "[And( GovernmentView.GetPlayer.UseCoRuler, Character.IsValid )]"  
							spacing = 28
							margin_right = 8
							margin_top = 2
							icon_and_text = {
								size = { 76 0 }
								blockoverride "Icon" { using = icon_loyalty }
								blockoverride "Text" { text = "[Character.GetLoyalty|/0]" }
								tooltipwidget = character_loyalty_tooltip
								
							}
							
							icon_and_text = {
								size = { 76 0 }
								blockoverride "Icon" { using = icon_power_base }
								blockoverride "Text" { text = "[GovernmentView.GetPlayer.GetCoRuler.GetPowerBase|/0]" }
								tooltip = "[GovernmentView.GetPlayer.GetCoRuler.GetPowerBaseInfo]"
							}
						}
					}
				}
				margin_widget = { #Unique Mechanics for gov archetypes
					size = { 0 168 }
					layoutpolicy_horizontal = expanding
					margin_top = 12
					visible = [GovernmentView.GetPlayer.GetGovernment.IsMonarchy]
					margin_widget = {
						size = { 100% 100% }
						sub_header = {
							size = { 50% 26 }
							blockoverride "Title_text" { text = "LEGITIMACY" }
							tooltip = "[GovernmentView.GetLegitimacyTooltip]"
						}
						sub_header = {
							size = { 50% 26 }
							position = { 308 0 }
							blockoverride "Title_text" { text = "SUCCESSION" }
							tooltip = "[GovernmentView.GetLegitimacyTooltip]"
						}
						flowcontainer = {
							direction = vertical
							position = { 0 36 }
							flowcontainer = {
								spacing = 61
								icon_and_text = {
									size = { 180 0 }
									blockoverride "Icon" { using = icon_legitimacy }
									blockoverride "Text" { text = "[GovernmentView.GetPlayer.GetLegitimacy|0]%" }
									tooltip = "[GovernmentView.GetLegitimacyTooltip]"
									parentanchor = bottom
								}
								icon_button_square = {
									tooltip = "[GovernmentView.GetIncreaseLegitimacyDesc]"
									blockoverride "Icon" { texture = "gfx/interface/buttons/button_endorse.dds" }
									blockoverride "On_click" 
									{
										enabled = "[GovernmentView.CanIncreaseLegitimacy]"
										onclick = "[GovernmentView.IncreaseLegitimacy]"
									}
									blockoverride "ClickSound"
									{
										clicksound = "event:/SFX/UI/Actions/sfx_ui_action_convert_currency"
										oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
									}
									
								}
							}
						}
						margin_widget = {
							position = { 12 84 }
							size = { 264 60 }
							tooltip = "GOV_SCREN_LEG_EFF"
							using = NoninteractableBG
							textbox = {
								position = { 3 -3 }
								using = BaseFontXS
								using = Black_FontColor
								parentanchor = vcenter|left
								text = "[GovernmentView.GetLegitimacyEffectInfo]"
							}
						}
						container = {
							position = { 312 36 }
							cpt_button = {
								size = { 76 113 }
								blockoverride "Context" { datacontext = "[GovernmentView.GetPlayer.GetSuccession.GetPrimaryHeir]" }
							}
							
							flowcontainer = {
								position = { 180 8 }
								direction = vertical
								widgetanchor = top|hcenter
								ignoreinvisible = yes
								spacing = 24
								
								icon_and_text = {
									size = { 140 0 }
									blockoverride "Icon" { using = icon_legitimacy }
									blockoverride "Text" { text = "[GovernmentView.GetPlayer.GetModifierPureValue('next_ruler_legitimacy')|0]%" }
									tooltip = "[GovernmentView.GetPlayer.GetModifierTooltip('next_ruler_legitimacy')]"
								}
								icon_and_text = {
									size = { 140 0 }
									blockoverride "Text" { text = "[GovernmentView.GetPlayer.GetSuccession.GetPrimaryHeir.GetSuccessionScore|0]" }
									tooltip = "[GovernmentView.GetPlayer.GetSuccession.GetPrimaryHeir.GetSuccessionScoreInfo]"
								}
							}
						}
					}
				}
				margin_widget = { #Unique Mechanics for gov archetypes
					size = { 0 158 }
					layoutpolicy_horizontal = expanding
					margin_top = 12
					visible = [GovernmentView.GetPlayer.GetGovernment.IsTribal]
					margin_widget = {
						size = { 100% 100% }
						sub_header = {
							size = { 70% 26 }
							blockoverride "Title_text" { text = "CENTRALIZATION" }
							tooltip = "[GovernmentView.GetPlayer.GetCentralizationTooltip]"
						}
						sub_header = {
							size = { 30% 26 }
							parentanchor = right
							blockoverride "Title_text" { text = "TRIBAL_INTERACTIONS" }
						}
						
						container = {
							position = { 5 38 }
							tooltip = "[GovernmentView.GetPlayer.GetCentralizationTooltip]"
							icon_and_text = {
								size = { 130 0 }
								blockoverride "Icon" { using = icon_centralization }
								blockoverride "Text" { text = "[GovernmentView.GetPlayer.GetCentralization|2]%" }
							}
							icon = {
								texture = "gfx/interface/arrows_strip.dds"
								position = { 126 0 }
								framesize = { 50 50 }
								size = { 34 34 }
								frame = "[GovernmentView.GetCentralizationChangeFrame]"
								parentanchor = vcenter
							}
						}
						
						widget = {
							position = { 178 30 }
							tooltip = "GOV_SCREN_CENT_EFF"
							using = NoninteractableBG
							blockoverride "Margins"
							{
								margin = { 4 4 }
								margin_left = 6
								margin_top = 0
							}
							#scale = 0.9
							textbox = {
								resizeparent = yes
								autoresize = yes
								position = { 10 0 }
								maximumsize = { 244 208 }
								multiline = yes
								using = BaseFontXS
								using = Black_FontColor
								text = "[GovernmentView.GetCentralizationEffectInfo]"
								margin_right = 4
								minimumsize = { 244 112 }
							}
						}
						
						flowcontainer = {
							position = { -5 42 }
							parentanchor = right
							spacing = 6
							
							icon_button_square = {
								datacontext = "[GetScriptedGui('assemble_war_council_button')]"
								visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( Player.MakeScope ).End )]"
								blockoverride "On_click"
								{
									enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( Player.MakeScope ).End )]"
									onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
								}
								tooltip = "ASSEMBLE_WAR_COUNCIL_BUTTON_TOOLTIP"
								blockoverride "ClickSound" { clicksound = "event:/SFX/UI/Actions/sfx_ui_action_goverment_interactions" }
								blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/war_council.dds" }
							}
							icon_button_square = {
								datacontext = "[GetScriptedGui('assemble_raiding_party_button')]"
								visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( Player.MakeScope ).End )]"
								blockoverride "On_click"
								{
									enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( Player.MakeScope ).End )]"
									onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
								}
								tooltip = "ASSEMBLE_RAIDING_PART_BUTTON_TOOLTIP"
								blockoverride "ClickSound" { clicksound = "event:/SFX/UI/Actions/sfx_ui_action_goverment_interactions" }
								blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/raiding_parties.dds" }
							}
							icon_button_square = {
								datacontext = "[GetScriptedGui('hold_games_button')]"
								visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( Player.MakeScope ).End )]"
								blockoverride "On_click"
								{
									enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( Player.MakeScope ).End )]"
									onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
								}
								tooltip = "HOLD_GAMES_BUTTON_TOOLTIP"
								blockoverride "ClickSound" { clicksound = "event:/SFX/UI/Actions/sfx_ui_action_goverment_interactions" }
								blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/hold_games.dds" }
							}
							icon_button_square = {
								datacontext = "[GetScriptedGui('decentralize_realm_button')]"
								visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( Player.MakeScope ).End )]"
								blockoverride "On_click"
								{
									enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( Player.MakeScope ).End )]"
									onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
								}
								tooltip = "DECENTRALIZE_REALM_BUTTON_TOOLTIP"
								blockoverride "ClickSound" { clicksound = "event:/SFX/UI/Actions/sfx_ui_action_goverment_interactions" }
								blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/tribal_migration.dds" }
							}
						}
						

					}
				}
				margin_widget = { #Monarchy mechanics
					size = { 0 360 }
					layoutpolicy_horizontal = expanding
					#using = NoninteractableBG
					visible = "[GovernmentView.GetPlayer.GetGovernment.IsMonarchy]"
					icon = {
						texture = "gfx/interface/event_window/Event_throneroom_king_on_throne_a_few_councilors_nearby.dds"
						scale = 0.46
						parentanchor = top|hcenter
						position = { 0 26 }
					}
					flowcontainer = {
						parentanchor = left
						position = { 8 38 }
						spacing = 82
						direction = vertical
						
						icon_button_square = {
							datacontext = "[GetScriptedGui('assemble_war_council_button')]"
							visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( Player.MakeScope ).End )]"
							blockoverride "On_click"
							{
								enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( Player.MakeScope ).End )]"
								onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
							}
							tooltip = "ASSEMBLE_WAR_COUNCIL_BUTTON_TOOLTIP"
							
							blockoverride "ClickSound" { clicksound = "event:/SFX/UI/Actions/sfx_ui_action_goverment_interactions" }
							blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/war_council.dds" }
						}
						
						icon_button_square = {
							datacontext = "[GetScriptedGui('oaths_of_allegiance_button')]"
							visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( Player.MakeScope ).End )]"
							blockoverride "On_click"
							{
								enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( Player.MakeScope ).End )]"
								onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
							}
							tooltip = "OATHS_OF_ALLEGIANCE_BUTTON_TOOLTIP"
							
							blockoverride "ClickSound" { clicksound = "event:/SFX/UI/Actions/sfx_ui_action_goverment_interactions" }
							
							blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/demand_oaths_of_allegience.dds" }
						}
					}
					flowcontainer = {
						direction = vertical
						position = { -8 38 }
						parentanchor = right
						spacing = 82
						icon_button_square = {
							datacontext = "[GetScriptedGui('hold_games_button')]"
							visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( Player.MakeScope ).End )]"
							blockoverride "On_click"
							{
								enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( Player.MakeScope ).End )]"
								onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
							}
							tooltip = "HOLD_GAMES_BUTTON_TOOLTIP"
							
							blockoverride "ClickSound" { clicksound = "event:/SFX/UI/Actions/sfx_ui_action_goverment_interactions" }
							blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/hold_games.dds" }
						}
						
						icon_button_square = {
							datacontext = "[GetScriptedGui('patron_of_arts_button')]"
							visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( Player.MakeScope ).End )]"
							blockoverride "On_click"
							{
								enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( Player.MakeScope ).End )]"
								onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
							}
							tooltip = "PATRON_OF_ARTS_BUTTON_TOOLTIP"
							
							blockoverride "ClickSound" { clicksound = "event:/SFX/UI/Actions/sfx_ui_action_goverment_interactions" }
							blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/patronize_arts.dds" }
						}
					}

					margin_widget = {
						size = { 100% 100% }
						
						sub_header = { 
							size = { 100% 24 } 
							blockoverride "Title_text" { text = "SUCCESSION_AND_PRETENDERS" }
						}
						
						dynamicgridbox = {
							position = { 0 -14 }
							parentanchor = bottom
							flipdirection = yes
							datamodel = "[GovernmentView.GetPlayer.GetSuccession.GetSuccessors]"
							
							item = {
								margin_widget = {
									margin = { 2 2 }
									size = { 154 138 }
									
									icon_card = {
										size = { 148 100% } 
										blockoverride "Icon" {}

										list_entry = { size = { 100% 100% } }
										cpt_button = {
											#datacontext implicit
											position = { 6 6 }
											size = { 60 90 }
										}
									}
								
									flowcontainer = {
										parentanchor = right
										direction = vertical
										position = { -5 3 }
										spacing = 3
										scale = 0.9
										icon_and_text = {
											name = "1"
											size = { 86 24 }
											blockoverride "Icon" { using = icon_loyalty }
											blockoverride "Text" { text = "[Character.GetLoyalty|0]" }
											tooltipwidget = { 
												using = character_loyalty_tooltip 
											}
										}
										icon_and_text = {
											name = "2"
											size = { 86 0 } 
											blockoverride "Text" { text = "[Character.GetSuccessionScore|0]" }
											tooltip = "[Character.GetSuccessionScoreInfo]"
										}
										icon_and_text = {
											name = "3"
											size = { 86 0 }
											blockoverride "Icon" { texture = "gfx/interface/icons/modifiers/max_friends.dds" }
											blockoverride "Text" { text = "[Character.GetNumOfSupportsAsHeir]" }
											tooltip = "[Character.GetHeirSupportInformation]"
										}
									}
									
									margin_widget = {  
										size = { 100% 28 }
										margin = { 6 0 }
										parentanchor = bottom
										position = { 0 -6 }
										text_button_square = { 
											size = { 100% 100% }
											datacontext = "[GetScriptedGui('anoint_heir')]"
											visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( Character.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
											blockoverride "On_click"
											{
												enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( Character.MakeScope ).AddScope( 'player', Player.MakeScope ).End )]"
												onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Character.MakeScope ).AddScope( 'player', Player.MakeScope ).End )]"
											}
											tooltip = "[ScriptedGui.BuildTooltip( GuiScope.SetRoot( Character.MakeScope ).AddScope( 'player', Player.MakeScope ).End )]"
											blockoverride "Center_text" { text = "NOMINATE_HEIR_BUTTON" }
										}
									}
								}
							}
						}
					}
				}
				margin_widget = { #Tribal mechanics
					size = { 0 360 }
					layoutpolicy_horizontal = expanding
					#using = NoninteractableBG
					visible = "[GovernmentView.GetPlayer.GetGovernment.IsTribal]"
					icon = {
						texture = "gfx/interface/event_window/Event_gallic_clan_chiefs_discussing.dds"
						scale = 0.65
						#parentanchor = bottom|left
						position = { -32 28 }
					}
					margin_widget = {
						size = { 100% 100% }
						
						sub_header = { 
							size = { 100% 24 } 
							blockoverride "Title_text" { text = "CLAN_CHIEFS" }
						}
						
						icon_and_text = {
							size = { 138 0 }
							position = { 12 308 }
							blockoverride "Icon" { using = icon_clan_chiefs }
							blockoverride "Text" { text = "[GovernmentView.GetPlayer.GetModifierPureValue('num_of_clan_chiefs')|0]" }
							tooltip = "[GovernmentView.GetPlayer.GetModifierTooltip('num_of_clan_chiefs')]"
						}
						
						margin_widget = {
							size = { 100% 252 }
							position = { 0 16 }
							parentanchor = bottom
							hbox = {
								layoutpolicy_horizontal = expanding
								datamodel = "[GovernmentView.GetClanLeaders]"
								
								item = {
									margin_widget = {
										margin = { 2 2 }
										size = { 106 250 }
										scale = 0.9
										datacontext = "[ClanLeaderItem.GetCharacter]"
										icon_card = {
											size = { 148 100% } 
											blockoverride "Icon" {}

											list_entry = { size = { 100% 100% } }
											cpt_button = {
												position = { 6 6 }
												size = { 90 135 }
											}
											background = {
												name = "Shadow"
												texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
												shaderfile = "gfx/FX/pdxgui_default.shader"
												spriteType = corneredtiled
												spriteborder = { 8 8 }
												margin_left = 4
												margin_bottom = 4
												alpha = 0.5
											}
										}
										
										flowcontainer = {
											parentanchor = hcenter|bottom
											direction = vertical
											position = { 0 -6 }
											spacing = 4
											icon_and_text = {
												name = "1"
												size = { 82 24 }
												blockoverride "Icon" { using = icon_loyalty }
												blockoverride "Text" { text = "[Character.GetLoyalty|0]" }
												tooltipwidget = { 
													using = character_loyalty_tooltip 
												}
											}
											icon_and_text = {
												name = "2"
												size = { 82 0 } 
												blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/clan_retinue.dds" }
												blockoverride "Text" { text = "[ClanLeaderItem.GetCharacter.GetNumberOfLoyalCohorts]" }
												tooltip = "LOYAL_COHORTS"
											}
											icon_and_text = {
												name = "3"
												size = { 82 0 }
												blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/election_term.dds" }
												blockoverride "Text" { text = "[ClanLeaderItem.GetCharacter.GetSuccessionScore|0]" }
												tooltip = "[ClanLeaderItem.GetCharacter.GetSuccessionScoreInfo]"
											}
										}
									}
								}
								hbox = { layoutpolicy_horizontal = expanding }
							}
							
						}
					}
				}
				margin_widget = { #Unique Mechanics for Republic
					size = { 0 528 }
					layoutpolicy_horizontal = expanding
					margin_top = 12
					visible = "[GovernmentView.GetPlayer.GetGovernment.IsRepublic]"
					margin_widget = { 
						size = { 100% 100% }
						
						sub_header = {
							size = { 100% 24 }
							blockoverride "Title_text" { text = "SENATE_FACTIONS" }
						}
						
						icon = {
							texture = "gfx/interface/event_window/Event_test.dds"
							scale = 0.47
							parentanchor = top|hcenter
							position = { 0 52 }
						}
						
						margin_widget = {
							name = "Senate Room"
							margin = { 4 0 }
							size = { 100% 420 }
							position = { 0 38 }
							parentanchor = hcenter
							
							dynamicgridbox = {
								position = { 2 3 }
								
								size = { 160 200 }
								
								flipdirection = yes
								datamodel_wrap = 3
								
								
								datamodel = "[GovernmentView.GetLeftSenate]"
								layoutanchor = bottomleft

								item = {
									margin_widget = {
										size = { 24 24 }
										margin = { 1 1 }
										icon_card = {
											name = "Faction_Base"
											parentanchor = bottom|left
											position = { -2 0 }
											size = { 100% 100% }
											blockoverride "Icon" { 
												texture = "[GetPartyIcon(SenateItemGlue.GetType)]" 
												size = { 18 18 }
												position = { 0 0 }
											}
											blockoverride "BorderMargin" { margin = { 1 1 } } 
											tooltip = "[SenateItemGlue.GetPartyName|T]"
										}
									}
								}
							}
							
							dynamicgridbox = {
								parentanchor = right
								
								flipdirection = yes
								datamodel_wrap = 3
								position = { -2 3 }
								
								datamodel = "[GovernmentView.GetRightSenate]"
								layoutanchor = bottomright
								
								item = {
									margin_widget = {
										size = { 24 24 }
										margin = { 1 1 }
										icon_card = {
											name = "Faction_Base"
											parentanchor = bottom|left
											position = { -2 0 }
											size = { 100% 100% }
											blockoverride "Icon" { 
												texture = "[GetPartyIcon(SenateItemGlue.GetType)]" 
												size = { 18 18 }
												position = { 0 0 }
											}
											blockoverride "BorderMargin" { margin = { 1 1 } } 
											tooltip = "[SenateItemGlue.GetPartyName|T]"
										}
									}
								}
							}
						}
							
						tag = {
							position = { 0 34 }
							datacontext = "[GovernmentView]"
							name = "POLITICAL_OBJECTIVE"
							multiline = no
							autoresize = yes
							parentanchor = hcenter
							text = "CURRENT_AGENDA_STRING"
							using = BaseFontL
							using = Black_FontColor
							fontsize = 18
							tooltip = "[GovernmentView.GetRulingParty.GetAgenda.GetDescription]"
						}
						
						dynamicgridbox = {
							position = { 0 220 }
							parentanchor = hcenter
							flipdirection = yes
							scale = 1
							datamodel = "[GovernmentView.GetParties]"
							
							item = {
								margin_widget = {
									size = { 150 276 }
									margin = { 2 2 }
									margin_bottom = 48
									allow_outside = yes
									icon_card = {
										blockoverride "Icon" {}
										size = { 100% 100% }
										tooltip = "[PartyItemGlue.GetTooltip]"
										list_entry = {
											size = { 100% 100% }
											alpha = 0.5
											blockoverride "FamilyColor" { color = { 0 0 0 1 } }
											visible = "[Not( PartyItemGlue.IsInPower )]"
										}
										tag = {
											parentanchor = hcenter
											position = { 0 3 }
											text = "[PartyItemGlue.GetParty.GetName]"
											
										}
										icon_and_text = {
											size = { 90 0 }
											scale = 0.9
											position = { 0 28 }
											parentanchor = hcenter
											blockoverride "Icon" 
											{ 
												texture = "gfx/interface/diplomacy/icon_senate_approval.dds" 
												framesize = { 40 40 }
												size = { 34 34 }
											}
											blockoverride "Text" { text = "[PartyItemGlue.GetPartyApproval|0]" }
											tooltip = "[PartyItemGlue.GetPartyApprovalDesc]"
										}
										icon_and_text = {
											size = { 90 0 }
											scale = 0.9
											position = { 0 64 }
											parentanchor = hcenter
											blockoverride "Icon" 
											{ 
												texture = "gfx/interface/icons/shared_icons/senate_seat.dds"
												size = { 34 34 }
											}
											blockoverride "Text" { text = "[PartyItemGlue.GetSenateSeats|0]" }
											tooltip = "[PartyItemGlue.GetSenateSeatsDesc]"
										}
										cpt_button = {
											parentanchor = hcenter
											position = { 0 102 }
											datacontext = "[PartyItemGlue.GetPartyLeader]"
											size = { 60 90 }
											blockoverride "ShowIcons" { visible = no }
											blockoverride "PortraitTexture" { portrait_texture = "[Character.GetPortrait('default', 'head')]" }

										}
										tag = {
											parentanchor = hcenter
											position = { 0 192 }
											tooltip = "[PartyItemGlue.GetParty.GetAgenda.GetDescription]"
											text = "[PartyItemGlue.GetParty.GetAgenda.GetName]"
											max_width = 110
											fontsize_min = 12
											elide = right
										}
									}
									icon = {
										texture = "gfx/interface/tiles/senate_frame.dds"
										size = { 158 240 }
										spriteType = corneredtiled
										spriteborder = { 65 65 }
										position = { 0 -8 }
										parentanchor = hcenter
										visible = "[PartyItemGlue.IsInPower]"
									}
									icon_button_square = {
										size = { 44 44 }
										parentanchor = hcenter|bottom
										position = { 0 49 }
										datacontext = "[GetScriptedGui('republic_party_button')]"
										
										blockoverride "Icon" { texture = "[GetPartyIcon(PartyItemGlue.GetType)]" }
										blockoverride "On_click" 
										{
											enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( PartyItemGlue.GetPartyLeader.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
											onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( PartyItemGlue.GetPartyLeader.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
										}
										blockoverride "ClickSound"
										{
											oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
											clicksound = "event:/SFX/UI/Actions/sfx_ui_action_goverment_interactions"
										}
										tooltip = "REPUBLIC_PARTY_BUTTON_TOOLTIP"
										
									}
									
								}
							}		
						}
						
						icon_button_square = {
							parentanchor = bottom
							size = { 44 44 }
							position = { 6 -19 }
							datacontext = "[GetScriptedGui('summon_curiate_assembly')]"
							visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( Player.MakeScope ).End )]"
							blockoverride "On_click"
							{
								enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( Player.MakeScope ).End )]"
								onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
							}
							tooltip = "SUMMON_CURIATE_ASSEMBLY_BUTTON_TOOLTIP"
							
							blockoverride "ClickSound"
							{
								oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
								clicksound = "event:/SFX/UI/Actions/sfx_ui_action_goverment_interactions"
							}
							
							blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/curiate_assembly.dds" }					
						} 
						
						icon_button_square = {
							parentanchor = bottom|right
							position = { -8 -19 }
							size = { 44 44 }
							datacontext = "[GetScriptedGui('assemble_war_council_republic_button')]"
							visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( Player.MakeScope ).End )]"
							blockoverride "On_click"
							{
								enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( Player.MakeScope ).End )]"
								onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
							}
							tooltip = "ASSEMBLE_WAR_COUNCIL_REPUBLIC_BUTTON_TOOLTIP"
							
							blockoverride "ClickSound"
							{
								oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
								clicksound = "event:/SFX/UI/Actions/sfx_ui_action_goverment_interactions"
							}
							
							blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/war_council.dds" }					
						}
					}
				}
				vbox = {
					layoutpolicy_vertical = expanding
				}
			}
			
		}
		
	}

}