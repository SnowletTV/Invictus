template editor_text
{
	font = "standard_font"
	fontsize = 13
	fontcolor = { 1 1 1 1 }
}

template preview_portrait_base
{
	pop_out = yes
	datacontext = [GetPortraitEditorWindow.GetCharacter]
	portrait_texture = "[GetPortraitTextureFromDna('type=male|dna=8gDwAAQGCAUAGAAZALAAsADPAM8A4QDhAKUApQDmAOYD0APQAP4A/gL9Av0AmQCZAHkAAAAAAAAAAAAAAAAAAAAAAAAA/wD/')]"
	tooltip_enabled = no
	alwaystransparent = no
}
template preview_portrait_200
{
	using = portrait_200
	using = preview_portrait_base
}
template preview_portrait_150
{
	using = portrait_150
	using = preview_portrait_base
}
template preview_portrait_100
{
	using = portrait_100
	using = preview_portrait_base
}
template preview_portrait_80
{
	using = portrait_80
	using = preview_portrait_base
}
template preview_portrait_60
{
	using = portrait_60
	using = preview_portrait_base
}

template portrait_editor_tab_button
{
	gfxtype = updownframedbuttongfx
	clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_click"
	oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
	texture = "gfx/editor_gui/editor_button.dds"
	spriteType = CorneredStretched
	spriteborder = { 4 4 }
	effectname = "NoHighlight"
	framesize = { 16 16 }
	upframe = 1
	downframe = 2
	overframe = 3
	disableframe = 4
	intersectionmask = yes
	using = FontNormal
}
template portrait_editor_slider_button
{
	using = editor_button
	fontsize = 12
	size = { 60 15 }
	parentanchor = top|left
	layoutpolicy_horizontal = Growing
}
template portrait_editor_slider_checkbox_text
{
	size = { 20 15 }
	fontsize = 13
	using = FontNormal
	align = left|nobaseline
	layoutpolicy_horizontal = Growing
	text = "_"
	autoresize = yes
}

template childgenerator_parent_widget
{
	size = { 300 200 }
	button = {
		using = preview_portrait_150
		parentanchor = bottom|left
		portrait_texture = "[GetPortraitTextureFromDna(ChildItem.GetDnaForTexture)]"
		frame_tier = 5
		tooltip_enabled = no
		alwaystransparent = no
	}
	button = {
		using = editor_button
		text = "Paste DNA"
		position = { 200 5 }
		size = { 90 30 }
		onclick = "[ChildItem.PasteDna]"
	}
	textbox = {
		position = { 200 40 }
		text = "[ChildItem.GetDna]"
		size = { 100 140 }
		using = FontNormal
		fontsize = 14
		multiline = yes
	}
}

window = {
	using = editor_window
	name = "portrait_3dview_window"
	parentanchor = top|left
	size = { 560 500 }
	position = { 1360 0 }
	widgetanchor = top|left
	resizable = yes
	movable = yes
	
	state = {
		name = expand_3d_portrait_view
		trigger_when = "[GetVariableSystem.Exists('expand_3d_portrait_view')]"
		size = { 1629.749 524.8  }
		position = { 5 5 }
	}

	state = {
		name = minimize_3d_portrait_view
		trigger_when = "[Not(GetVariableSystem.Exists('expand_3d_portrait_view'))]"
		size = { 560 500 }
		position = { 1360 0 }
	}

	button = {
		using = editor_button
		name = "close_button"
		position = { -4 5 }
		size = { 20 20 }
		parentanchor = top|right
		text = "X"
		tooltip = "Click to close. Right click to expand/minimize."
		align = center|nobaseline
		onclick = "[Portrait3dView.Close]"
		onrightclick = "[GetVariableSystem.Toggle('expand_3d_portrait_view')]"
		shortcut = "close_window"
		fontcolor = { 1 1 1 1 }
	}

	hbox = {
		margin = { 5 5 }
		margin_top = 29
		portrait_preview_widget = {
			background = {
				shaderfile = "gfx/FX/pdxgui_default.shader"
				texture = "gfx/interface/portrait/background_ruler_republic_wartent_roman_huge.dds"
				spriteType = corneredstretched
				alpha = 1
				margin = { 5 5 }
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
					blend_mode = alphamultiply
					spriteType = corneredstretched
					spriteborder = { 60 60 }
				}
			}
			layoutpolicy_horizontal = Growing
			layoutpolicy_vertical = Growing
			name = "3d_preview"
			entity_instance = [Portrait3dView.GetPortraitEntity]
			#entity_instance = "building_castle"
			portrait_context = [Portrait3dView.GetPortraitContext]
			camera_look_at = { 0 6 -2 }
			camera_position = { -20 10 -50 }
			camera_zoom_limits = { 10 200 }
			camera_near_far = { 0.5 500 }
			realtime = yes
			camera_fov_y_degrees = 26
		}
	}
}


window = {
	using = editor_window
	name = "portrait_editor_window"
	parentanchor = top|left
	size = { 1330 910 }
	position = { 57 130 }
	movable = yes
	widgetanchor = top|left
	#filter_mouse = left
	
	state = {
		name = minimize_main_portrait_view
		trigger_when = "[GetVariableSystem.Exists('smaller_main_view')]"
		size = { 1330 910 }
		position = { 5 495 }
	}

	state = {
		name = normalize_main_portrait_view
		trigger_when = "[Not(GetVariableSystem.Exists('smaller_main_view'))]"
		size = { 1330 910 }
		position = { 57 130 }
	}

	widget = {
		size = { 100% 100% }
		name = "editor_tab"
		visible = "[PortraitEditorWindow.IsCurrentContentTab('editor_tab')]"
		
		button = {
			using = editor_button
			name = "close_button"
			position = { -4 5 }
			size = { 20 20 }
			parentanchor = top|right
			text = "X"
			align = center|nobaseline
			onclick = "[PortraitEditorWindow.Close]"
			onrightclick = "[GetVariableSystem.Toggle('smaller_main_view')]"
			shortcut = "close_window"
			fontcolor = { 1 1 1 1 }
		}
		
		textbox = {
			position = { 10 2 }
			size = { 200 20 }
			using = FontNormal
			text = "Portrait Editor"
		}
		
		container = {
			name = top_container
			position = { 340 40 }
			container = {
				name = "dna_buttons_container"
				visible = "[Not(GetVariableSystem.Exists('pe_dna_buttons'))]"
				button = {
					using = editor_button
					name = "copy_dna_button"
					position = { 8 0 }
					size = { 120 40 }
					text = "Copy DNA"
					tooltip = "Click to copy DNA. Rightclick to toggle DNA string visibility."
					fontsize = 20
					onclick = "[PortraitEditorWindow.OnCopyDNA]"
					onrightclick = "[GetVariableSystem.Toggle('pe_show_dna_string')]"
					fontcolor = { 1 1 1 1 }
				}
				button = {
					using = editor_button
					name = "paste_dna_button"
					position = { 128 0 }
					size = { 120 40 }
					text = "Paste DNA"
					fontsize = 20
					onclick = "[PortraitEditorWindow.OnPasteDNA]"
					fontcolor = { 1 1 1 1 }
				}
			}

			##############################################
			@rightbutton_y = 385
			@rightbutton_x = 785
			button = {
				visible = "[Not(GetVariableSystem.Exists('pe_additional_options'))]"
				using = editor_button
				position = { @[rightbutton_x + 90] @[rightbutton_y + 440] }
				size = { 110 40 }
				text = "More Options"
				fontsize = "14"
				onclick = "[GetVariableSystem.Toggle('pe_additional_options')]"
				fontcolor = { 1 1 1 1 }
			}
			container = {
				name = "additional_options"
				visible = "[GetVariableSystem.Exists('pe_additional_options')]"
				button = {
					using = editor_button
					position = { @rightbutton_x @rightbutton_y }
					text = "DNA Buttons Visiblity"
					size = { 200 40 }
					onclick = "[GetVariableSystem.Toggle('pe_dna_buttons')]"
					fontcolor = { 1 1 1 1 }
				}
				button = {
					using = editor_button
					position = { @rightbutton_x @[rightbutton_y + 40] }
					text = "Children"
					size = { 200 40 }
					onclick = "[PortraitEditorWindow.SetContentTab('children_tab')]"
					forcedown = "[PortraitEditorWindow.IsCurrentContentTab('children_tab')]"
					fontcolor = { 1 1 1 1 }
				}
				button = {
					using = editor_button
					position = { @rightbutton_x @[rightbutton_y + 80] }
					size = { 200 40 }
					text = "Reload Face Textures"
					onclick = "[ExecuteConsoleCommand('reload texture head')]"
					fontcolor = { 1 1 1 1 }
				}
				button = {
					using = editor_button
					position = { @rightbutton_x @[rightbutton_y + 120] }
					size = { 200 40 }
					text = "Reload Clothes Textures"
					onclick = "[ExecuteConsoleCommand('reload texture clothes')]"
					fontcolor = { 1 1 1 1 }
				}
				button = {
					using = editor_button
					position = { @rightbutton_x @[rightbutton_y + 160] }
					size = { 200 40 }
					text = "Reload Hair Textures"
					onclick = "[ExecuteConsoleCommand('reload texture hair')]"
					fontcolor = { 1 1 1 1 }
				}
				button = {
					using = editor_button
					position = { @rightbutton_x @[rightbutton_y + 200] }
					size = { 200 40 }
					text = "Reload Decal Textures"
					onclick = "[ExecuteConsoleCommand('reload texture skin')]"
					fontcolor = { 1 1 1 1 }
				}
				button = {
					using = editor_button
					position = { @rightbutton_x @[rightbutton_y + 240] }
					size = { 200 40 }
					text = "Reload Hat Textures"
					onclick = "[ExecuteConsoleCommand('reload texture hat')]"
					fontcolor = { 1 1 1 1 }
				}		
				button = {
					using = editor_button
					position = { @rightbutton_x @[rightbutton_y + 280] }
					size = { 200 40 }
					text = "Reload Assets"
					onclick = "[ExecuteConsoleCommand('reload assets')]"
					fontcolor = { 1 1 1 1 }
				}
				button = {
					using = editor_button
					position = { @rightbutton_x @[rightbutton_y + 320] }
					size = { 200 40 }
					text = "Reload Textures"
					onclick = "[ExecuteConsoleCommand('reload texture')]"
					fontcolor = { 1 1 1 1 }
				}
				button = {
					using = editor_button
					position = { @rightbutton_x @[rightbutton_y + 360] }
					size = { 200 40 }
					text = "Show Female"
					onclick = "[GetVariableSystem.Toggle('show_females')]"
					fontcolor = { 1 1 1 1 }
				}
				button = {
					using = editor_button
					position = { @rightbutton_x @[rightbutton_y + 400] }
					size = { 200 40 }
					text = "Show Man"
					onclick = "[GetVariableSystem.Toggle('show_males')]"
					fontcolor = { 1 1 1 1 }
				}
				button = {
					visible = "[GetVariableSystem.Exists('pe_additional_options')]"
					using = editor_button
					position = { @rightbutton_x @[rightbutton_y + 440] }
					size = { 200 40 }
					text = "Less Options"
					onclick = "[GetVariableSystem.Toggle('pe_additional_options')]"
					fontcolor = { 1 1 1 1 }
				}
			}
			##############################################
			container = {
				name = "dna_string"
				visible = "[GetVariableSystem.Exists('pe_show_dna_string')]"
				textbox = {
					position = { 10 30 }
					size = { 200 40 }
					using = FontNormal
					text = "Character DNA:"
				}
				
				textbox = {
					position = { 10 25 }
					size = { 950 160 }
					using = FontNormal
					text = "[PortraitEditorWindow.GetDNA]"
					multiline = yes
					fontsize = 12
				}
			}
		}
		container = {
			name = "male_buttons"
			visible = "[Not(GetVariableSystem.Exists('show_males'))]"
			button = {
				using = editor_button
				name = "preview"
				position = { 995 221 }
				size = { 80 30 }
				text = "3D View"
				align = center|nobaseline
				onclick = "[PortraitEditorWindow.Open3dView('male')]"
				fontcolor = { 1 1 1 1 }
			}
			button = {
				using = editor_button
				position = { 995 251 }
				size = { 80 30 }
				text = "Pop out"
				align = center|nobaseline
				onclick = "[GetVariableSystem.Toggle('pe_male_popout')]"
				fontcolor = { 1 1 1 1 }
			}
		}
		container = {
			name = "female_buttons"
			visible = "[Not(GetVariableSystem.Exists('show_females'))]"
			button = {
				using = editor_button
				position = { 995 530 }
				size = { 80 30 }
				text = "3D View"
				align = center|nobaseline
				onclick = "[PortraitEditorWindow.Open3dView('female')]"
				fontcolor = { 1 1 1 1 }
			}
			button = {
				using = editor_button
				position = { 995 560 }
				size = { 80 30 }
				text = "Pop out"
				align = center|nobaseline
				onclick = "[GetVariableSystem.Toggle('pe_female_popout')]"
				fontcolor = { 1 1 1 1 }
			}
		}
		container = {
			name = portraits_cotainer
			position = { 0 -10 }
			container = {
				name = "male_container"
				visible = "[Not(GetVariableSystem.Exists('show_males'))]"
				container = {
					visible = "[GetVariableSystem.Exists('pe_male_popout')]"
					name = portraits_container_male
					position = { 100 210 }
					
					button = {
						name = "portrait_icon_male_150"
						using = portrait_150
						pop_out = yes
						datacontext = [PortraitEditorWindow.GetCharacter]
						position = { 255 0 }
						parentanchor = top|left
						portrait_texture = "[PortraitEditorWindow.GetPortraitTexture('male')]"
						frame_tier = 5
						tooltip_enabled = no
						alwaystransparent = no
					}
					
					button = {
						name = "portrait_icon_male_100"
						using = portrait_100
						pop_out = yes
						datacontext = [PortraitEditorWindow.GetCharacter]
						position = { 438 0 }
						parentanchor = top|left
						portrait_texture = "[PortraitEditorWindow.GetPortraitTexture('male')]"
						frame_tier = 5
						tooltip_enabled = no
						alwaystransparent = no
					}
					
					button = {
						name = "portrait_icon_male_80"
						using = portrait_80
						pop_out = yes
						datacontext = [PortraitEditorWindow.GetCharacter]
						position = { 579 0 }
						parentanchor = top|left
						portrait_texture = "[PortraitEditorWindow.GetPortraitTexture('male')]"
						frame_tier = 2
						tooltip_enabled = no
						alwaystransparent = no
					}
					
					button = {
						name = "portrait_icon_male_60"
						using = portrait_60
						pop_out = yes
						datacontext = [PortraitEditorWindow.GetCharacter]
						position = { 680 0 }
						parentanchor = top|left
						portrait_texture = "[PortraitEditorWindow.GetPortraitTexture('male')]"
						frame_tier = 3
						tooltip_enabled = no
						alwaystransparent = no
					}
					
					button = {
						name = "portrait_icon_male_50"
						using = portrait_50
						pop_out = yes
						datacontext = [PortraitEditorWindow.GetCharacter]
						position = { 765 0 }
						parentanchor = top|left
						portrait_texture = "[PortraitEditorWindow.GetPortraitTexture('male')]"
						frame_tier = 3
						tooltip_enabled = no
						alwaystransparent = no
					}
					
					button = {
						name = "portrait_icon_male_40"
						using = portrait_40
						pop_out = yes
						datacontext = [PortraitEditorWindow.GetCharacter]
						position = { 825 0 }
						parentanchor = top|left
						portrait_texture = "[PortraitEditorWindow.GetPortraitTexture('male')]"
						frame_tier = 3
						tooltip_enabled = no
						alwaystransparent = no
					}
				}
				
				container = {
					visible = "[Not(GetVariableSystem.Exists('pe_male_popout'))]"
					name = portraits_container_male_no_pop
					position = { 350 210 }
					
					button = {
						name = "portrait_icon_male_150"
						using = portrait_150_no_pop
						datacontext = [PortraitEditorWindow.GetCharacter]
						position = { 449 -8 }
						parentanchor = bottom|left
						portrait_texture = "[PortraitEditorWindow.GetPortraitTexture('male')]"
						frame_tier = 5
						tooltip_enabled = no
						alwaystransparent = no
					}
					
					button = {
						name = "portrait_icon_male_100"
						using = portrait_100_no_pop
						datacontext = [PortraitEditorWindow.GetCharacter]
						position = { 307 -12 }
						parentanchor = bottom|left
						portrait_texture = "[PortraitEditorWindow.GetPortraitTexture('male')]"
						frame_tier = 5
						tooltip_enabled = no
						alwaystransparent = no
					}
					
					button = {
						name = "portrait_icon_male_80"
						using = portrait_80_no_pop
						#using = portrait_80
						#pop_out = yes
						datacontext = [PortraitEditorWindow.GetCharacter]
						position = { 203 -17 }
						parentanchor = bottom|left
						portrait_texture = "[PortraitEditorWindow.GetPortraitTexture('male')]"
						frame_tier = 2
						tooltip_enabled = no
						alwaystransparent = no
					}
					
					button = {
						name = "portrait_icon_male_60"
						using = portrait_60_no_pop
						datacontext = [PortraitEditorWindow.GetCharacter]
						position = { 118 -20 }
						parentanchor = bottom|left
						portrait_texture = "[PortraitEditorWindow.GetPortraitTexture('male')]"
						frame_tier = 3
						tooltip_enabled = no
						alwaystransparent = no
					}
					
					button = {
						name = "portrait_icon_male_50"
						using = portrait_50_no_pop
						#pop_out = yes
						datacontext = [PortraitEditorWindow.GetCharacter]
						position = { 53 -22 }
						parentanchor = bottom|left
						portrait_texture = "[PortraitEditorWindow.GetPortraitTexture('male')]"
						frame_tier = 3
						tooltip_enabled = no
						alwaystransparent = no
					}
					
					button = {
						name = "portrait_icon_male_40"
						using = portrait_40_no_pop
						#pop_out = yes
						datacontext = [PortraitEditorWindow.GetCharacter]
						position = { 7 -25 }
						parentanchor = bottom|left
						portrait_texture = "[PortraitEditorWindow.GetPortraitTexture('male')]"
						frame_tier = 3
						tooltip_enabled = no
						alwaystransparent = no
					}
				}
			}
			container = {
				name = "female_container"
				visible = "[Not(GetVariableSystem.Exists('show_females'))]"
				container = {
					visible = "[Not(GetVariableSystem.Exists('pe_female_popout'))]"
					name = portraits_container_female
					position = { 100 600 }
					
					button = {
						name = "portrait_icon_female_150"
						using = portrait_150
						pop_out = yes
						datacontext = [PortraitEditorWindow.GetCharacter]
						position = { 255 0 }
						parentanchor = top|left
						portrait_texture = "[PortraitEditorWindow.GetPortraitTexture('female')]"
						frame_tier = 5
						tooltip_enabled = no
						alwaystransparent = no
					}
					
					button = {
						name = "portrait_icon_female_100"
						using = portrait_100
						pop_out = yes
						datacontext = [PortraitEditorWindow.GetCharacter]
						position = { 438 0 }
						parentanchor = top|left
						portrait_texture = "[PortraitEditorWindow.GetPortraitTexture('female')]"
						frame_tier = 5
						tooltip_enabled = no
						alwaystransparent = no
					}
					
					button = {
						name = "portrait_icon_female_80"
						using = portrait_80
						pop_out = yes
						datacontext = [PortraitEditorWindow.GetCharacter]
						position = { 579 0 }
						parentanchor = top|left
						#size = { 80 80 }
						portrait_texture = "[PortraitEditorWindow.GetPortraitTexture('female')]"
						#mask = "gfx/portraits/portrait_mask_pop.dds"
						#background_texture = "gfx/portraits/portrait_background_d.dds"
						#texture = "gfx/portraits/portrait_frame_80.dds"
						#framesize = { 110 110 }
						frame_tier = 4
						tooltip_enabled = no
						alwaystransparent = no
					}
					
					button = {
						name = "portrait_icon_female_60"
						using = portrait_60
						pop_out = yes
						datacontext = [PortraitEditorWindow.GetCharacter]
						position = { 680 0 }
						parentanchor = top|left
						portrait_texture = "[PortraitEditorWindow.GetPortraitTexture('female')]"
						#background_texture = "gfx/portraits/portrait_background_d.dds"
						frame_tier = 3
						tooltip_enabled = no
						alwaystransparent = no
					}
					
					button = {
						name = "portrait_icon_female_50"
						using = portrait_50
						pop_out = yes
						datacontext = [PortraitEditorWindow.GetCharacter]
						position = { 765 0 }
						parentanchor = top|left
						portrait_texture = "[PortraitEditorWindow.GetPortraitTexture('female')]"
						#background_texture = "gfx/portraits/portrait_background_d.dds"
						frame_tier = 3
						tooltip_enabled = no
						alwaystransparent = no
					}
					
					button = {
						name = "portrait_icon_female_40"
						using = portrait_40
						pop_out = yes
						datacontext = [PortraitEditorWindow.GetCharacter]
						position = { 825 0 }
						parentanchor = top|left
						portrait_texture = "[PortraitEditorWindow.GetPortraitTexture('female')]"
						#background_texture = "gfx/portraits/portrait_background_d.dds"
						frame_tier = 3
						tooltip_enabled = no
						alwaystransparent = no
					}
				}
				container = {
					visible = "[GetVariableSystem.Exists('pe_female_popout')]"
					name = portraits_container_female_no_pop
					position = { 350 600 }
					
					button = {
						name = "portrait_icon_female_150"
						using = portrait_150_no_pop
						#pop_out = yes
						datacontext = [PortraitEditorWindow.GetCharacter]
						position = { 449 -8 }
						parentanchor = bottom|left
						portrait_texture = "[PortraitEditorWindow.GetPortraitTexture('female')]"
						frame_tier = 5
						tooltip_enabled = no
						alwaystransparent = no
					}
					button = {
						name = "portrait_icon_female_100"
						using = portrait_100_no_pop
						#pop_out = yes
						datacontext = [PortraitEditorWindow.GetCharacter]
						position = { 307 -12 }
						parentanchor = bottom|left
						portrait_texture = "[PortraitEditorWindow.GetPortraitTexture('female')]"
						frame_tier = 5
						tooltip_enabled = no
						alwaystransparent = no
					}
					
					button = {
						name = "portrait_icon_female_80"
						using = portrait_80_no_pop
						#pop_out = yes
						datacontext = [PortraitEditorWindow.GetCharacter]
						position = { 203 -17 }
						parentanchor = bottom|left
						#size = { 80 80 }
						portrait_texture = "[PortraitEditorWindow.GetPortraitTexture('female')]"
						#mask = "gfx/portraits/portrait_mask_pop.dds"
						#background_texture = "gfx/portraits/portrait_background_d.dds"
						#texture = "gfx/portraits/portrait_frame_80.dds"
						#framesize = { 110 110 }
						frame_tier = 4
						tooltip_enabled = no
						alwaystransparent = no
					}
					
					button = {
						name = "portrait_icon_female_60"
						using = portrait_60_no_pop
						#pop_out = yes
						datacontext = [PortraitEditorWindow.GetCharacter]
						position = { 118 -20 }
						parentanchor = bottom|left
						portrait_texture = "[PortraitEditorWindow.GetPortraitTexture('female')]"
						#background_texture = "gfx/portraits/portrait_background_d.dds"
						frame_tier = 3
						tooltip_enabled = no
						alwaystransparent = no
					}
					
					button = {
						name = "portrait_icon_female_50"
						using = portrait_50_no_pop
						#pop_out = yes
						datacontext = [PortraitEditorWindow.GetCharacter]
						position = { 53 -22 }
						parentanchor = bottom|left
						portrait_texture = "[PortraitEditorWindow.GetPortraitTexture('female')]"
						#background_texture = "gfx/portraits/portrait_background_d.dds"
						frame_tier = 3
						tooltip_enabled = no
						alwaystransparent = no
					}
					
					button = {
						name = "portrait_icon_female_40"
						using = portrait_40_no_pop
						#pop_out = yes
						datacontext = [PortraitEditorWindow.GetCharacter]
						position = { 7 -25 }
						parentanchor = bottom|left
						portrait_texture = "[PortraitEditorWindow.GetPortraitTexture('female')]"
						#background_texture = "gfx/portraits/portrait_background_d.dds"
						frame_tier = 3
						tooltip_enabled = no
						alwaystransparent = no
					}
				}
			}
		}
		@left_box_x_position = 10
		@left_box_y_position = 25
		widget = {
			position = { @left_box_x_position @left_box_y_position }
			size = { 300 860 }
			visible = yes
			
			textbox = {
				position = { 0 10 }
				size = { 150 25 }
				fontsize = 25
				font = "OpenSans"
				parentanchor = top|left
				using = FontNormal
				text = "Settings"
			}
			
			textbox = {
				position = { 0 40 }
				size = { 150 25 }
				fontsize = 16
				using = FontNormal
				parentanchor = top|left
				text = "Ethnicity"
			}
			
			button = {
				using = editor_button
				position = { 0 71 }
				size = { 16 18 }
				parentanchor = top|left
				font = "OpenSans"
				text = "<"
				align = center|nobaseline
				onclick = "[PortraitEditorWindow.OnChangeEthnicityLeft]"
				fontcolor = { 1 1 1 1 }
			}
			
			button = {
				using = editor_button
				position = { 214 71 }
				size = { 16 18 }
				parentanchor = top|left
				font = "OpenSans"
				text = ">"
				align = center|nobaseline
				onclick = "[PortraitEditorWindow.OnChangeEthnicityRight]"
				fontcolor = { 1 1 1 1 }
			}
			
			dropDown = {
				alwaystransparent = no
				name = "ethnicity_dropdown"
				size = { 40 40 }
				position = { 15 70 }
				
				active_item = {
					widget = {
						alwaystransparent = no
						size = { 200 20 }
						
						button = {
							size = { 200 18 }
							position = { 0 1 }
							texture = "gfx/editor_gui/editor_dropdown.dds"
							spriteType = CorneredStretched
							gfxtype = framedbuttongfx
							effectname = "NoHighlight"
							spriteborder = { 4 4 }
							spriteborder_right = 24
							button_trigger = none
							framesize = { 32 16 }
							upframe = 1
							downframe = 2
							overframe = 3
							disableframe = 4
						}
						
						textbox = {
							using = editor_text
							text = "[EthnicityItem.GetName]"
							position = { 10 0 }
							size = { 200 18 }
							fontsize = 12
						}
					}
				}
				
				item = {
					widget = {
						alwaystransparent = no
						size = { 180 20 }
						
						button = {
							size = { 180 18 }
							texture = "gfx/editor_gui/editor_dropdown_item.dds"
							spriteType = CorneredTiled
							spriteborder = { 1 1 }
							gfxtype = framedbuttongfx
							framesize = { 8 8 }
							upframe = 1
							downframe = 2
							overframe = 2
							disableframe = 1
							button_trigger = none
						}
						
						textbox = {
							using = editor_text
							text = "[EthnicityItem.GetName]"
							position = { 10 0 }
							size = { 180 18 }
							fontsize = 12
						}
					}
				}
				
				list = {
					scrollarea = {
						position = { 2 20 }
						maximumsize = { 200 210 }
						autoresizescrollarea = yes
						
						background = {
							margin = { 2 2 }
							margin_bottom = 6
							margin_right = 6
							texture = "gfx/editor_gui/editor_dropdown_list.dds"
							spriteType = CorneredStretched
							spriteborder = { 6 6 }
							spriteborder_right = 8
							spriteborder_bottom = 8
							shaderfile = "gfx/FX/pdxgui_default.shader"
						}
						
						scrollwidget = {
							fixedgridbox = {
								alwaystransparent = no
								addcolumn = 175
								addrow = 18
							}
						}
						
						scrollbar_vertical = {
							using = editor_vertical_scrollbar
						}
						
						scrollbar_horizontal = {
							using = editor_horizontal_scrollbar
						}
					}
				}
			}
			
			button = {
				using = editor_button
				position = { 0 95 }
				size = { 120 20 }
				fontsize = 12
				parentanchor = top|left
				text = "Randomize DNA"
				shortcut = "outliner"
				onclick = "[PortraitEditorWindow.OnGenerateFromEthnicity]"
				fontcolor = { 1 1 1 1 }
			}
			
			button = {
				using = editor_button
				position = { 0 120 }
				size = { 180 20 }
				fontsize = 12
				parentanchor = top|left
				text = "Randomize except template"
				onclick = "[PortraitEditorWindow.OnGenerateFromEthnicityExcept]"
				fontcolor = { 1 1 1 1 }
			}
			
			button = {
				using = editor_button
				position = { 0 145 }
				size = { 140 20 }
				fontsize = 12
				parentanchor = top|left
				text = "Reset DNA to neutral"
				onclick = "[PortraitEditorWindow.OnResetDNA]"
				fontcolor = { 1 1 1 1 }
			}
			
			textbox = {
				position = { 0 160 }
				size = { 150 25 }
				fontsize = 16
				using = FontNormal
				parentanchor = top|left
				text = "Age: [PortraitEditorWindow.GetAge]"
			}
			scrollbar = {
				name = "age_scrollbar"
				size = { 220 14 }
				position = { 0 190 }
				direction = horizontal
				min = 0
				max = 1
				step = 0.005
				wheelstep = 0.005
				value = "[PortraitEditorWindow.GetAgePercent]"
				onvaluechanged = "[PortraitEditorWindow.OnAgeChanged]"
				
				track = {
					using = editor_scrollbar_track
				}
				
				slider = {
					using = editor_scrollbar_slider
				}
				
				dec_button = {
					button = {
						using = editor_scrollbar_button
						upframe = 9
						downframe = 10
						overframe = 11
						disableframe = 12
					}
				}
				
				inc_button = {
					button = {
						using = editor_scrollbar_button
						upframe = 13
						downframe = 14
						overframe = 15
						disableframe = 16
					}
				}
			}
			
			textbox = {
				position = { 0 200 }
				size = { 150 25 }
				fontsize = 16
				using = FontNormal
				parentanchor = top|left
				text = "Gene"
			}
			
			button = {
				using = editor_button
				position = { 0 231 }
				size = { 16 18 }
				parentanchor = top|left
				font = "OpenSans"
				text = "<"
				align = center|nobaseline
				onclick = "[PortraitEditorWindow.OnChangeGeneLeft]"
				fontcolor = { 1 1 1 1 }
			}
			
			button = {
				using = editor_button
				position = { 214 231 }
				size = { 16 18 }
				parentanchor = top|left
				font = "OpenSans"
				text = ">"
				align = center|nobaseline
				onclick = "[PortraitEditorWindow.OnChangeGeneRight]"
				fontcolor = { 1 1 1 1 }
			}
			
			dropDown = {
				alwaystransparent = no
				name = "gene_dropdown"
				#size = { 40 20 }
				position = { 15 230 }
				
				active_item = {
					widget = {
						alwaystransparent = no
						size = { 200 20 }
						
						button = {
							size = { 200 18 }
							position = { 0 1 }
							texture = "gfx/editor_gui/editor_dropdown.dds"
							spriteType = CorneredStretched
							gfxtype = framedbuttongfx
							effectname = "NoHighlight"
							spriteborder = { 4 4 }
							spriteborder_right = 24
							button_trigger = none
							framesize = { 32 16 }
							upframe = 1
							downframe = 2
							overframe = 3
							disableframe = 4
						}
						
						textbox = {
							using = editor_text
							text = "[GeneItem.GetName]"
							position = { 10 0 }
							size = { 200 18 }
							fontsize = 12
						}
					}
				}
				
				item = {
					widget = {
						alwaystransparent = no
						size = { 180 20 }
						
						button = {
							size = { 180 18 }
							texture = "gfx/editor_gui/editor_dropdown_item.dds"
							spriteType = CorneredTiled
							spriteborder = { 1 1 }
							gfxtype = framedbuttongfx
							framesize = { 8 8 }
							upframe = 1
							downframe = 2
							overframe = 2
							disableframe = 1
							button_trigger = none
						}
						
						textbox = {
							using = editor_text
							text = "[GeneItem.GetName]"
							position = { 10 0 }
							size = { 180 18 }
							fontsize = 12
						}
					}
				}
				
				list = {
					scrollarea = {
						position = { 2 20 }
						maximumsize = { 200 210 }
						autoresizescrollarea = yes
						
						background = {
							margin = { 2 2 }
							margin_bottom = 6
							margin_right = 6
							texture = "gfx/editor_gui/editor_dropdown_list.dds"
							spriteType = CorneredStretched
							spriteborder = { 6 6 }
							spriteborder_right = 8
							spriteborder_bottom = 8
							shaderfile = "gfx/FX/pdxgui_default.shader"
						}
						
						scrollwidget = {
							fixedgridbox = {
								alwaystransparent = no
								addcolumn = 175
								addrow = 18
							}
						}
						
						scrollbar_vertical = {
							using = editor_vertical_scrollbar
						}
						
						scrollbar_horizontal = {
							using = editor_horizontal_scrollbar
						}
					}
				}
			}
			
			flowcontainer = {
				position = { 0 250 }
				direction = vertical
				ignoreinvisible = yes
				
				textbox = {
					size = { 150 20 }
					fontsize = 14
					using = FontNormal
					parentanchor = top|left
					text = "Gene template"
					visible = "[PortraitEditorWindow.IsSelectedMorphGene]"
				}
				textbox = {
					size = { 150 20 }
					fontsize = 14
					using = FontNormal
					parentanchor = top|left
					text = "Sub group"
					visible = "[PortraitEditorWindow.IsSelectedAccessoryGene]"
				}
				
				widget = {
					size = { 250 20 }
					visible = "[Not(PortraitEditorWindow.IsSelectedColorGene)]"
					
					button = {
						using = editor_button
						position = { -5 9 }
						size = { 16 18 }
						parentanchor = top|left
						font = "OpenSans"
						text = "<"
						align = center|nobaseline
						onclick = "[PortraitEditorWindow.OnChangeSubGeneItemLeft]"
						fontcolor = { 1 1 1 1 }
					
					}
					
					button = {
						using = editor_button
						position = { 209 9 }
						size = { 16 18 }
						parentanchor = top|left
						font = "OpenSans"
						text = ">"
						align = center|nobaseline
						onclick = "[PortraitEditorWindow.OnChangeSubGeneItemRight]"
						fontcolor = { 1 1 1 1 }
					#visible = "[PortraitEditorWindow.IsSelectedMorphGene]"
					}
					
					dropDown = {
						alwaystransparent = no
						name = "gene_templates_dropdown"
						size = { 300 20 }
						#visible = "[PortraitEditorWindow.IsSelectedMorphGene]"
						position = { 10 8 }
						
						active_item = {
							widget = {
								alwaystransparent = no
								size = { 300 20 }
								
								button = {
									size = { 300 18 }
									position = { 0 1 }
									texture = "gfx/editor_gui/editor_dropdown.dds"
									spriteType = CorneredStretched
									gfxtype = framedbuttongfx
									effectname = "NoHighlight"
									spriteborder = { 4 4 }
									spriteborder_right = 24
									button_trigger = none
									framesize = { 32 16 }
									upframe = 1
									downframe = 2
									overframe = 3
									disableframe = 4
								}
								
								textbox = {
									using = editor_text
									text = "[GeneItem.GetName]"
									position = { 10 0 }
									size = { 300 18 }
									fontsize = 12
								}
							}
						}
						
						item = {
							widget = {
								alwaystransparent = no
								size = { 280 20 }
								
								button = {
									size = { 280 18 }
									texture = "gfx/editor_gui/editor_dropdown_item.dds"
									spriteType = CorneredTiled
									spriteborder = { 1 1 }
									gfxtype = framedbuttongfx
									framesize = { 8 8 }
									upframe = 1
									downframe = 2
									overframe = 2
									disableframe = 1
									button_trigger = none
								}
								
								textbox = {
									using = editor_text
									text = "[GeneItem.GetName]"
									position = { 10 0 }
									size = { 280 18 }
									fontsize = 12
								}
							}
						}
						
						list = {
							scrollarea = {
								position = { 2 20 }
								maximumsize = { 280 210 }
								autoresizescrollarea = yes
								
								background = {
									margin = { 2 2 }
									margin_bottom = 6
									margin_right = 6
									texture = "gfx/editor_gui/editor_dropdown_list.dds"
									spriteType = CorneredStretched
									spriteborder = { 6 6 }
									spriteborder_right = 8
									spriteborder_bottom = 8
									shaderfile = "gfx/FX/pdxgui_default.shader"
								}
								
								scrollwidget = {
									fixedgridbox = {
										alwaystransparent = no
										addcolumn = 275
										addrow = 18
									}
								}
								
								scrollbar_vertical = {
									using = editor_vertical_scrollbar
								}
								
								scrollbar_horizontal = {
									using = editor_horizontal_scrollbar
								}
							}
						}
					}
				}
				
				textbox = {
					size = { 150 15 }
					parentanchor = top|left
					visible = "[Not(PortraitEditorWindow.IsSelectedColorGene)]"
				}
				
				textbox = {
					size = { 150 25 }
					fontsize = 13
					using = FontNormal
					parentanchor = top|left
					text = "Strength: [PortraitEditorWindow.GetSelectedGeneTemplateStrength|%1]"
					visible = "[Not(PortraitEditorWindow.IsSelectedColorGene)]"
				}
				
				scrollbar = {
					name = "strength_scrollbar"
					size = { 220 14 }
					direction = horizontal
					visible = "[Not(PortraitEditorWindow.IsSelectedColorGene)]"
					min = 0
					max = 1
					step = 0.005
					wheelstep = 0.005
					
					track = {
						using = editor_scrollbar_track
					}
					
					slider = {
						using = editor_scrollbar_slider
					}
					
					dec_button = {
						button = {
							using = editor_scrollbar_button
							upframe = 9
							downframe = 10
							overframe = 11
							disableframe = 12
						}
					}
					
					inc_button = {
						button = {
							using = editor_scrollbar_button
							upframe = 13
							downframe = 14
							overframe = 15
							disableframe = 16
						}
					}
				}
				
				textbox = {
					size = { 150 60 }
					using = FontNormal
					fontsize = 11
					parentanchor = top|left
					text = "[PortraitEditorWindow.GetCurrentGeneAccessoryString]"
					visible = "[PortraitEditorWindow.IsSelectedAccessoryGene]"
				}
				
				textbox = {
					size = { 150 20 }
					fontsize = 14
					using = FontNormal
					parentanchor = top|left
					text = "Color Coordinates"
					visible = "[PortraitEditorWindow.IsSelectedColorGene]"
				}
				
				textbox = {
					size = { 150 20 }
					fontsize = 13
					using = FontNormal
					parentanchor = top|left
					text = "X: [PortraitEditorWindow.GetSelectedGeneTemplateColorX|%1]"
					visible = "[PortraitEditorWindow.IsSelectedColorGene]"
				}
				
				scrollbar = {
					name = "colorx_scrollbar"
					size = { 220 14 }
					direction = horizontal
					visible = "[PortraitEditorWindow.IsSelectedColorGene]"
					min = 0
					max = 1
					step = 0.005
					wheelstep = 0.005
					
					track = {
						using = editor_scrollbar_track
					}
					
					slider = {
						using = editor_scrollbar_slider
					}
					
					dec_button = {
						button = {
							using = editor_scrollbar_button
							upframe = 9
							downframe = 10
							overframe = 11
							disableframe = 12
						}
					}
					
					inc_button = {
						button = {
							using = editor_scrollbar_button
							upframe = 13
							downframe = 14
							overframe = 15
							disableframe = 16
						}
					}
				}
				
				textbox = {
					size = { 150 20 }
					fontsize = 13
					using = FontNormal
					parentanchor = top|left
					text = "Y: [PortraitEditorWindow.GetSelectedGeneTemplateColorY|%1]"
					visible = "[PortraitEditorWindow.IsSelectedColorGene]"
				}
				
				scrollbar = {
					name = "colory_scrollbar"
					size = { 220 14 }
					direction = horizontal
					visible = "[PortraitEditorWindow.IsSelectedColorGene]"
					min = 0
					max = 1
					step = 0.005
					wheelstep = 0.005
					
					track = {
						using = editor_scrollbar_track
					}
					
					slider = {
						using = editor_scrollbar_slider
					}
					
					dec_button = {
						button = {
							using = editor_scrollbar_button
							upframe = 9
							downframe = 10
							overframe = 11
							disableframe = 12
						}
					}
					
					inc_button = {
						button = {
							using = editor_scrollbar_button
							upframe = 13
							downframe = 14
							overframe = 15
							disableframe = 16
						}
					}
				}
				widget = {
					size = { 300 65 }
					vbox = {
						margin_top = 10
						hbox = {
							spacing = 2
							layoutpolicy_horizontal = Growing
							textbox = {
								using = portrait_editor_slider_checkbox_text
								text = "Slider mode:"
								size = { 80 15 }
								layoutpolicy_horizontal = Fixed
							}
							checkbutton = {
								using = editor_checkbutton
								checked = "[PortraitEditorWindow.IsSliderMode('none')]"
								onclick = "[PortraitEditorWindow.SetSliderMode('none')]"
							}
							textbox = {
								using = portrait_editor_slider_checkbox_text
								text = "None"
							}
							checkbutton = {
								using = editor_checkbutton
								checked = "[PortraitEditorWindow.IsSliderMode('genes')]"
								onclick = "[PortraitEditorWindow.SetSliderMode('genes')]"
							}
							textbox = {
								using = portrait_editor_slider_checkbox_text
								text = "Genes"
							}
							checkbutton = {
								using = editor_checkbutton
								checked = "[PortraitEditorWindow.IsSliderMode('attributes')]"
								onclick = "[PortraitEditorWindow.SetSliderMode('attributes')]"
							}
							textbox = {
								using = portrait_editor_slider_checkbox_text
								text = "Attributes"
								size = { 50 15 }
							}
						}
						hbox = {
							layoutpolicy_horizontal = Growing
							spacing = 2
							textbox = {
								size = { 40 15 }
								fontsize = 13
								using = FontNormal
								align = left|nobaseline
								text = "Using:"
								layoutpolicy_horizontal = Fixed
							}
							checkbutton = {
								using = editor_checkbutton
								checked = "[PortraitEditorWindow.IsSliderPortraitType('male')]"
								onclick = "[PortraitEditorWindow.SetSliderPortraitType('male')]"
							}
							textbox = {
								using = portrait_editor_slider_checkbox_text
								text = "Male"
							}
							checkbutton = {
								using = editor_checkbutton
								checked = "[PortraitEditorWindow.IsSliderPortraitType('female')]"
								onclick = "[PortraitEditorWindow.SetSliderPortraitType('female')]"
							}
							textbox = {
								using = portrait_editor_slider_checkbox_text
								text = "Female"
							}
							checkbutton = {
								using = editor_checkbutton
								enabled = yes
								checked = "[PortraitEditorWindow.IsSliderPortraitType('boy')]"
								onclick = "[PortraitEditorWindow.SetSliderPortraitType('boy')]"
							}
							textbox = {
								using = portrait_editor_slider_checkbox_text
								enabled = yes
								text = "Boy"
							}
							checkbutton = {
								using = editor_checkbutton
								enabled = yes
								checked = "[PortraitEditorWindow.IsSliderPortraitType('girl')]"
								onclick = "[PortraitEditorWindow.SetSliderPortraitType('girl')]"
							}
							textbox = {
								using = portrait_editor_slider_checkbox_text
								enabled = yes
								text = "Girl"
							}
						}
						
						hbox = {
							layoutpolicy_horizontal = Growing
							spacing = 2
							button = {
								using = editor_button
								size = { 60 20 }
								fontsize = 12
								text = "Reset ALL"
								layoutpolicy_horizontal = Growing
								onclick = "[PortraitEditorWindow.ResetSliders]"
								enabled = "[PortraitEditorWindow.HasAnySliders]"
								fontcolor = { 1 1 1 1 }
							}
						}
					}
				}
				textbox = {
					size = { 300 40 }
					fontsize = 14
					using = FontNormal
					align = center|nobaseline
					text = "No sliders available"
					enabled = no
					visible = "[Not(PortraitEditorWindow.HasAnySliders)]"
				}
				scrollarea = {
					size = { 300 50 }
					maximumsize = { 300 475 }
					autoresizescrollarea = yes
					scrollbarpolicy_horizontal = always_off
					alwaystransparent = no
					
					scrollwidget = {
						fixedgridbox = {
							name = "attribute_sliders"
							position = { 0 0 }
							addcolumn = 300
							addrow = 17
							setitemsizefromcell = yes
							item = {
								widget = {
									enabled = "[Not(GetPortraitEditorWindow.IsSliderMode('none'))]"
									hbox = {
										spacing = 5
										textbox = {
											#position = { -20 2 }
											size = { 100 20 }
											fontsize = 10
											using = FontNormal
											text = "[Attribute.GetName]"
											tooltip = "[Attribute.GetName]"
											align = right|nobaseline
										}
										
										scrollbar = {
											name = "value"
											#position = { 55 5 }
											#size = { 160 14 }
											layoutpolicy_horizontal = Growing
											direction = horizontal
											min = "[GetPortraitEditorWindow.GetSliderMinValue]"
											max = "[GetPortraitEditorWindow.GetSliderMaxValue]"
											step = 0.0039
											wheelstep = 0
											value = "[Attribute.GetValue]"
											onvaluechanged = "[Attribute.OnValueChanged]"
											
											track = {
												using = editor_scrollbar_track
											}
											
											slider = {
												using = editor_scrollbar_slider
											}
											
											dec_button = {
												button = {
													using = editor_scrollbar_button
													upframe = 9
													downframe = 10
													overframe = 11
													disableframe = 12
												}
											}
											
											inc_button = {
												button = {
													using = editor_scrollbar_button
													upframe = 13
													downframe = 14
													overframe = 15
													disableframe = 16
												}
											}
										}
										
										textbox = {
											#position = { 215 2 }
											size = { 45 20 }
											fontsize = 10
											using = FontNormal
											text = "[Attribute.GetValue|2]"
											align = left|nobaseline
										}
									}
								}
							}
						}
					}
					
					scrollbar_vertical = {
						using = editor_vertical_scrollbar
					}
					
					scrollbar_horizontal = {
						using = editor_horizontal_scrollbar
					}
				}
				widget = {size = { 1 10 }}
			}
		}
	}
	
	widget = {
		size = { 100% 100% }
		name = "preview_tab1"
		visible = "[PortraitEditorWindow.IsCurrentContentTab('preview_tab1')]"
		button = {
			using = editor_button
			text = "Editor"
			parentanchor = top|right
			size = { 200 40 }
			onclick = "[PortraitEditorWindow.SetContentTab('editor_tab')]"
			forcedown = "[PortraitEditorWindow.IsCurrentContentTab('editor_tab')]"
			fontcolor = { 1 1 1 1 }
		}
	}
	
	widget = {
		size = { 100% 100% }
		name = "preview_tab2"
		visible = "[PortraitEditorWindow.IsCurrentContentTab('preview_tab2')]"
		button = {
			using = editor_button
			text = "Editor"
			parentanchor = top|right
			size = { 200 40 }
			onclick = "[PortraitEditorWindow.SetContentTab('editor_tab')]"
			forcedown = "[PortraitEditorWindow.IsCurrentContentTab('editor_tab')]"
			fontcolor = { 1 1 1 1 }
		}
	}
	
	
	widget = {
		# Changing anything in this tab crashes the game
		size = { 100% 100% }
		name = "children_tab"
		visible = "[PortraitEditorWindow.IsCurrentContentTab('children_tab')]"
		
		textbox = {
			position = { 10 2 }
			size = { 200 20 }
			using = FontNormal
			text = "Child Portrait Previews"
		}
		flowcontainer = {
			position = { 0 40 }
			widget = {
				name = "parent_1"
				using = childgenerator_parent_widget
			}
			widget = {
				name = "parent_2"
				using = childgenerator_parent_widget
			}
		}
		button = {
			using = editor_button
			text = "Generate"
			position = { -145 40 }
			size = { 90 30 }
			parentanchor = top|right
			onclick = "[ChildGenerator.Regenerate]"
		}
		button = {
			using = editor_button
			text = "Editor"
			position = { -245 40 }
			parentanchor = top|right
			size = { 200 40 }
			onclick = "[PortraitEditorWindow.SetContentTab('editor_tab')]"
			forcedown = "[PortraitEditorWindow.IsCurrentContentTab('editor_tab')]"
			fontcolor = { 1 1 1 1 }
		}
		textbox = {
			position = { 0 70 }
			size = { 250 25 }
			fontsize = 16
			align = center
			using = FontNormal
			parentanchor = top|right
			text = "Random children ratio: [ChildGenerator.GetRandomChildrenRatio|%1]"
		}
		scrollbar = {
			size = { 220 14 }
			position = { -13 100 }
			parentanchor = top|right
			direction = horizontal
			min = 0
			max = 1
			step = 0.005
			wheelstep = 0.005
			value = "[ChildGenerator.GetRandomChildrenRatio]"
			onvaluechanged = "[ChildGenerator.OnRandomizedRatioChanged]"
			
			track = {
				using = editor_scrollbar_track
			}
			
			slider = {
				using = editor_scrollbar_slider
			}
			
			dec_button = {
				button = {
					using = editor_scrollbar_button
					upframe = 9
					downframe = 10
					overframe = 11
					disableframe = 12
				}
			}
			
			inc_button = {
				button = {
					using = editor_scrollbar_button
					upframe = 13
					downframe = 14
					overframe = 15
					disableframe = 16
				}
			}
		}
		
		textbox = {
			position = { 20 325 }
			size = { 250 25 }
			fontsize = 24
			#align = center
			using = FontNormal
			#parentanchor = top|left
			text = "1st Generation"
		}
		
		textbox = {
			position = { 20 530 }
			size = { 250 25 }
			fontsize = 24
			#align = center
			using = FontNormal
			#parentanchor = top|left
			text = "2nd Generation"
		}
		
		textbox = {
			position = { 20 730 }
			size = { 250 25 }
			fontsize = 24
			#align = center
			using = FontNormal
			#parentanchor = top|left
			text = "3rd Generation"
		}
		scrollarea = {
			position = { 200 230 }
			size = { 1312 800 }
			maximumsize = { 1300 680 }
			autoresizescrollarea = no
			scrollbarpolicy_horizontal = always_off
			alwaystransparent = no
			
			scrollwidget = {
				fixedgridbox = {
					position = { 0 0 }
					size = { 1300 680 }
					maximumsize = { 1300 680 }
					addcolumn = 0
					addrow = 200
					#setitemsizefromcell = yes
					datamodel = "[ChildGenerator.GetGenerationItems]"
					item = {
						widget = {
							size = { 1300 130 }
							icon = {
								size = { 100% 100% }
								shaderfile = "gfx/FX/pdxgui_default.shader"
								#	texture = "gfx/editor_gui/editor_dropdown_list.dds"
								spriteType = CorneredTiled
								spriteborder = { 8 8 }
							}
							fixedgridbox = {
								position = { 0 75 }
								addcolumn = 170
								addrow = 130
								size = { 1300 130 }
								datamodel = "[GenerationItem.GetChildPortraitItems]"
								flipdirection = yes
								setitemsizefromcell = yes
								item = {
									widget = {
										button = {
											using = preview_portrait_150
											position = { 0 5 }
											portrait_texture = "[GetPortraitTextureFromDna(ChildItem.GetDnaForTexture)]"
											frame_tier = 3
											parentanchor = bottom|left
											widgetanchor = bottom|left
											
											blockoverride "portrait_button_template_onclick" 
											{
												onclick = "[ChildItem.CopyDnaToClipboard]"
											}
											
											alwaystransparent = no
											tooltip_enabled = yes
											tooltip = "Click to copy DNA to clipboard"
										}
										textbox = {
											text = "#bold;color:{0.0,0.0,0.0} Random #!"
											using = FontNormal
											fontsize = 14
											size = { 95% 93% }
											align = bottom|right
											visible = "[ChildItem.IsRandomized]"
										}
										textbox = {
											text = "#bold Random #!"
											using = FontNormal
											position = { -2 -2 }
											fontsize = 14
											size = { 95% 93% }
											align = bottom|right
											visible = "[ChildItem.IsRandomized]"
										}
									}
								}
							}
						}
					}
				}
			}
			
			scrollbar_vertical = {
				using = editor_vertical_scrollbar
			}
			
			scrollbar_horizontal = {
				using = editor_horizontal_scrollbar
			}
		}
	}
}
